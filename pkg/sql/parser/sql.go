// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/auxten/postgresql-parser/pkg/sql/lex"
	"github.com/auxten/postgresql-parser/pkg/sql/privilege"
	"github.com/auxten/postgresql-parser/pkg/sql/sem/tree"
	"github.com/auxten/postgresql-parser/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:71

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:629
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10307

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 25,
	-2, 1111,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 70,
	187, 938,
	204, 938,
	219, 249,
	306, 249,
	315, 753,
	343, 249,
	352, 753,
	391, 753,
	415, 249,
	440, 753,
	-2, 0,
	-1, 75,
	219, 253,
	-2, 0,
	-1, 76,
	113, 1111,
	193, 1111,
	425, 1111,
	426, 1111,
	-2, 0,
	-1, 88,
	126, 1085,
	142, 1085,
	155, 1085,
	201, 1085,
	231, 1085,
	269, 1085,
	279, 1085,
	420, 1085,
	-2, 1056,
	-1, 120,
	132, 662,
	218, 662,
	309, 642,
	361, 642,
	408, 662,
	-2, 0,
	-1, 121,
	4, 1113,
	21, 1113,
	22, 1113,
	23, 1113,
	24, 1113,
	25, 1113,
	27, 1113,
	33, 1113,
	38, 1113,
	39, 1113,
	40, 1113,
	41, 1113,
	42, 1113,
	43, 1113,
	44, 1113,
	45, 1113,
	46, 1113,
	47, 1113,
	48, 1113,
	49, 1113,
	50, 1113,
	52, 1113,
	53, 1113,
	54, 1113,
	55, 1113,
	56, 1113,
	57, 1113,
	58, 1113,
	61, 1113,
	62, 1113,
	63, 1113,
	64, 1113,
	66, 1113,
	67, 1113,
	71, 1113,
	72, 1113,
	73, 1113,
	74, 1113,
	75, 1113,
	76, 1113,
	79, 1113,
	80, 1113,
	81, 1113,
	82, 1113,
	84, 1113,
	86, 1113,
	87, 1113,
	88, 1113,
	90, 1113,
	92, 1113,
	93, 1113,
	101, 1113,
	102, 1113,
	103, 1113,
	104, 1113,
	105, 1113,
	106, 1113,
	107, 1113,
	108, 1113,
	110, 1113,
	112, 1113,
	113, 1113,
	115, 1113,
	118, 1113,
	119, 1113,
	120, 1113,
	122, 1113,
	124, 1113,
	125, 1113,
	127, 1113,
	128, 1113,
	129, 1113,
	130, 1113,
	131, 1113,
	132, 1113,
	133, 1113,
	134, 1113,
	135, 1113,
	136, 1113,
	137, 1113,
	138, 1113,
	139, 1113,
	141, 1113,
	147, 1113,
	148, 1113,
	149, 1113,
	150, 1113,
	151, 1113,
	152, 1113,
	154, 1113,
	156, 1113,
	160, 1113,
	161, 1113,
	163, 1113,
	164, 1113,
	166, 1113,
	167, 1113,
	169, 1113,
	170, 1113,
	171, 1113,
	172, 1113,
	173, 1113,
	174, 1113,
	175, 1113,
	176, 1113,
	178, 1113,
	179, 1113,
	181, 1113,
	182, 1113,
	183, 1113,
	184, 1113,
	187, 1113,
	188, 1113,
	189, 1113,
	190, 1113,
	193, 1113,
	194, 1113,
	195, 1113,
	196, 1113,
	197, 1113,
	198, 1113,
	199, 1113,
	200, 1113,
	202, 1113,
	204, 1113,
	206, 1113,
	208, 1113,
	209, 1113,
	210, 1113,
	212, 1113,
	213, 1113,
	216, 1113,
	217, 1113,
	218, 1113,
	219, 1113,
	220, 1113,
	222, 1113,
	223, 1113,
	225, 1113,
	226, 1113,
	228, 1113,
	229, 1113,
	232, 1113,
	233, 1113,
	236, 1113,
	237, 1113,
	238, 1113,
	239, 1113,
	241, 1113,
	242, 1113,
	243, 1113,
	244, 1113,
	245, 1113,
	246, 1113,
	247, 1113,
	248, 1113,
	249, 1113,
	250, 1113,
	252, 1113,
	253, 1113,
	254, 1113,
	255, 1113,
	256, 1113,
	258, 1113,
	260, 1113,
	262, 1113,
	264, 1113,
	265, 1113,
	266, 1113,
	267, 1113,
	268, 1113,
	270, 1113,
	271, 1113,
	272, 1113,
	274, 1113,
	275, 1113,
	276, 1113,
	277, 1113,
	280, 1113,
	281, 1113,
	282, 1113,
	284, 1113,
	286, 1113,
	287, 1113,
	288, 1113,
	289, 1113,
	290, 1113,
	291, 1113,
	292, 1113,
	293, 1113,
	294, 1113,
	295, 1113,
	297, 1113,
	298, 1113,
	299, 1113,
	300, 1113,
	301, 1113,
	302, 1113,
	303, 1113,
	305, 1113,
	307, 1113,
	308, 1113,
	309, 1113,
	310, 1113,
	311, 1113,
	312, 1113,
	313, 1113,
	314, 1113,
	315, 1113,
	316, 1113,
	318, 1113,
	319, 1113,
	320, 1113,
	321, 1113,
	322, 1113,
	323, 1113,
	325, 1113,
	326, 1113,
	327, 1113,
	328, 1113,
	329, 1113,
	330, 1113,
	331, 1113,
	332, 1113,
	334, 1113,
	336, 1113,
	337, 1113,
	338, 1113,
	339, 1113,
	340, 1113,
	341, 1113,
	343, 1113,
	344, 1113,
	345, 1113,
	346, 1113,
	347, 1113,
	348, 1113,
	349, 1113,
	350, 1113,
	352, 1113,
	353, 1113,
	354, 1113,
	355, 1113,
	356, 1113,
	357, 1113,
	358, 1113,
	359, 1113,
	360, 1113,
	361, 1113,
	363, 1113,
	364, 1113,
	365, 1113,
	366, 1113,
	367, 1113,
	369, 1113,
	370, 1113,
	371, 1113,
	372, 1113,
	373, 1113,
	375, 1113,
	376, 1113,
	377, 1113,
	378, 1113,
	379, 1113,
	380, 1113,
	381, 1113,
	382, 1113,
	383, 1113,
	384, 1113,
	385, 1113,
	386, 1113,
	388, 1113,
	389, 1113,
	390, 1113,
	392, 1113,
	393, 1113,
	394, 1113,
	395, 1113,
	396, 1113,
	397, 1113,
	398, 1113,
	400, 1113,
	401, 1113,
	402, 1113,
	403, 1113,
	404, 1113,
	406, 1113,
	408, 1113,
	409, 1113,
	410, 1113,
	411, 1113,
	412, 1113,
	414, 1113,
	415, 1113,
	416, 1113,
	418, 1113,
	419, 1113,
	422, 1113,
	423, 1113,
	424, 1113,
	425, 1113,
	426, 1113,
	427, 1113,
	428, 1113,
	430, 1113,
	432, 1113,
	433, 1113,
	434, 1113,
	435, 1113,
	436, 1113,
	437, 1113,
	438, 1113,
	440, 1113,
	441, 1113,
	442, 1113,
	447, 1113,
	448, 1113,
	449, 1113,
	450, 1113,
	451, 1113,
	452, 1113,
	-2, 0,
	-1, 122,
	1, 990,
	208, 990,
	305, 990,
	313, 990,
	455, 990,
	478, 990,
	-2, 0,
	-1, 124,
	1, 990,
	478, 990,
	-2, 0,
	-1, 125,
	1, 990,
	478, 990,
	-2, 0,
	-1, 126,
	1, 990,
	405, 990,
	478, 990,
	-2, 0,
	-1, 151,
	126, 1084,
	142, 1084,
	155, 1084,
	201, 1084,
	231, 1084,
	269, 1084,
	279, 1084,
	420, 1084,
	-2, 1059,
	-1, 184,
	4, 1120,
	5, 1120,
	6, 1120,
	7, 1120,
	8, 1120,
	9, 1120,
	10, 1120,
	21, 1120,
	22, 1120,
	23, 1120,
	24, 1120,
	25, 1120,
	27, 1120,
	33, 1120,
	34, 1120,
	38, 1120,
	39, 1120,
	40, 1120,
	41, 1120,
	42, 1120,
	43, 1120,
	44, 1120,
	45, 1120,
	46, 1120,
	47, 1120,
	48, 1120,
	49, 1120,
	50, 1120,
	52, 1120,
	53, 1120,
	54, 1120,
	55, 1120,
	56, 1120,
	57, 1120,
	58, 1120,
	59, 1120,
	60, 1120,
	61, 1120,
	62, 1120,
	63, 1120,
	64, 1120,
	66, 1120,
	67, 1120,
	69, 1120,
	71, 1120,
	72, 1120,
	73, 1120,
	74, 1120,
	75, 1120,
	76, 1120,
	79, 1120,
	80, 1120,
	81, 1120,
	82, 1120,
	84, 1120,
	86, 1120,
	87, 1120,
	88, 1120,
	90, 1120,
	91, 1120,
	92, 1120,
	93, 1120,
	94, 1120,
	95, 1120,
	96, 1120,
	97, 1120,
	98, 1120,
	99, 1120,
	100, 1120,
	101, 1120,
	102, 1120,
	103, 1120,
	104, 1120,
	105, 1120,
	106, 1120,
	107, 1120,
	108, 1120,
	109, 1120,
	110, 1120,
	112, 1120,
	113, 1120,
	115, 1120,
	118, 1120,
	119, 1120,
	120, 1120,
	122, 1120,
	124, 1120,
	125, 1120,
	127, 1120,
	128, 1120,
	129, 1120,
	130, 1120,
	131, 1120,
	132, 1120,
	133, 1120,
	134, 1120,
	135, 1120,
	136, 1120,
	137, 1120,
	138, 1120,
	139, 1120,
	140, 1120,
	141, 1120,
	147, 1120,
	148, 1120,
	149, 1120,
	150, 1120,
	151, 1120,
	152, 1120,
	154, 1120,
	156, 1120,
	159, 1120,
	160, 1120,
	161, 1120,
	163, 1120,
	164, 1120,
	166, 1120,
	167, 1120,
	169, 1120,
	170, 1120,
	171, 1120,
	172, 1120,
	173, 1120,
	174, 1120,
	175, 1120,
	176, 1120,
	177, 1120,
	178, 1120,
	179, 1120,
	181, 1120,
	182, 1120,
	183, 1120,
	184, 1120,
	187, 1120,
	188, 1120,
	189, 1120,
	190, 1120,
	192, 1120,
	193, 1120,
	194, 1120,
	195, 1120,
	196, 1120,
	197, 1120,
	198, 1120,
	199, 1120,
	200, 1120,
	202, 1120,
	204, 1120,
	205, 1120,
	206, 1120,
	207, 1120,
	208, 1120,
	209, 1120,
	210, 1120,
	211, 1120,
	212, 1120,
	213, 1120,
	216, 1120,
	217, 1120,
	218, 1120,
	219, 1120,
	220, 1120,
	222, 1120,
	223, 1120,
	225, 1120,
	226, 1120,
	227, 1120,
	228, 1120,
	229, 1120,
	230, 1120,
	232, 1120,
	233, 1120,
	234, 1120,
	235, 1120,
	236, 1120,
	237, 1120,
	238, 1120,
	239, 1120,
	241, 1120,
	242, 1120,
	243, 1120,
	244, 1120,
	245, 1120,
	246, 1120,
	247, 1120,
	248, 1120,
	249, 1120,
	250, 1120,
	251, 1120,
	252, 1120,
	253, 1120,
	254, 1120,
	255, 1120,
	256, 1120,
	257, 1120,
	258, 1120,
	259, 1120,
	260, 1120,
	261, 1120,
	262, 1120,
	263, 1120,
	264, 1120,
	265, 1120,
	266, 1120,
	267, 1120,
	268, 1120,
	270, 1120,
	271, 1120,
	272, 1120,
	275, 1120,
	276, 1120,
	277, 1120,
	280, 1120,
	281, 1120,
	282, 1120,
	283, 1120,
	284, 1120,
	285, 1120,
	286, 1120,
	287, 1120,
	288, 1120,
	289, 1120,
	290, 1120,
	291, 1120,
	292, 1120,
	293, 1120,
	294, 1120,
	295, 1120,
	297, 1120,
	298, 1120,
	299, 1120,
	300, 1120,
	301, 1120,
	302, 1120,
	303, 1120,
	305, 1120,
	307, 1120,
	308, 1120,
	309, 1120,
	310, 1120,
	311, 1120,
	312, 1120,
	313, 1120,
	314, 1120,
	315, 1120,
	316, 1120,
	318, 1120,
	319, 1120,
	320, 1120,
	321, 1120,
	322, 1120,
	323, 1120,
	325, 1120,
	326, 1120,
	327, 1120,
	328, 1120,
	329, 1120,
	330, 1120,
	331, 1120,
	332, 1120,
	334, 1120,
	335, 1120,
	336, 1120,
	337, 1120,
	338, 1120,
	339, 1120,
	340, 1120,
	341, 1120,
	343, 1120,
	344, 1120,
	345, 1120,
	346, 1120,
	347, 1120,
	348, 1120,
	349, 1120,
	350, 1120,
	352, 1120,
	353, 1120,
	354, 1120,
	355, 1120,
	356, 1120,
	357, 1120,
	358, 1120,
	359, 1120,
	360, 1120,
	361, 1120,
	362, 1120,
	363, 1120,
	364, 1120,
	365, 1120,
	366, 1120,
	367, 1120,
	368, 1120,
	369, 1120,
	370, 1120,
	371, 1120,
	372, 1120,
	373, 1120,
	375, 1120,
	376, 1120,
	377, 1120,
	378, 1120,
	379, 1120,
	380, 1120,
	381, 1120,
	382, 1120,
	383, 1120,
	384, 1120,
	385, 1120,
	386, 1120,
	388, 1120,
	389, 1120,
	390, 1120,
	392, 1120,
	393, 1120,
	394, 1120,
	395, 1120,
	396, 1120,
	397, 1120,
	398, 1120,
	400, 1120,
	401, 1120,
	402, 1120,
	403, 1120,
	404, 1120,
	406, 1120,
	408, 1120,
	409, 1120,
	410, 1120,
	411, 1120,
	412, 1120,
	413, 1120,
	414, 1120,
	415, 1120,
	416, 1120,
	418, 1120,
	419, 1120,
	421, 1120,
	422, 1120,
	423, 1120,
	424, 1120,
	425, 1120,
	426, 1120,
	427, 1120,
	428, 1120,
	429, 1120,
	430, 1120,
	432, 1120,
	433, 1120,
	434, 1120,
	435, 1120,
	436, 1120,
	437, 1120,
	438, 1120,
	440, 1120,
	441, 1120,
	442, 1120,
	447, 1120,
	448, 1120,
	449, 1120,
	450, 1120,
	451, 1120,
	452, 1120,
	453, 1120,
	459, 1120,
	466, 1120,
	467, 1120,
	468, 1120,
	475, 1120,
	479, 1120,
	-2, 0,
	-1, 573,
	158, 1823,
	405, 1823,
	458, 1823,
	477, 1823,
	-2, 0,
	-1, 574,
	158, 1904,
	405, 1904,
	458, 1904,
	477, 1904,
	-2, 0,
	-1, 575,
	158, 1812,
	405, 1812,
	458, 1812,
	477, 1812,
	-2, 0,
	-1, 577,
	158, 2002,
	405, 2002,
	458, 2002,
	477, 2002,
	-2, 0,
	-1, 579,
	158, 2032,
	405, 2032,
	458, 2032,
	477, 2032,
	-2, 0,
	-1, 586,
	158, 1916,
	405, 1916,
	458, 1916,
	477, 1916,
	-2, 503,
	-1, 611,
	477, 1768,
	480, 1768,
	-2, 715,
	-1, 612,
	477, 1770,
	480, 1770,
	-2, 716,
	-1, 613,
	477, 1769,
	480, 1769,
	-2, 717,
	-1, 614,
	480, 1706,
	-2, 718,
	-1, 656,
	440, 918,
	-2, 754,
	-1, 695,
	4, 936,
	21, 936,
	22, 936,
	23, 936,
	24, 936,
	25, 936,
	27, 936,
	33, 936,
	38, 936,
	39, 936,
	40, 936,
	41, 936,
	42, 936,
	43, 936,
	44, 936,
	45, 936,
	46, 936,
	47, 936,
	48, 936,
	49, 936,
	50, 936,
	52, 936,
	53, 936,
	54, 936,
	55, 936,
	56, 936,
	57, 936,
	58, 936,
	61, 936,
	62, 936,
	63, 936,
	64, 936,
	66, 936,
	67, 936,
	71, 936,
	72, 936,
	73, 936,
	74, 936,
	75, 936,
	76, 936,
	79, 936,
	80, 936,
	81, 936,
	82, 936,
	84, 936,
	86, 936,
	87, 936,
	88, 936,
	90, 936,
	92, 936,
	93, 936,
	101, 936,
	102, 936,
	103, 936,
	104, 936,
	105, 936,
	106, 936,
	107, 936,
	108, 936,
	110, 936,
	112, 936,
	113, 936,
	115, 936,
	118, 936,
	119, 936,
	120, 936,
	122, 936,
	124, 936,
	125, 936,
	127, 936,
	128, 936,
	129, 936,
	130, 936,
	131, 936,
	132, 936,
	133, 936,
	134, 936,
	135, 936,
	136, 936,
	137, 936,
	138, 936,
	139, 936,
	141, 936,
	147, 936,
	148, 936,
	149, 936,
	150, 936,
	151, 936,
	152, 936,
	154, 936,
	156, 936,
	160, 936,
	161, 936,
	163, 936,
	164, 936,
	166, 936,
	167, 936,
	169, 936,
	170, 936,
	171, 936,
	172, 936,
	173, 936,
	174, 936,
	175, 936,
	176, 936,
	178, 936,
	179, 936,
	181, 936,
	182, 936,
	183, 936,
	184, 936,
	187, 936,
	188, 936,
	189, 936,
	190, 936,
	193, 936,
	194, 936,
	195, 936,
	196, 936,
	197, 936,
	198, 936,
	199, 936,
	200, 936,
	202, 936,
	204, 936,
	206, 936,
	208, 936,
	209, 936,
	210, 936,
	212, 936,
	213, 936,
	216, 936,
	217, 936,
	218, 936,
	219, 936,
	220, 936,
	222, 936,
	223, 936,
	225, 936,
	226, 936,
	228, 936,
	229, 936,
	232, 936,
	233, 936,
	236, 936,
	237, 936,
	238, 936,
	239, 936,
	241, 936,
	242, 936,
	243, 936,
	244, 936,
	245, 936,
	246, 936,
	247, 936,
	248, 936,
	249, 936,
	250, 936,
	252, 936,
	253, 936,
	254, 936,
	255, 936,
	256, 936,
	258, 936,
	260, 936,
	262, 936,
	264, 936,
	265, 936,
	266, 936,
	267, 936,
	268, 936,
	270, 936,
	271, 936,
	272, 936,
	275, 936,
	276, 936,
	277, 936,
	280, 936,
	281, 936,
	282, 936,
	284, 936,
	286, 936,
	287, 936,
	288, 936,
	289, 936,
	290, 936,
	291, 936,
	292, 936,
	293, 936,
	294, 936,
	295, 936,
	297, 936,
	298, 936,
	299, 936,
	300, 936,
	301, 936,
	302, 936,
	303, 936,
	305, 936,
	307, 936,
	308, 936,
	309, 936,
	310, 936,
	311, 936,
	312, 936,
	313, 936,
	314, 936,
	315, 936,
	316, 936,
	318, 936,
	319, 936,
	320, 936,
	321, 936,
	322, 936,
	323, 936,
	325, 936,
	326, 936,
	327, 936,
	328, 936,
	329, 936,
	330, 936,
	331, 936,
	332, 936,
	334, 936,
	336, 936,
	337, 936,
	338, 936,
	339, 936,
	340, 936,
	341, 936,
	343, 936,
	344, 936,
	345, 936,
	346, 936,
	347, 936,
	348, 936,
	349, 936,
	350, 936,
	352, 936,
	353, 936,
	354, 936,
	355, 936,
	356, 936,
	357, 936,
	358, 936,
	359, 936,
	360, 936,
	361, 936,
	363, 936,
	364, 936,
	365, 936,
	366, 936,
	367, 936,
	369, 936,
	370, 936,
	371, 936,
	372, 936,
	373, 936,
	375, 936,
	376, 936,
	377, 936,
	378, 936,
	379, 936,
	380, 936,
	381, 936,
	382, 936,
	383, 936,
	384, 936,
	385, 936,
	386, 936,
	388, 936,
	389, 936,
	390, 936,
	392, 936,
	393, 936,
	394, 936,
	395, 936,
	396, 936,
	397, 936,
	398, 936,
	400, 936,
	401, 936,
	402, 936,
	403, 936,
	404, 936,
	406, 936,
	408, 936,
	409, 936,
	410, 936,
	411, 936,
	412, 936,
	414, 936,
	415, 936,
	416, 936,
	418, 936,
	419, 936,
	422, 936,
	423, 936,
	424, 936,
	425, 936,
	426, 936,
	427, 936,
	428, 936,
	430, 936,
	432, 936,
	433, 936,
	434, 936,
	435, 936,
	436, 936,
	437, 936,
	438, 936,
	440, 936,
	441, 936,
	442, 936,
	447, 936,
	448, 936,
	449, 936,
	450, 936,
	451, 936,
	452, 936,
	-2, 0,
	-1, 759,
	309, 643,
	361, 643,
	-2, 0,
	-1, 760,
	309, 642,
	361, 642,
	-2, 590,
	-1, 764,
	1, 672,
	474, 672,
	476, 672,
	478, 672,
	-2, 0,
	-1, 765,
	1, 714,
	155, 714,
	474, 714,
	476, 714,
	478, 714,
	-2, 0,
	-1, 773,
	1, 646,
	474, 646,
	476, 646,
	478, 646,
	-2, 0,
	-1, 776,
	1, 672,
	474, 672,
	476, 672,
	478, 672,
	-2, 0,
	-1, 777,
	1, 674,
	474, 674,
	476, 674,
	478, 674,
	-2, 0,
	-1, 778,
	1, 677,
	474, 677,
	476, 677,
	478, 677,
	-2, 0,
	-1, 783,
	1, 693,
	474, 693,
	476, 693,
	478, 693,
	-2, 0,
	-1, 784,
	1, 695,
	474, 695,
	476, 695,
	478, 695,
	-2, 0,
	-1, 827,
	142, 1122,
	155, 1122,
	231, 1122,
	269, 1122,
	-2, 1063,
	-1, 840,
	142, 1121,
	155, 1121,
	231, 1121,
	269, 1121,
	-2, 1060,
	-1, 864,
	477, 1767,
	-2, 511,
	-1, 892,
	475, 1759,
	-2, 1750,
	-1, 898,
	5, 1262,
	-2, 1801,
	-1, 899,
	5, 1263,
	-2, 1807,
	-1, 900,
	5, 1264,
	-2, 1806,
	-1, 901,
	5, 1265,
	-2, 2029,
	-1, 902,
	5, 1266,
	-2, 1918,
	-1, 903,
	5, 1267,
	-2, 1994,
	-1, 904,
	5, 1268,
	-2, 1996,
	-1, 905,
	5, 1269,
	-2, 2009,
	-1, 906,
	5, 1270,
	-2, 1997,
	-1, 907,
	5, 1271,
	-2, 1998,
	-1, 908,
	5, 1272,
	-2, 1800,
	-1, 909,
	5, 1273,
	-2, 2046,
	-1, 910,
	5, 1274,
	-2, 1878,
	-1, 911,
	5, 1275,
	-2, 1930,
	-1, 912,
	5, 1276,
	-2, 1932,
	-1, 913,
	5, 1277,
	-2, 1882,
	-1, 914,
	5, 1278,
	475, 1777,
	-2, 1768,
	-1, 920,
	475, 1778,
	-2, 1769,
	-1, 922,
	5, 1282,
	-2, 2079,
	-1, 923,
	5, 1283,
	-2, 2080,
	-1, 924,
	5, 1284,
	-2, 1881,
	-1, 925,
	5, 1285,
	-2, 2092,
	-1, 926,
	5, 1286,
	-2, 1883,
	-1, 927,
	5, 1287,
	-2, 1884,
	-1, 928,
	5, 1288,
	-2, 1885,
	-1, 929,
	5, 1289,
	-2, 2061,
	-1, 930,
	5, 1290,
	-2, 2090,
	-1, 931,
	5, 1291,
	-2, 1860,
	-1, 932,
	5, 1292,
	-2, 1861,
	-1, 933,
	5, 1306,
	-2, 2073,
	-1, 935,
	5, 1281,
	-2, 2069,
	-1, 936,
	5, 1281,
	-2, 2068,
	-1, 937,
	5, 1281,
	-2, 2085,
	-1, 938,
	5, 1298,
	-2, 2063,
	-1, 939,
	5, 1299,
	-2, 1802,
	-1, 940,
	5, 1309,
	-2, 2062,
	-1, 941,
	5, 1311,
	-2, 2101,
	-1, 943,
	5, 1322,
	-2, 1834,
	-1, 944,
	5, 1333,
	-2, 2094,
	-1, 945,
	5, 1325,
	-2, 2095,
	-1, 946,
	5, 1333,
	-2, 2096,
	-1, 947,
	5, 1329,
	-2, 2097,
	-1, 948,
	5, 1250,
	-2, 1891,
	-1, 949,
	5, 1251,
	-2, 1892,
	-1, 950,
	477, 1765,
	-2, 1749,
	-1, 951,
	475, 2122,
	-2, 1766,
	-1, 973,
	5, 1317,
	-2, 2020,
	-1, 991,
	5, 1316,
	-2, 2102,
	-1, 1001,
	5, 1318,
	441, 1318,
	-2, 2064,
	-1, 1002,
	5, 1319,
	441, 1319,
	-2, 2065,
	-1, 1039,
	475, 1777,
	-2, 1768,
	-1, 1067,
	158, 2032,
	405, 2032,
	458, 2032,
	477, 2032,
	-2, 0,
	-1, 1070,
	1, 489,
	478, 489,
	-2, 998,
	-1, 1195,
	325, 1746,
	468, 1746,
	-2, 1744,
	-1, 1207,
	479, 1746,
	-2, 1747,
	-1, 1208,
	1, 915,
	474, 915,
	476, 915,
	478, 915,
	-2, 1109,
	-1, 1256,
	315, 753,
	440, 753,
	-2, 248,
	-1, 1279,
	1, 915,
	474, 915,
	476, 915,
	478, 915,
	-2, 1109,
	-1, 1285,
	4, 936,
	21, 936,
	22, 936,
	23, 936,
	24, 936,
	25, 936,
	27, 936,
	33, 936,
	38, 936,
	39, 936,
	40, 936,
	41, 936,
	42, 936,
	43, 936,
	44, 936,
	45, 936,
	46, 936,
	47, 936,
	48, 936,
	49, 936,
	50, 936,
	52, 936,
	53, 936,
	54, 936,
	55, 936,
	56, 936,
	57, 936,
	58, 936,
	61, 936,
	62, 936,
	63, 936,
	64, 936,
	66, 936,
	67, 936,
	71, 936,
	72, 936,
	73, 936,
	74, 936,
	75, 936,
	76, 936,
	79, 936,
	80, 936,
	81, 936,
	82, 936,
	84, 936,
	86, 936,
	87, 936,
	88, 936,
	90, 936,
	92, 936,
	93, 936,
	101, 936,
	102, 936,
	103, 936,
	104, 936,
	105, 936,
	106, 936,
	107, 936,
	108, 936,
	110, 936,
	112, 936,
	113, 936,
	115, 936,
	118, 936,
	119, 936,
	120, 936,
	122, 936,
	124, 936,
	125, 936,
	127, 936,
	128, 936,
	129, 936,
	130, 936,
	131, 936,
	132, 936,
	133, 936,
	134, 936,
	135, 936,
	136, 936,
	137, 936,
	138, 936,
	139, 936,
	147, 936,
	148, 936,
	149, 936,
	150, 936,
	151, 936,
	152, 936,
	154, 936,
	156, 936,
	160, 936,
	161, 936,
	163, 936,
	164, 936,
	166, 936,
	167, 936,
	169, 936,
	170, 936,
	171, 936,
	172, 936,
	173, 936,
	174, 936,
	175, 936,
	176, 936,
	178, 936,
	179, 936,
	181, 936,
	182, 936,
	183, 936,
	184, 936,
	188, 936,
	189, 936,
	190, 936,
	193, 936,
	194, 936,
	195, 936,
	196, 936,
	197, 936,
	198, 936,
	199, 936,
	200, 936,
	202, 936,
	204, 936,
	206, 936,
	208, 936,
	209, 936,
	210, 936,
	212, 936,
	213, 936,
	216, 936,
	217, 936,
	218, 936,
	219, 936,
	220, 936,
	222, 936,
	223, 936,
	225, 936,
	226, 936,
	228, 936,
	229, 936,
	232, 936,
	233, 936,
	236, 936,
	237, 936,
	238, 936,
	239, 936,
	241, 936,
	242, 936,
	243, 936,
	244, 936,
	245, 936,
	246, 936,
	247, 936,
	248, 936,
	249, 936,
	250, 936,
	252, 936,
	253, 936,
	254, 936,
	255, 936,
	256, 936,
	258, 936,
	262, 936,
	264, 936,
	265, 936,
	266, 936,
	267, 936,
	268, 936,
	270, 936,
	271, 936,
	272, 936,
	273, 936,
	275, 936,
	276, 936,
	277, 936,
	280, 936,
	281, 936,
	282, 936,
	284, 936,
	286, 936,
	287, 936,
	288, 936,
	289, 936,
	290, 936,
	291, 936,
	292, 936,
	293, 936,
	294, 936,
	295, 936,
	297, 936,
	298, 936,
	299, 936,
	300, 936,
	301, 936,
	302, 936,
	303, 936,
	305, 936,
	307, 936,
	308, 936,
	309, 936,
	310, 936,
	311, 936,
	312, 936,
	313, 936,
	314, 936,
	315, 936,
	316, 936,
	318, 936,
	319, 936,
	320, 936,
	321, 936,
	322, 936,
	323, 936,
	325, 936,
	326, 936,
	327, 936,
	328, 936,
	329, 936,
	330, 936,
	331, 936,
	332, 936,
	334, 936,
	336, 936,
	337, 936,
	338, 936,
	339, 936,
	340, 936,
	341, 936,
	343, 936,
	344, 936,
	345, 936,
	346, 936,
	347, 936,
	348, 936,
	349, 936,
	350, 936,
	352, 936,
	353, 936,
	354, 936,
	355, 936,
	356, 936,
	357, 936,
	358, 936,
	359, 936,
	360, 936,
	361, 936,
	363, 936,
	364, 936,
	365, 936,
	366, 936,
	367, 936,
	369, 936,
	370, 936,
	371, 936,
	372, 936,
	373, 936,
	375, 936,
	376, 936,
	377, 936,
	378, 936,
	379, 936,
	380, 936,
	381, 936,
	382, 936,
	383, 936,
	384, 936,
	385, 936,
	386, 936,
	388, 936,
	389, 936,
	390, 936,
	392, 936,
	393, 936,
	394, 936,
	395, 936,
	396, 936,
	397, 936,
	398, 936,
	400, 936,
	401, 936,
	402, 936,
	403, 936,
	404, 936,
	406, 936,
	408, 936,
	409, 936,
	410, 936,
	411, 936,
	412, 936,
	414, 936,
	415, 936,
	416, 936,
	418, 936,
	419, 936,
	422, 936,
	423, 936,
	424, 936,
	425, 936,
	426, 936,
	427, 936,
	428, 936,
	430, 936,
	432, 936,
	433, 936,
	434, 936,
	435, 936,
	436, 936,
	437, 936,
	438, 936,
	440, 936,
	441, 936,
	442, 936,
	447, 936,
	448, 936,
	449, 936,
	450, 936,
	451, 936,
	452, 936,
	-2, 0,
	-1, 1347,
	1, 364,
	474, 364,
	476, 364,
	478, 364,
	-2, 1083,
	-1, 1350,
	4, 2100,
	11, 2100,
	12, 2100,
	14, 2100,
	15, 2100,
	16, 2100,
	17, 2100,
	18, 2100,
	19, 2100,
	21, 2100,
	22, 2100,
	23, 2100,
	24, 2100,
	25, 2100,
	27, 2100,
	30, 2100,
	31, 2100,
	33, 2100,
	35, 2100,
	38, 2100,
	39, 2100,
	40, 2100,
	41, 2100,
	42, 2100,
	43, 2100,
	44, 2100,
	45, 2100,
	46, 2100,
	47, 2100,
	48, 2100,
	49, 2100,
	50, 2100,
	52, 2100,
	53, 2100,
	54, 2100,
	55, 2100,
	56, 2100,
	57, 2100,
	58, 2100,
	61, 2100,
	62, 2100,
	63, 2100,
	64, 2100,
	66, 2100,
	67, 2100,
	68, 2100,
	71, 2100,
	72, 2100,
	73, 2100,
	74, 2100,
	75, 2100,
	76, 2100,
	77, 2100,
	79, 2100,
	80, 2100,
	81, 2100,
	82, 2100,
	84, 2100,
	85, 2100,
	86, 2100,
	87, 2100,
	88, 2100,
	90, 2100,
	91, 2100,
	92, 2100,
	93, 2100,
	101, 2100,
	102, 2100,
	103, 2100,
	104, 2100,
	105, 2100,
	106, 2100,
	107, 2100,
	108, 2100,
	110, 2100,
	112, 2100,
	113, 2100,
	115, 2100,
	118, 2100,
	119, 2100,
	120, 2100,
	122, 2100,
	124, 2100,
	125, 2100,
	127, 2100,
	128, 2100,
	129, 2100,
	130, 2100,
	131, 2100,
	132, 2100,
	133, 2100,
	134, 2100,
	135, 2100,
	136, 2100,
	137, 2100,
	138, 2100,
	139, 2100,
	143, 2100,
	144, 2100,
	145, 2100,
	146, 2100,
	147, 2100,
	148, 2100,
	149, 2100,
	150, 2100,
	151, 2100,
	152, 2100,
	153, 2100,
	154, 2100,
	156, 2100,
	159, 2100,
	160, 2100,
	161, 2100,
	163, 2100,
	164, 2100,
	166, 2100,
	167, 2100,
	169, 2100,
	170, 2100,
	171, 2100,
	172, 2100,
	173, 2100,
	174, 2100,
	175, 2100,
	176, 2100,
	177, 2100,
	178, 2100,
	179, 2100,
	180, 2100,
	181, 2100,
	182, 2100,
	183, 2100,
	184, 2100,
	185, 2100,
	186, 2100,
	188, 2100,
	189, 2100,
	190, 2100,
	192, 2100,
	193, 2100,
	194, 2100,
	195, 2100,
	196, 2100,
	197, 2100,
	198, 2100,
	199, 2100,
	200, 2100,
	202, 2100,
	204, 2100,
	205, 2100,
	206, 2100,
	207, 2100,
	208, 2100,
	209, 2100,
	210, 2100,
	211, 2100,
	212, 2100,
	213, 2100,
	214, 2100,
	215, 2100,
	216, 2100,
	217, 2100,
	218, 2100,
	219, 2100,
	220, 2100,
	222, 2100,
	223, 2100,
	225, 2100,
	226, 2100,
	227, 2100,
	228, 2100,
	229, 2100,
	230, 2100,
	232, 2100,
	233, 2100,
	236, 2100,
	237, 2100,
	238, 2100,
	239, 2100,
	240, 2100,
	241, 2100,
	242, 2100,
	243, 2100,
	244, 2100,
	245, 2100,
	246, 2100,
	247, 2100,
	248, 2100,
	249, 2100,
	250, 2100,
	251, 2100,
	252, 2100,
	253, 2100,
	254, 2100,
	255, 2100,
	256, 2100,
	258, 2100,
	261, 2100,
	262, 2100,
	264, 2100,
	265, 2100,
	266, 2100,
	267, 2100,
	268, 2100,
	270, 2100,
	271, 2100,
	272, 2100,
	275, 2100,
	276, 2100,
	277, 2100,
	278, 2100,
	280, 2100,
	281, 2100,
	282, 2100,
	284, 2100,
	286, 2100,
	287, 2100,
	288, 2100,
	289, 2100,
	290, 2100,
	291, 2100,
	292, 2100,
	293, 2100,
	294, 2100,
	295, 2100,
	297, 2100,
	298, 2100,
	299, 2100,
	300, 2100,
	301, 2100,
	302, 2100,
	303, 2100,
	305, 2100,
	307, 2100,
	308, 2100,
	309, 2100,
	310, 2100,
	311, 2100,
	312, 2100,
	313, 2100,
	314, 2100,
	315, 2100,
	316, 2100,
	318, 2100,
	319, 2100,
	320, 2100,
	321, 2100,
	322, 2100,
	323, 2100,
	324, 2100,
	325, 2100,
	326, 2100,
	327, 2100,
	328, 2100,
	329, 2100,
	330, 2100,
	331, 2100,
	332, 2100,
	334, 2100,
	335, 2100,
	336, 2100,
	337, 2100,
	338, 2100,
	339, 2100,
	340, 2100,
	341, 2100,
	342, 2100,
	343, 2100,
	344, 2100,
	345, 2100,
	346, 2100,
	347, 2100,
	348, 2100,
	349, 2100,
	350, 2100,
	352, 2100,
	353, 2100,
	354, 2100,
	355, 2100,
	356, 2100,
	357, 2100,
	358, 2100,
	359, 2100,
	360, 2100,
	361, 2100,
	363, 2100,
	364, 2100,
	365, 2100,
	366, 2100,
	367, 2100,
	368, 2100,
	369, 2100,
	370, 2100,
	371, 2100,
	372, 2100,
	373, 2100,
	375, 2100,
	376, 2100,
	377, 2100,
	378, 2100,
	379, 2100,
	380, 2100,
	381, 2100,
	382, 2100,
	383, 2100,
	384, 2100,
	385, 2100,
	386, 2100,
	388, 2100,
	389, 2100,
	390, 2100,
	392, 2100,
	393, 2100,
	394, 2100,
	395, 2100,
	396, 2100,
	397, 2100,
	398, 2100,
	400, 2100,
	401, 2100,
	402, 2100,
	403, 2100,
	404, 2100,
	406, 2100,
	408, 2100,
	409, 2100,
	410, 2100,
	411, 2100,
	412, 2100,
	414, 2100,
	415, 2100,
	416, 2100,
	418, 2100,
	419, 2100,
	422, 2100,
	423, 2100,
	424, 2100,
	425, 2100,
	426, 2100,
	427, 2100,
	428, 2100,
	430, 2100,
	432, 2100,
	433, 2100,
	434, 2100,
	435, 2100,
	436, 2100,
	437, 2100,
	438, 2100,
	440, 2100,
	441, 2100,
	442, 2100,
	447, 2100,
	448, 2100,
	449, 2100,
	450, 2100,
	451, 2100,
	452, 2100,
	453, 2100,
	454, 2100,
	456, 2100,
	457, 2100,
	458, 2100,
	459, 2100,
	460, 2100,
	461, 2100,
	463, 2100,
	464, 2100,
	465, 2100,
	466, 2100,
	467, 2100,
	468, 2100,
	469, 2100,
	470, 2100,
	471, 2100,
	473, 2100,
	476, 2100,
	477, 2100,
	479, 2100,
	480, 2100,
	-2, 0,
	-1, 1355,
	158, 2002,
	405, 2002,
	458, 2002,
	477, 2002,
	-2, 0,
	-1, 1387,
	309, 643,
	361, 643,
	-2, 0,
	-1, 1411,
	1, 638,
	474, 638,
	476, 638,
	478, 638,
	-2, 0,
	-1, 1412,
	1, 663,
	474, 663,
	476, 663,
	478, 663,
	-2, 0,
	-1, 1413,
	1, 645,
	474, 645,
	476, 645,
	478, 645,
	-2, 0,
	-1, 1415,
	1, 649,
	474, 649,
	476, 649,
	478, 649,
	-2, 0,
	-1, 1442,
	1, 2053,
	474, 2053,
	476, 2053,
	477, 2053,
	478, 2053,
	-2, 691,
	-1, 1443,
	1, 1999,
	474, 1999,
	476, 1999,
	477, 1999,
	478, 1999,
	-2, 692,
	-1, 1458,
	1, 993,
	478, 993,
	-2, 998,
	-1, 1461,
	142, 1121,
	155, 1121,
	231, 1121,
	269, 1121,
	-2, 1064,
	-1, 1555,
	126, 1085,
	142, 1085,
	155, 1085,
	201, 1085,
	231, 1085,
	269, 1085,
	279, 1085,
	420, 1085,
	-2, 1492,
	-1, 1612,
	476, 1640,
	-2, 0,
	-1, 1646,
	126, 1085,
	142, 1085,
	155, 1085,
	201, 1085,
	231, 1085,
	269, 1085,
	279, 1085,
	420, 1085,
	-2, 1200,
	-1, 1705,
	475, 1321,
	-2, 1309,
	-1, 1749,
	1, 491,
	478, 491,
	-2, 998,
	-1, 1951,
	1, 640,
	474, 640,
	476, 640,
	478, 640,
	-2, 0,
	-1, 1952,
	1, 665,
	474, 665,
	476, 665,
	478, 665,
	-2, 0,
	-1, 2024,
	340, 1146,
	341, 1146,
	-2, 1354,
	-1, 2055,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1372,
	-1, 2056,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1373,
	-1, 2057,
	85, 0,
	214, 0,
	215, 0,
	460, 0,
	461, 0,
	-2, 1374,
	-1, 2058,
	85, 0,
	214, 0,
	215, 0,
	460, 0,
	461, 0,
	-2, 1375,
	-1, 2059,
	85, 0,
	214, 0,
	215, 0,
	460, 0,
	461, 0,
	-2, 1376,
	-1, 2060,
	85, 0,
	214, 0,
	215, 0,
	460, 0,
	461, 0,
	-2, 1377,
	-1, 2061,
	85, 0,
	214, 0,
	215, 0,
	460, 0,
	461, 0,
	-2, 1378,
	-1, 2062,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1379,
	-1, 2074,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1391,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1392,
	-1, 2076,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1393,
	-1, 2079,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1398,
	-1, 2085,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1402,
	-1, 2087,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1410,
	-1, 2088,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1411,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1412,
	-1, 2090,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1413,
	-1, 2192,
	5, 1278,
	158, 1651,
	475, 1777,
	-2, 1768,
	-1, 2193,
	158, 1652,
	-2, 2057,
	-1, 2194,
	158, 1653,
	-2, 1915,
	-1, 2195,
	158, 1654,
	-2, 1835,
	-1, 2196,
	158, 1655,
	-2, 1871,
	-1, 2197,
	158, 1656,
	-2, 1913,
	-1, 2198,
	158, 1657,
	-2, 1993,
	-1, 2199,
	158, 1658,
	-2, 1475,
	-1, 2268,
	1, 1201,
	2, 1201,
	91, 1201,
	126, 1201,
	142, 1201,
	155, 1201,
	159, 1201,
	165, 1201,
	168, 1201,
	192, 1201,
	201, 1201,
	211, 1201,
	227, 1201,
	231, 1201,
	251, 1201,
	269, 1201,
	273, 1201,
	279, 1201,
	333, 1201,
	335, 1201,
	420, 1201,
	431, 1201,
	444, 1201,
	445, 1201,
	446, 1201,
	455, 1201,
	474, 1201,
	476, 1201,
	478, 1201,
	480, 1201,
	-2, 1200,
	-1, 2281,
	475, 1751,
	-2, 1763,
	-1, 2301,
	475, 1320,
	-2, 1310,
	-1, 2403,
	1, 915,
	474, 915,
	476, 915,
	478, 915,
	-2, 1109,
	-1, 2557,
	274, 1149,
	-2, 2091,
	-1, 2558,
	274, 1150,
	-2, 1982,
	-1, 2562,
	340, 1717,
	341, 1717,
	-2, 1473,
	-1, 2563,
	340, 1721,
	341, 1721,
	-2, 1474,
	-1, 2564,
	340, 1718,
	341, 1718,
	-2, 1473,
	-1, 2565,
	340, 1722,
	341, 1722,
	-2, 1474,
	-1, 2578,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1400,
	-1, 2579,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1404,
	-1, 2585,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1406,
	-1, 2774,
	208, 998,
	305, 998,
	313, 998,
	455, 998,
	-2, 488,
	-1, 2873,
	1, 915,
	474, 915,
	476, 915,
	478, 915,
	-2, 1109,
	-1, 2963,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1408,
	-1, 2970,
	205, 0,
	207, 0,
	261, 0,
	-2, 1427,
	-1, 3034,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1456,
	-1, 3035,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1457,
	-1, 3036,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1458,
	-1, 3040,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1462,
	-1, 3041,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1463,
	-1, 3042,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1464,
	-1, 3086,
	475, 1752,
	-2, 1764,
	-1, 3179,
	477, 2205,
	-2, 1042,
	-1, 3230,
	205, 0,
	207, 0,
	261, 0,
	-2, 1428,
	-1, 3233,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1431,
	-1, 3234,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1433,
	-1, 3399,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1432,
	-1, 3400,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	177, 0,
	180, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1434,
	-1, 3410,
	205, 0,
	-2, 1465,
	-1, 3526,
	205, 0,
	-2, 1466,
	-1, 3660,
	43, 0,
	177, 0,
	230, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 2060,
}

const sqlPrivate = 57344

const sqlLast = 85314

var sqlAct = [...]int16{
	920, 3547, 3793, 3335, 3442, 3439, 3659, 3562, 3670, 3759,
	2705, 3213, 3469, 3636, 3626, 2859, 3623, 3107, 2224, 3607,
	3672, 3671, 3713, 1227, 2457, 3530, 3428, 3658, 3476, 3002,
	3364, 2706, 3359, 1040, 2042, 3388, 850, 3171, 1211, 3485,
	216, 865, 216, 216, 2333, 216, 216, 216, 216, 216,
	3348, 2888, 216, 1680, 3292, 2855, 2791, 841, 1342, 2102,
	2881, 613, 1470, 3369, 3152, 584, 2955, 3414, 2883, 1841,
	3108, 2446, 1099, 2432, 2429, 2420, 2492, 208, 216, 1652,
	2392, 1800, 613, 2571, 1032, 2490, 2728, 2691, 2748, 2711,
	2720, 705, 2500, 1192, 3212, 2443, 1681, 1395, 3265, 2481,
	2458, 2483, 2709, 2335, 2261, 2489, 2441, 1837, 1621, 1836,
	3057, 2690, 2260, 1840, 1809, 2606, 3531, 1583, 2039, 1915,
	1563, 2115, 2035, 2555, 849, 144, 4, 1913, 1272, 1200,
	2394, 87, 2499, 1825, 1832, 2404, 942, 3470, 1785, 2430,
	916, 1925, 1083, 2263, 2146, 2242, 1458, 1622, 2135, 1787,
	2144, 2099, 2754, 2023, 2221, 2006, 1326, 1775, 1213, 2004,
	2857, 1348, 2451, 1336, 2493, 1363, 1870, 614, 2138, 1023,
	876, 2325, 1277, 1641, 1072, 210, 1026, 1631, 552, 216,
	216, 1005, 2116, 2250, 1197, 538, 2369, 1546, 209, 560,
	2188, 151, 1472, 1471, 568, 609, 1578, 2005, 615, 1869,
	2232, 144, 1362, 699, 578, 1638, 1346, 2007, 1022, 1890,
	681, 1300, 152, 656, 1224, 2258, 1799, 555, 2028, 2370,
	877, 38, 1028, 37, 35, 563, 26, 1457, 1477, 24,
	22, 1003, 1282, 771, 2602, 1906, 618, 754, 3071, 1906,
	3072, 1906, 3811, 3797, 3796, 845, 2241, 2241, 2241, 621,
	2707, 2898, 3775, 2772, 1485, 1486, 3306, 618, 3773, 3769,
	1904, 3696, 3306, 1846, 845, 3697, 2615, 3694, 840, 3692,
	621, 2241, 2616, 2241, 1516, 3689, 1020, 716, 3686, 3690,
	3681, 1488, 3687, 3656, 1846, 846, 2897, 1846, 3655, 3654,
	3651, 3650, 1846, 1918, 1918, 1918, 3645, 33, 1485, 1486,
	3306, 1518, 1519, 1520, 1528, 1529, 1530, 1080, 3643, 3621,
	3601, 1487, 3306, 3306, 2296, 3595, 3594, 1521, 1516, 2241,
	2241, 2234, 1006, 1006, 3589, 1488, 1080, 3588, 3306, 3582,
	1534, 3306, 3061, 1846, 3528, 3509, 828, 3506, 2296, 1846,
	3478, 3306, 3459, 3458, 3479, 3450, 1846, 1846, 3449, 1846,
	3420, 1933, 3306, 2241, 1846, 1487, 3401, 827, 3386, 3377,
	2296, 3333, 1918, 2912, 1507, 2241, 3324, 3305, 1057, 3232,
	2241, 3306, 1504, 2296, 3187, 3181, 3150, 3081, 2928, 2928,
	3151, 3082, 3079, 3064, 1052, 2986, 3080, 2241, 835, 1846,
	2982, 2927, 3602, 2919, 2241, 2928, 1493, 2920, 2704, 2702,
	700, 2701, 2241, 2241, 2655, 2241, 2634, 2292, 2241, 2617,
	2635, 1007, 2479, 2241, 2478, 2406, 1921, 2309, 1921, 1918,
	1009, 2241, 1010, 3512, 2388, 59, 703, 702, 1515, 1517,
	1510, 1511, 1512, 1513, 2295, 3061, 59, 2233, 2296, 60,
	1493, 1846, 1918, 3325, 2663, 2664, 2241, 2681, 2682, 2683,
	60, 1846, 2920, 2290, 2356, 64, 2141, 2241, 2283, 1053,
	2383, 1804, 1846, 3228, 1525, 2605, 64, 1535, 2324, 184,
	2240, 1920, 1515, 1517, 2241, 1921, 1755, 1905, 2912, 2426,
	1485, 1486, 2570, 1508, 1845, 2322, 1617, 70, 1554, 1223,
	2663, 2664, 1531, 3136, 1532, 2958, 2936, 1639, 70, 1485,
	1486, 1502, 1503, 1835, 2899, 1397, 2277, 1488, 1907, 186,
	2678, 2276, 1907, 2275, 1907, 2274, 2273, 1523, 75, 1011,
	1008, 834, 2142, 2900, 1554, 833, 1488, 1508, 86, 75,
	1414, 832, 831, 76, 83, 830, 2535, 1487, 826, 86,
	825, 824, 184, 216, 76, 83, 823, 822, 1533, 821,
	184, 820, 819, 818, 185, 817, 1487, 816, 815, 814,
	813, 752, 1245, 1239, 178, 1522, 751, 750, 749, 748,
	747, 216, 179, 2897, 746, 1053, 745, 77, 216, 744,
	184, 743, 186, 742, 741, 1509, 2669, 740, 77, 739,
	186, 738, 737, 153, 736, 735, 2143, 2140, 216, 1102,
	216, 216, 216, 1102, 216, 1216, 734, 733, 732, 1216,
	731, 1514, 730, 729, 728, 76, 727, 216, 216, 1082,
	186, 726, 1493, 1087, 725, 714, 713, 185, 672, 1509,
	633, 632, 2669, 624, 623, 185, 216, 622, 2684, 595,
	590, 1493, 589, 2233, 588, 178, 2663, 2664, 572, 1076,
	206, 205, 204, 179, 216, 1526, 216, 2471, 1216, 216,
	216, 1905, 216, 1999, 203, 185, 153, 202, 201, 2179,
	200, 199, 216, 2679, 153, 178, 198, 3281, 1195, 216,
	197, 1207, 196, 179, 2294, 195, 194, 193, 2165, 192,
	1053, 191, 78, 216, 216, 216, 190, 216, 1216, 189,
	2145, 188, 1216, 78, 153, 216, 1216, 216, 216, 1489,
	1490, 1491, 1492, 1494, 1495, 187, 1216, 3244, 3075, 2679,
	2163, 2929, 216, 1203, 2663, 2664, 1070, 150, 81, 2751,
	82, 2628, 2611, 1244, 1238, 2410, 1283, 1283, 150, 81,
	1524, 82, 2284, 1499, 1500, 1506, 1527, 1505, 1501, 184,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1216,
	184, 704, 2267, 3610, 1642, 120, 1928, 1095, 1783, 1189,
	1194, 1586, 704, 1665, 1219, 2680, 120, 1585, 2438, 1586,
	1572, 1229, 1065, 216, 1226, 1585, 1484, 3677, 2669, 186,
	1089, 1042, 618, 3657, 3569, 3521, 3378, 216, 1589, 3373,
	186, 2139, 3285, 3438, 3264, 621, 1584, 3156, 3263, 3251,
	3250, 3249, 121, 1367, 1100, 1225, 3248, 3515, 1201, 3243,
	3513, 2680, 3240, 121, 3239, 2305, 154, 144, 144, 1351,
	1353, 184, 3149, 846, 185, 1927, 3095, 154, 3094, 3093,
	1565, 3085, 3054, 3053, 178, 185, 1287, 120, 3052, 2978,
	1330, 1333, 179, 2974, 2746, 178, 2663, 2664, 2923, 3134,
	1349, 2698, 2689, 179, 2662, 2659, 2669, 2658, 2656, 1076,
	2641, 186, 1076, 701, 1424, 2679, 2663, 2664, 2640, 184,
	1303, 1339, 2639, 2636, 153, 1462, 1233, 2663, 2664, 2675,
	2676, 2677, 1284, 2633, 2627, 2610, 2674, 2672, 2673, 2665,
	2666, 2667, 2668, 2670, 2671, 2603, 2480, 1570, 2268, 1881,
	2128, 184, 184, 1484, 1019, 1565, 185, 1851, 1483, 186,
	1849, 3806, 2678, 3768, 3767, 1232, 178, 1237, 2454, 1243,
	3706, 3704, 3695, 1041, 179, 1489, 1490, 1491, 1492, 1494,
	1495, 3004, 3561, 1461, 2673, 2665, 2666, 2667, 2668, 2670,
	2671, 186, 186, 2679, 2298, 153, 1491, 1492, 1494, 1495,
	3558, 3555, 1553, 3532, 185, 2439, 1456, 3554, 3553, 848,
	3546, 1416, 3540, 1566, 178, 1564, 3510, 2680, 3505, 3504,
	2105, 3492, 179, 3489, 3455, 3434, 3412, 3396, 3395, 3383,
	3382, 3355, 2743, 1372, 1388, 3352, 185, 185, 2669, 2663,
	2664, 3372, 3280, 153, 3262, 216, 178, 178, 3202, 1361,
	3199, 3155, 3125, 3124, 179, 179, 846, 1366, 2669, 3111,
	3110, 3067, 2969, 1550, 2930, 2913, 2875, 2839, 2818, 2669,
	1459, 2794, 216, 2793, 2767, 153, 153, 1628, 2766, 1467,
	1619, 828, 216, 1102, 216, 216, 216, 216, 2703, 1466,
	2111, 2632, 613, 216, 216, 2680, 2631, 613, 216, 2626,
	2594, 2419, 827, 216, 1588, 1667, 1590, 1675, 1587, 1216,
	919, 1415, 1480, 1481, 1463, 1579, 1677, 1576, 2303, 2302,
	2279, 1744, 2272, 1747, 2239, 2679, 2161, 1664, 1620, 1616,
	1102, 1615, 2663, 2664, 1614, 2681, 2682, 2683, 2674, 2672,
	2673, 2665, 2666, 2667, 2668, 2670, 2671, 1752, 1613, 1612,
	3282, 3227, 1611, 1610, 1609, 1608, 2679, 1649, 1606, 1605,
	1781, 1604, 1625, 1626, 1207, 1603, 1602, 1601, 1746, 2437,
	1600, 1599, 1598, 1580, 1581, 1597, 1596, 1076, 1485, 1486,
	1595, 2669, 3236, 2178, 1594, 1593, 2794, 1592, 1006, 1485,
	1486, 1567, 1929, 1551, 144, 1549, 1544, 1064, 2678, 846,
	1055, 3091, 2164, 1048, 3078, 1488, 1673, 3070, 2614, 1516,
	184, 2270, 3423, 3284, 3090, 1566, 1488, 2672, 2673, 2665,
	2666, 2667, 2668, 2670, 2671, 2764, 1671, 2680, 1547, 1485,
	1486, 1660, 1707, 3765, 2162, 1487, 3327, 1084, 3758, 3556,
	1804, 2884, 1650, 3481, 1647, 3480, 1487, 2663, 2664, 1516,
	186, 3376, 3326, 3073, 1749, 2915, 1488, 1774, 2680, 1774,
	2914, 1774, 1216, 1216, 216, 1086, 1683, 618, 1669, 1640,
	1102, 1586, 618, 1793, 2669, 184, 1618, 1585, 3486, 1080,
	621, 1642, 2638, 1077, 1425, 621, 1487, 1676, 1644, 1454,
	2821, 1659, 1743, 1658, 1657, 185, 1655, 1035, 1668, 1654,
	1653, 3159, 2374, 2637, 1601, 178, 3516, 1601, 216, 3514,
	1080, 1678, 216, 179, 2576, 186, 3437, 216, 1085, 1822,
	1842, 2358, 1824, 1081, 1761, 1829, 2684, 1080, 3123, 811,
	2861, 1493, 2860, 1574, 2453, 216, 1387, 216, 1396, 216,
	1777, 1772, 1767, 216, 1926, 1784, 3477, 3682, 2674, 2672,
	2673, 2665, 2666, 2667, 2668, 2670, 2671, 216, 184, 3669,
	185, 2679, 3415, 1515, 1517, 918, 3678, 1656, 1397, 812,
	178, 1493, 1808, 2667, 2668, 2670, 2671, 216, 179, 1838,
	1078, 1833, 2665, 2666, 2667, 2668, 2670, 2671, 1079, 1882,
	3139, 3127, 2934, 1216, 1877, 1216, 216, 1216, 186, 153,
	216, 3794, 2707, 1515, 1517, 1216, 3006, 2136, 1216, 216,
	1874, 216, 216, 2620, 2301, 1607, 1582, 1571, 1508, 2853,
	1878, 1216, 1216, 1216, 3679, 216, 1750, 1018, 1843, 1879,
	1260, 1226, 216, 2299, 3691, 1887, 3688, 2893, 3102, 618,
	1423, 613, 216, 185, 216, 3548, 216, 1071, 216, 3360,
	216, 3619, 621, 178, 1207, 3537, 2395, 2797, 1508, 2846,
	1828, 179, 1225, 2680, 216, 3118, 1376, 216, 2487, 216,
	2450, 3730, 3581, 3729, 2950, 3316, 2776, 1250, 1844, 1985,
	216, 1422, 153, 668, 1086, 1847, 1895, 2310, 3803, 1884,
	1947, 1931, 809, 1258, 2665, 2666, 2667, 2668, 2670, 2671,
	1762, 216, 1983, 794, 1801, 216, 807, 3468, 1861, 59,
	1860, 3461, 2328, 2337, 3141, 805, 1932, 3138, 3137, 803,
	1509, 3099, 2014, 60, 846, 2326, 846, 800, 1102, 3098,
	1080, 2014, 2625, 2624, 1797, 2623, 2622, 1085, 2580, 64,
	844, 2390, 2382, 1303, 2765, 1892, 1889, 1892, 1893, 1897,
	1898, 1349, 1034, 1349, 2381, 1802, 1803, 2361, 2291, 2012,
	1509, 1943, 2086, 669, 854, 1259, 1460, 1421, 2012, 2328,
	2003, 70, 2778, 1222, 2016, 3105, 2447, 2675, 2676, 2677,
	1086, 2157, 2326, 1798, 2674, 2672, 2673, 2665, 2666, 2667,
	2668, 2670, 2671, 1766, 1765, 1937, 2156, 1774, 1776, 1922,
	1065, 1923, 75, 2397, 2044, 2340, 2820, 1934, 1936, 2117,
	2118, 2935, 86, 1102, 3394, 843, 618, 76, 83, 1374,
	2396, 2398, 2040, 2041, 1045, 2117, 2133, 1660, 2010, 621,
	797, 1909, 1077, 1085, 1911, 1859, 1965, 3580, 1495, 2141,
	1916, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	1293, 1997, 1292, 1077, 1291, 1941, 1290, 1043, 216, 2401,
	1996, 77, 1707, 1707, 1267, 2187, 1314, 2191, 2191, 2205,
	2360, 2117, 2013, 2027, 2225, 2227, 3753, 2317, 1993, 2231,
	1102, 2013, 216, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	2282, 216, 1254, 845, 3444, 2000, 1683, 1683, 1769, 2378,
	2002, 2008, 3328, 216, 2015, 2142, 1102, 2671, 1958, 828,
	2001, 2349, 828, 828, 1369, 2371, 2372, 2371, 2372, 2371,
	2372, 846, 1389, 2280, 3648, 2553, 1955, 2132, 1397, 1078,
	2031, 2011, 846, 2032, 2033, 2136, 846, 1079, 2348, 1453,
	2011, 1046, 1630, 2043, 1995, 1433, 1894, 1950, 3754, 2109,
	1078, 2941, 2339, 1951, 2940, 2107, 1998, 1420, 1079, 2532,
	2255, 3114, 2247, 2568, 2154, 2145, 3742, 3675, 2995, 2155,
	723, 2101, 2158, 2113, 2159, 2160, 78, 3741, 1649, 2143,
	2140, 2101, 1397, 3729, 1788, 789, 216, 3446, 1789, 2130,
	1465, 1771, 1959, 1278, 1216, 671, 670, 2289, 1411, 2402,
	3777, 1006, 1063, 2269, 2890, 1952, 3718, 839, 2560, 2561,
	1634, 150, 81, 593, 82, 1370, 1385, 2246, 3393, 3218,
	846, 2775, 1770, 1256, 1102, 3312, 892, 3217, 2148, 216,
	1276, 1804, 1752, 184, 842, 2216, 3756, 216, 3549, 2229,
	2200, 2891, 1437, 1637, 144, 704, 2293, 3126, 216, 120,
	1412, 2248, 2254, 550, 2259, 860, 3762, 2265, 2266, 2252,
	2253, 216, 1632, 2832, 1076, 1647, 2237, 2238, 666, 2338,
	665, 2567, 2145, 186, 2359, 216, 1102, 545, 1635, 1080,
	1216, 1790, 1992, 2145, 790, 1984, 216, 216, 2826, 875,
	3789, 1821, 1806, 1588, 1792, 1375, 121, 592, 3676, 801,
	1080, 2890, 1633, 1278, 2327, 2207, 2777, 1795, 1982, 216,
	154, 2808, 216, 801, 2329, 698, 1577, 2304, 185, 216,
	1906, 2281, 801, 1810, 2722, 216, 802, 2538, 178, 2308,
	2762, 1795, 2423, 1804, 801, 216, 179, 216, 1195, 3214,
	216, 2842, 3738, 625, 1814, 1044, 216, 2364, 1994, 216,
	1794, 216, 1207, 216, 2379, 1313, 2807, 153, 216, 1216,
	1216, 3406, 1216, 2363, 2307, 1580, 1581, 216, 216, 2311,
	216, 216, 2328, 3631, 1216, 3310, 3560, 3674, 1543, 2461,
	2630, 1253, 216, 3755, 2139, 2343, 1636, 1707, 3717, 1811,
	2127, 3445, 3778, 2332, 2391, 2264, 1957, 2407, 216, 216,
	216, 2342, 2345, 216, 3115, 216, 2351, 3344, 216, 2251,
	216, 2541, 216, 1038, 845, 2501, 3354, 2362, 2475, 798,
	950, 1683, 2097, 3599, 3208, 2083, 2522, 3087, 2523, 1058,
	2380, 791, 3219, 216, 216, 216, 216, 216, 216, 2323,
	216, 1795, 2373, 2375, 2376, 2377, 2095, 596, 1434, 2952,
	2551, 3760, 1795, 1226, 3154, 1778, 1779, 724, 1399, 2486,
	212, 618, 540, 541, 3563, 556, 540, 556, 566, 571,
	1815, 216, 587, 2417, 621, 1831, 1036, 1207, 2427, 216,
	2463, 212, 2721, 2992, 2408, 144, 2814, 2476, 2505, 1954,
	2445, 2508, 2591, 2509, 2517, 1830, 2456, 2108, 709, 594,
	3311, 591, 212, 1371, 2524, 2467, 2526, 2468, 2528, 2469,
	1949, 1207, 3673, 1207, 2503, 2540, 2589, 2506, 2507, 2520,
	1349, 2582, 1432, 2477, 2536, 1826, 2512, 2513, 2514, 3761,
	2488, 2100, 1816, 1817, 3716, 2537, 1035, 2355, 1035, 2504,
	3728, 1812, 2473, 792, 2810, 1435, 1802, 1803, 601, 546,
	626, 627, 1464, 2543, 2091, 2545, 1788, 2993, 2313, 2081,
	1789, 3763, 2084, 3790, 1062, 2092, 2387, 3597, 216, 2093,
	3345, 2315, 2812, 2098, 1827, 1813, 3726, 1823, 1384, 1386,
	2608, 2609, 793, 2519, 2583, 2612, 3577, 2559, 2412, 1634,
	2414, 2613, 2525, 1907, 2527, 1791, 2529, 3598, 2550, 540,
	540, 2549, 3491, 2316, 547, 3169, 2344, 212, 2877, 2548,
	606, 1868, 2080, 2554, 2470, 2539, 2604, 2027, 2314, 1436,
	3390, 2546, 1637, 2811, 2586, 1627, 1056, 2569, 2452, 1051,
	1788, 2452, 603, 537, 1789, 3699, 1475, 1474, 3215, 2587,
	1543, 2249, 3700, 2592, 548, 2030, 549, 1805, 1763, 2956,
	629, 628, 3260, 1790, 3783, 1474, 3452, 1635, 2755, 3451,
	3432, 2145, 3536, 3170, 1760, 1818, 1792, 3101, 1469, 2878,
	2872, 3315, 2789, 2785, 2431, 2581, 1102, 846, 3314, 2421,
	1888, 1880, 2700, 1873, 1853, 2991, 3043, 3564, 2714, 2715,
	3608, 2020, 1989, 2953, 1373, 216, 789, 1756, 2716, 3172,
	216, 630, 631, 216, 3365, 2418, 216, 216, 1102, 2365,
	1316, 720, 216, 3475, 3473, 3433, 2530, 1474, 839, 2094,
	2800, 2796, 1794, 2619, 3389, 1102, 1473, 1790, 2096, 1400,
	1819, 2795, 216, 1758, 2574, 2552, 598, 2736, 1942, 3069,
	1792, 2719, 2718, 712, 1473, 1413, 3220, 216, 2288, 2287,
	2082, 2286, 1759, 2285, 1285, 2760, 602, 2425, 843, 1299,
	2405, 1297, 3542, 3336, 1475, 1636, 216, 216, 216, 722,
	2771, 1286, 216, 2924, 1886, 216, 2726, 3266, 2750, 2724,
	2243, 605, 1475, 216, 216, 2773, 216, 216, 216, 2588,
	3735, 1034, 2745, 1034, 2021, 790, 1794, 600, 2590, 2779,
	216, 216, 216, 3261, 2749, 3471, 1473, 2725, 3782, 216,
	2782, 2783, 2734, 2695, 2696, 2697, 2742, 3221, 2737, 2738,
	1076, 2708, 216, 216, 1795, 3698, 3611, 2798, 3313, 3044,
	2802, 1102, 3391, 2763, 2723, 3543, 597, 3045, 3565, 3430,
	2799, 3440, 1216, 2804, 2805, 3616, 2735, 3605, 2730, 2245,
	3058, 1102, 2366, 2367, 2244, 2152, 216, 2786, 2781, 216,
	216, 1451, 3737, 216, 2752, 3693, 1216, 216, 3557, 216,
	2790, 3431, 1449, 1707, 607, 2825, 1429, 1216, 1207, 2757,
	2758, 2759, 2740, 3411, 2741, 599, 216, 2768, 2769, 216,
	2770, 2713, 3612, 837, 216, 789, 216, 2774, 1795, 1877,
	2886, 3544, 1793, 216, 2858, 1427, 2871, 1683, 1410, 3259,
	1707, 2840, 216, 216, 2780, 2833, 2756, 839, 718, 719,
	2823, 3441, 3303, 2739, 2692, 1408, 2731, 1216, 1216, 1793,
	2813, 2968, 1786, 1406, 2932, 216, 216, 2849, 2501, 216,
	2753, 2819, 791, 2657, 1683, 2593, 1404, 2501, 2895, 2828,
	710, 711, 3300, 2847, 1402, 1394, 1392, 838, 2835, 2831,
	1298, 1833, 1296, 1049, 2843, 2841, 2422, 1791, 2729, 1833,
	721, 2389, 2357, 1295, 2306, 1666, 216, 1663, 1102, 216,
	216, 1102, 216, 2850, 1452, 2363, 2848, 1364, 2733, 1207,
	1207, 1059, 2879, 2887, 790, 1981, 3301, 2869, 587, 2693,
	2949, 2829, 2948, 1469, 2534, 2830, 2866, 2834, 2533, 2511,
	2009, 1991, 1962, 1745, 2151, 216, 1591, 1450, 212, 1368,
	212, 212, 1198, 1271, 212, 846, 2892, 3668, 1448, 1630,
	3332, 2906, 1428, 3323, 2926, 2901, 3604, 212, 1228, 2894,
	2907, 1791, 2922, 144, 144, 2909, 2910, 3363, 3289, 3168,
	3164, 3714, 1102, 2946, 792, 3121, 1247, 3119, 3100, 1207,
	2870, 1426, 2911, 2937, 1409, 2938, 2753, 2939, 2732, 1102,
	2862, 216, 1478, 2885, 1270, 2472, 1275, 2448, 2436, 212,
	212, 1407, 1198, 2428, 2415, 1919, 1917, 2931, 2971, 1405,
	2815, 2816, 212, 793, 2817, 1912, 1910, 1634, 1908, 1312,
	1899, 2947, 1403, 799, 1852, 2980, 2981, 2943, 1850, 1839,
	1401, 1393, 1391, 212, 212, 212, 1834, 1198, 2951, 1820,
	1807, 2988, 2836, 2837, 1796, 587, 2838, 212, 212, 1294,
	1637, 2882, 1015, 2954, 3498, 1674, 3730, 3639, 3385, 3380,
	1557, 791, 709, 1035, 1562, 2572, 3296, 3379, 1980, 1632,
	3297, 2502, 1782, 1252, 2328, 3500, 1016, 2347, 3055, 1035,
	2328, 3180, 1479, 2944, 2976, 1635, 1804, 2326, 2903, 2904,
	2905, 1707, 1953, 2346, 2908, 1446, 1447, 2987, 1338, 1885,
	1337, 216, 216, 1979, 2040, 3013, 604, 3003, 3007, 1633,
	1978, 3299, 1102, 1201, 3009, 3638, 1100, 1960, 3010, 3317,
	2040, 3023, 3551, 212, 3302, 1683, 3012, 1485, 1486, 3074,
	1390, 2998, 3020, 216, 2994, 2996, 2997, 212, 3047, 3523,
	3008, 3267, 3022, 2573, 1707, 1707, 1485, 1486, 804, 806,
	808, 3051, 2368, 2350, 1488, 1482, 3096, 3731, 3724, 551,
	1707, 1707, 1753, 3048, 2384, 2352, 1017, 3603, 3065, 3066,
	3757, 836, 1038, 792, 1038, 1338, 1338, 657, 1683, 1683,
	3573, 216, 697, 3060, 1487, 3062, 3063, 2984, 144, 2386,
	3056, 1707, 1672, 1636, 1683, 1683, 2354, 3128, 3572, 3570,
	3163, 2385, 3153, 1487, 3000, 3076, 562, 1216, 2353, 3084,
	1216, 2455, 793, 2230, 3077, 1748, 1679, 2761, 3140, 3781,
	2663, 2664, 1554, 216, 3241, 1683, 1485, 1486, 3298, 2320,
	2321, 216, 2318, 2319, 1378, 1036, 2147, 1036, 216, 3089,
	1377, 2320, 2318, 2153, 1216, 1431, 3132, 3237, 1430, 3088,
	2999, 1552, 3800, 3770, 3743, 3104, 3533, 3465, 216, 3424,
	3422, 3351, 3283, 3205, 3133, 3135, 3198, 3182, 3144, 3186,
	3166, 3148, 3092, 216, 216, 1216, 1216, 1216, 3147, 216,
	216, 216, 3174, 3146, 216, 216, 3117, 3112, 216, 216,
	2902, 1216, 2876, 3160, 2874, 2516, 216, 1102, 2515, 2465,
	2440, 3177, 2461, 2416, 3176, 3161, 2363, 2112, 1877, 1977,
	1976, 3173, 1975, 1974, 1902, 2790, 1901, 1900, 1034, 1102,
	1883, 1863, 1862, 1858, 3162, 1857, 1856, 3086, 1855, 1854,
	1445, 1444, 1325, 2501, 1034, 1324, 1323, 1322, 1321, 1320,
	1319, 1318, 1317, 3165, 1315, 540, 1310, 1309, 1308, 3206,
	1307, 1306, 3145, 3175, 3235, 1707, 1266, 1265, 3183, 3178,
	2024, 3184, 1264, 1263, 1262, 216, 212, 1261, 212, 1255,
	3195, 3196, 212, 3190, 3189, 1251, 1249, 1248, 1093, 3203,
	3201, 3204, 1228, 3231, 1198, 212, 3197, 212, 1092, 1683,
	3200, 1091, 212, 1228, 556, 1090, 1061, 212, 1228, 3223,
	3211, 3222, 3216, 587, 1060, 990, 897, 1754, 810, 796,
	3443, 1439, 74, 1257, 644, 68, 3116, 652, 3618, 3194,
	2806, 2393, 1961, 3120, 1398, 3122, 1963, 2744, 216, 2271,
	3596, 3245, 2629, 3529, 1102, 3405, 1102, 2150, 1573, 71,
	885, 972, 3343, 3342, 3290, 3103, 2491, 3340, 3339, 853,
	1105, 3272, 1764, 891, 1780, 1773, 2300, 2190, 1687, 216,
	216, 216, 894, 1684, 1686, 896, 1707, 895, 3258, 1685,
	1575, 893, 216, 1682, 2424, 2459, 1302, 775, 1768, 2106,
	216, 2134, 216, 2618, 1568, 216, 216, 216, 3308, 1629,
	866, 887, 2131, 1054, 2727, 3309, 2208, 1102, 216, 216,
	1683, 2889, 1102, 3286, 3287, 3083, 3371, 2019, 3320, 3321,
	660, 3268, 216, 2660, 3275, 2137, 216, 3271, 3274, 3273,
	3278, 3269, 3270, 1047, 3318, 216, 2213, 2749, 3188, 1102,
	216, 3279, 2206, 2202, 1216, 2449, 1455, 1545, 3319, 2460,
	1088, 869, 2104, 1559, 2598, 2029, 3288, 2896, 2747, 2297,
	3635, 2034, 1867, 3307, 1014, 1013, 3337, 1012, 3625, 3622,
	2856, 1757, 2312, 216, 212, 1537, 2863, 881, 1206, 2712,
	2925, 3330, 3367, 1268, 3550, 1102, 1877, 3381, 1536, 2400,
	2399, 3539, 3334, 1075, 1074, 1073, 3384, 2788, 3338, 3788,
	3207, 3113, 3331, 3353, 183, 2566, 1476, 3356, 3358, 3370,
	3375, 3366, 1468, 180, 182, 1102, 181, 3368, 212, 3361,
	3347, 3130, 212, 17, 91, 36, 16, 212, 119, 118,
	117, 116, 115, 114, 113, 108, 112, 111, 110, 109,
	107, 106, 105, 104, 103, 212, 102, 212, 101, 212,
	100, 99, 1102, 540, 852, 98, 3417, 3392, 97, 96,
	216, 3277, 216, 95, 1102, 216, 3402, 1903, 94, 93,
	92, 583, 580, 216, 50, 1035, 49, 3397, 90, 89,
	15, 34, 13, 54, 55, 12, 3413, 212, 29, 30,
	1035, 80, 79, 28, 14, 27, 216, 25, 3427, 10,
	8, 7, 31, 1651, 11, 149, 587, 3418, 3419, 148,
	709, 147, 73, 146, 145, 216, 72, 23, 3426, 212,
	1035, 1198, 212, 216, 9, 141, 3421, 3484, 3158, 2110,
	67, 216, 143, 3464, 1102, 587, 142, 1216, 140, 3483,
	139, 3474, 212, 216, 3448, 3425, 1557, 3447, 138, 65,
	137, 212, 212, 69, 212, 136, 212, 66, 212, 135,
	212, 3462, 3488, 21, 216, 216, 3499, 2858, 5, 1707,
	3507, 3508, 3472, 53, 1986, 3495, 6, 1987, 3482, 1988,
	3387, 3466, 2933, 3454, 3519, 3520, 216, 84, 85, 1038,
	212, 3497, 32, 63, 3487, 62, 61, 2212, 20, 3496,
	1100, 216, 52, 1683, 3494, 1038, 3502, 19, 3370, 3501,
	173, 571, 172, 171, 3493, 587, 3545, 170, 165, 164,
	169, 3346, 167, 1707, 166, 168, 163, 3535, 175, 1345,
	3403, 3357, 174, 3522, 177, 161, 3527, 157, 156, 160,
	162, 159, 1207, 3552, 158, 155, 176, 58, 134, 3374,
	216, 3534, 1036, 133, 132, 3559, 131, 1683, 130, 129,
	128, 57, 216, 18, 2, 1216, 1, 3403, 1036, 0,
	0, 216, 0, 0, 0, 1216, 1216, 3574, 3587, 2043,
	3576, 1216, 0, 0, 3518, 216, 0, 216, 0, 0,
	3503, 1035, 3567, 3568, 3571, 0, 0, 0, 3511, 0,
	3566, 0, 0, 3578, 3579, 0, 0, 0, 3592, 0,
	3593, 216, 3600, 0, 2556, 0, 0, 216, 3591, 1707,
	216, 3615, 1102, 3584, 3487, 0, 0, 3583, 3613, 0,
	1034, 216, 216, 3585, 3586, 3624, 3627, 3633, 0, 3590,
	3614, 0, 0, 3640, 3628, 1034, 0, 3632, 216, 3456,
	3457, 0, 0, 1683, 0, 0, 3620, 0, 0, 0,
	3653, 0, 3652, 3629, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 216, 0, 1034, 3637, 0, 3644, 0,
	3647, 0, 0, 212, 3649, 0, 0, 0, 0, 3680,
	0, 0, 540, 3685, 2208, 2208, 3664, 3665, 3666, 212,
	0, 540, 3303, 3667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 3703, 0, 0, 0, 216,
	3705, 3683, 0, 3701, 0, 0, 3710, 0, 3711, 0,
	0, 0, 3300, 0, 0, 3293, 0, 3715, 0, 216,
	3702, 0, 0, 3707, 0, 0, 0, 0, 0, 0,
	3291, 0, 0, 0, 0, 0, 3295, 3721, 3722, 3733,
	0, 0, 3725, 2461, 3727, 3723, 216, 0, 216, 3624,
	0, 0, 3627, 3732, 3734, 3736, 3301, 0, 3746, 3748,
	3745, 3740, 852, 0, 0, 3752, 852, 3744, 3750, 3739,
	0, 0, 3747, 3751, 3749, 0, 556, 0, 0, 59,
	0, 0, 0, 0, 2208, 2208, 2208, 0, 3294, 0,
	3764, 3766, 3637, 60, 0, 0, 0, 0, 0, 0,
	3772, 0, 3771, 0, 0, 0, 1230, 0, 1234, 64,
	1240, 3774, 0, 0, 3779, 3776, 0, 2043, 0, 2336,
	0, 0, 3785, 0, 0, 3792, 1034, 212, 0, 0,
	3795, 0, 0, 0, 0, 3791, 3786, 3787, 212, 1035,
	1035, 70, 3708, 3709, 3798, 0, 3712, 3799, 0, 3801,
	0, 212, 0, 3804, 0, 0, 0, 0, 3808, 3802,
	3810, 0, 0, 0, 3805, 212, 0, 3807, 0, 0,
	0, 0, 75, 0, 3812, 3809, 212, 2409, 0, 0,
	0, 0, 86, 0, 0, 2212, 0, 76, 83, 0,
	1360, 0, 0, 0, 0, 0, 0, 0, 1365, 1228,
	0, 0, 212, 0, 0, 0, 3296, 0, 0, 212,
	3297, 0, 0, 0, 0, 2444, 0, 0, 3641, 0,
	0, 3642, 0, 0, 0, 2336, 0, 540, 0, 0,
	2464, 77, 0, 0, 0, 0, 212, 0, 0, 212,
	0, 212, 0, 212, 0, 0, 0, 0, 1198, 0,
	0, 3299, 0, 0, 1417, 0, 0, 2484, 709, 0,
	2336, 2336, 0, 0, 3302, 2212, 2212, 0, 0, 0,
	0, 0, 212, 0, 0, 2663, 2664, 0, 2681, 2682,
	2683, 0, 0, 0, 0, 0, 0, 0, 212, 1198,
	212, 0, 0, 1228, 2973, 1228, 0, 0, 1198, 0,
	1198, 0, 1198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2595, 2596, 0, 0, 1035,
	0, 0, 0, 212, 212, 212, 212, 1198, 212, 0,
	212, 0, 0, 0, 0, 1538, 1539, 1540, 1541, 1542,
	0, 2678, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 1556, 0, 0, 0, 3298, 212,
	1569, 1038, 0, 0, 0, 2212, 2212, 2212, 0, 0,
	0, 150, 81, 0, 82, 0, 1038, 0, 0, 0,
	0, 0, 0, 0, 1034, 1034, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 704, 1038, 2669, 1220, 120,
	0, 0, 0, 0, 0, 2686, 2687, 2688, 0, 0,
	0, 0, 0, 0, 1036, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 1036,
	0, 0, 0, 0, 0, 0, 2208, 2208, 1228, 0,
	0, 0, 0, 0, 0, 0, 121, 1279, 0, 2684,
	2663, 2664, 0, 2681, 2682, 2683, 0, 0, 0, 1036,
	154, 0, 1035, 0, 0, 0, 0, 0, 185, 2972,
	1035, 0, 1623, 1623, 1623, 0, 0, 0, 178, 0,
	0, 0, 0, 1035, 2679, 1672, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 2678, 0, 0, 0,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 0,
	2208, 0, 0, 852, 0, 212, 0, 0, 1379, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 540, 0, 1038, 0, 0,
	540, 0, 0, 540, 0, 0, 540, 540, 0, 0,
	0, 0, 540, 0, 0, 0, 2680, 0, 0, 0,
	212, 0, 2669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 0, 2336, 2336, 212, 0,
	0, 0, 2336, 0, 2684, 2792, 0, 0, 0, 0,
	0, 0, 0, 2336, 2792, 0, 2336, 2792, 2792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 212, 212, 0, 0, 0, 0, 0, 0, 2679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 1198, 0, 0, 0, 0, 0, 0,
	2675, 2676, 2677, 0, 0, 214, 0, 2674, 2672, 2673,
	2665, 2666, 2667, 2668, 2670, 2671, 0, 1034, 0, 0,
	0, 0, 0, 0, 0, 1034, 2852, 2212, 2212, 2854,
	2336, 0, 0, 212, 0, 0, 0, 212, 1034, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2444, 0, 0, 1198,
	0, 212, 0, 0, 2336, 0, 540, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 2964, 2965, 0,
	0, 2680, 212, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 2444, 0, 0, 2444,
	0, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
	2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
	0, 2212, 0, 0, 0, 1038, 1038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2942, 0, 0, 1198,
	212, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	864, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032,
	3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042,
	0, 3046, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2675, 2676, 2677, 1036, 1036,
	0, 0, 2674, 2672, 2673, 2665, 2666, 2667, 2668, 2670,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 0, 2022, 0, 0, 0, 0,
	0, 3005, 2036, 0, 0, 0, 0, 0, 0, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 0, 2085, 0, 2087, 2088, 2089,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2114, 0, 0,
	0, 0, 1220, 0, 0, 1038, 0, 0, 0, 0,
	1556, 0, 0, 0, 2129, 0, 0, 0, 0, 212,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 540, 0, 2167, 2170, 2173, 2176, 0, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 0, 0, 1485, 1486,
	2204, 0, 2215, 2217, 2222, 0, 0, 0, 1036, 0,
	0, 0, 0, 1228, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 587, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 2208, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	1944, 1945, 1946, 212, 0, 951, 0, 0, 1038, 0,
	60, 212, 3226, 0, 0, 0, 1038, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 1038,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 2336, 212,
	1493, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 2484, 2484, 0, 0, 0, 70, 709,
	709, 2336, 0, 0, 2444, 2444, 213, 0, 709, 2336,
	0, 1036, 1515, 1517, 0, 0, 212, 0, 0, 1036,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 75,
	0, 0, 1036, 0, 0, 0, 2208, 0, 0, 86,
	0, 1502, 1503, 0, 76, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 864, 0,
	0, 0, 864, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 1187, 0, 0, 0, 1187, 2411,
	0, 2413, 0, 0, 0, 3246, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2663, 2664, 0, 2681, 2682, 2683, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 1228, 0,
	212, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 2212, 0, 0, 0, 2336,
	2336, 2336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 2678, 0, 0,
	2336, 0, 2792, 78, 0, 1228, 1228, 212, 0, 2531,
	0, 0, 0, 0, 0, 0, 0, 2212, 212, 212,
	0, 0, 1030, 0, 0, 3410, 0, 0, 0, 0,
	0, 0, 2336, 0, 0, 0, 3349, 0, 150, 81,
	0, 82, 0, 0, 0, 212, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 1538, 1539, 0, 0, 0,
	184, 0, 207, 0, 0, 0, 0, 3435, 0, 0,
	0, 0, 704, 2669, 0, 0, 120, 0, 0, 0,
	0, 1485, 1486, 1228, 0, 0, 0, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	186, 1516, 0, 0, 0, 1485, 1486, 0, 1488, 0,
	2578, 2579, 0, 0, 0, 0, 2585, 0, 0, 0,
	0, 0, 0, 121, 0, 1516, 0, 2212, 0, 0,
	0, 0, 1488, 0, 0, 2599, 2600, 154, 1487, 0,
	0, 2129, 0, 0, 0, 185, 0, 1507, 0, 0,
	2607, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	2679, 0, 1487, 179, 0, 0, 2621, 0, 0, 0,
	2336, 1507, 2792, 0, 0, 3429, 0, 3526, 0, 1504,
	0, 0, 0, 212, 1352, 0, 0, 0, 0, 0,
	0, 2642, 0, 0, 0, 0, 2212, 2212, 0, 2403,
	0, 0, 0, 0, 0, 0, 587, 0, 0, 0,
	0, 0, 0, 1510, 1511, 1512, 1513, 0, 0, 2967,
	0, 0, 0, 1493, 0, 3429, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 1510, 1511, 1512,
	1513, 3490, 0, 0, 0, 0, 0, 1493, 2222, 2222,
	2222, 0, 0, 1228, 0, 1515, 1517, 0, 0, 0,
	0, 0, 2680, 1623, 0, 0, 0, 0, 0, 0,
	0, 2717, 0, 0, 212, 212, 0, 0, 2474, 1515,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 3005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1502, 1503,
	1508, 3429, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 852, 0,
	0, 0, 0, 213, 1107, 213, 213, 0, 1107, 213,
	1107, 0, 852, 0, 1107, 0, 0, 0, 0, 864,
	3349, 0, 213, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 2675, 2676, 2677, 2809,
	0, 2792, 0, 2674, 2672, 2673, 2665, 2666, 2667, 2668,
	2670, 2671, 0, 0, 1514, 1228, 0, 1228, 0, 0,
	0, 0, 0, 1107, 213, 213, 0, 0, 1485, 1486,
	0, 0, 1509, 0, 0, 0, 0, 213, 1514, 0,
	0, 3609, 0, 0, 0, 0, 0, 1228, 1516, 0,
	212, 0, 0, 0, 0, 1488, 1509, 0, 213, 213,
	213, 212, 2336, 1107, 0, 0, 0, 1107, 0, 0,
	0, 1107, 213, 213, 0, 0, 0, 0, 212, 0,
	0, 1107, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 1486, 0, 0, 213, 2336,
	1528, 1529, 1530, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 213, 0, 1516, 0, 0, 0, 0, 3429,
	1493, 1488, 0, 0, 1505, 1501, 1534, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 0, 2336, 0,
	0, 1487, 1515, 1517, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 917, 0, 0, 0, 0, 1504, 0,
	2036, 0, 0, 0, 0, 0, 2959, 2960, 0, 0,
	2963, 0, 0, 0, 2966, 0, 0, 0, 0, 0,
	1097, 0, 0, 2970, 0, 0, 1205, 0, 0, 0,
	0, 0, 2977, 211, 0, 2717, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2989, 0, 0, 0, 619, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 3014,
	3015, 0, 3016, 3017, 3018, 0, 0, 3019, 0, 0,
	1525, 3021, 0, 1535, 1304, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 1329, 1329, 0, 0,
	0, 0, 3049, 3050, 0, 0, 0, 1502, 1503, 1358,
	1359, 0, 0, 0, 0, 0, 0, 3059, 0, 1509,
	0, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 3068, 1508, 0, 0, 0, 0, 0, 1485,
	1486, 2844, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 1516,
	1037, 0, 0, 0, 0, 2867, 1488, 0, 1107, 0,
	213, 213, 213, 0, 0, 0, 2873, 213, 0, 0,
	0, 0, 213, 0, 0, 1438, 0, 0, 3097, 0,
	0, 0, 0, 0, 1107, 0, 1487, 0, 0, 0,
	0, 0, 0, 3106, 3109, 1507, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 1107, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 2917, 2918, 1187, 3129,
	0, 0, 0, 0, 0, 1509, 217, 0, 0, 0,
	0, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 0, 0, 2962, 0, 0, 0, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 612, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 3185,
	0, 0, 0, 1515, 1517, 0, 0, 0, 612, 0,
	0, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 1524, 1107, 1107, 213,
	0, 0, 1527, 1505, 1501, 1107, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 0, 0, 0, 1508, 0,
	0, 3224, 3225, 0, 0, 0, 0, 3229, 3230, 0,
	0, 0, 3233, 3234, 0, 0, 0, 0, 0, 3238,
	0, 0, 0, 213, 0, 0, 0, 213, 0, 0,
	3242, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3247, 0, 0, 0,
	213, 0, 213, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 0, 0, 0, 0, 1187,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 1205,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 1107, 0,
	1107, 0, 1107, 0, 0, 0, 0, 0, 0, 0,
	1107, 1187, 0, 1107, 213, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 1107, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	3109, 0, 0, 0, 0, 0, 213, 213, 0, 213,
	0, 213, 0, 213, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 211, 0, 211, 211, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 3142, 0, 1505, 1501,
	619, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3109,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 211, 0, 0, 3398, 3399, 3400, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 3191, 3192, 3193, 0, 0, 0,
	0, 0, 3408, 3409, 0, 0, 211, 211, 211, 0,
	1865, 0, 0, 0, 1872, 0, 3416, 0, 0, 0,
	211, 211, 0, 1485, 1486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 1107, 1891,
	0, 1891, 0, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 0, 3109, 0, 0, 0,
	0, 0, 0, 0, 3453, 0, 0, 0, 0, 0,
	0, 0, 0, 3460, 0, 0, 852, 0, 0, 1205,
	1487, 0, 3467, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 211, 1504, 0, 0,
	886, 88, 0, 0, 0, 1107, 0, 0, 0, 0,
	211, 1872, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 1107, 3109, 3109, 1956, 0, 0, 2961, 0, 0,
	0, 0, 0, 0, 1966, 0, 1968, 0, 1970, 0,
	1972, 0, 1973, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 88, 0, 1103,
	0, 1217, 1990, 0, 3538, 1217, 0, 3541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 3109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 1187, 0, 0, 1217, 0, 0, 0, 0, 3109,
	0, 0, 3109, 0, 0, 829, 0, 0, 0, 1107,
	0, 0, 1508, 0, 847, 0, 0, 0, 0, 0,
	0, 0, 213, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 1217, 0, 0, 0, 1217, 0,
	1187, 0, 1217, 0, 0, 0, 213, 1024, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 0,
	213, 1107, 0, 0, 864, 1107, 852, 0, 0, 2663,
	2664, 213, 2681, 2682, 2683, 0, 0, 0, 864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 1514, 213, 0, 1645,
	0, 1037, 0, 0, 213, 211, 921, 3663, 3663, 3663,
	0, 0, 0, 0, 1509, 0, 0, 0, 211, 1645,
	211, 0, 0, 0, 0, 619, 0, 0, 0, 3684,
	619, 213, 0, 0, 213, 2678, 213, 0, 213, 0,
	0, 0, 0, 0, 1107, 1107, 1187, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 2278, 1187, 213, 0, 0,
	3663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2669, 0, 0, 3109, 0, 3109, 0, 213, 213,
	213, 213, 0, 213, 0, 213, 0, 0, 0, 0,
	0, 0, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 2684, 213, 0, 0, 3663, 3780, 0,
	0, 0, 0, 0, 0, 3784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 0, 0, 1187, 619, 2679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2663, 2664, 0, 2681, 2682,
	2683, 0, 0, 0, 0, 0, 0, 1205, 0, 0,
	0, 211, 0, 0, 0, 211, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1187, 211, 0,
	211, 0, 211, 0, 1872, 0, 0, 0, 0, 1103,
	0, 2435, 0, 0, 1187, 0, 0, 0, 612, 0,
	0, 2678, 0, 612, 0, 0, 0, 0, 0, 0,
	2680, 0, 0, 0, 0, 1217, 0, 0, 2466, 0,
	211, 1329, 0, 1329, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 2510, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2518, 1107, 2521, 0, 0, 211, 0, 2669, 0, 0,
	0, 0, 0, 0, 619, 211, 0, 211, 0, 211,
	0, 211, 0, 211, 0, 0, 0, 0, 88, 0,
	88, 0, 88, 1107, 2685, 2542, 1205, 2544, 1205, 0,
	2547, 0, 0, 0, 0, 0, 0, 1187, 0, 0,
	1107, 0, 0, 211, 2675, 2676, 2677, 0, 0, 2684,
	0, 2674, 2672, 2673, 2665, 2666, 2667, 2668, 2670, 2671,
	0, 0, 0, 1329, 0, 0, 0, 0, 0, 0,
	0, 2575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 2679, 0, 0, 0, 1217, 1217,
	0, 0, 847, 88, 88, 0, 1103, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 213, 213, 213, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 0, 0, 88, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 1107, 213, 0, 0, 0, 2680, 0, 0, 0,
	0, 0, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	0, 1217, 1187, 1217, 0, 0, 0, 213, 213, 0,
	0, 1217, 0, 0, 1217, 1104, 1037, 0, 0, 1104,
	829, 1218, 1107, 1107, 1187, 1218, 0, 1217, 1217, 1217,
	213, 0, 1037, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 211, 612, 0, 0,
	0, 0, 0, 0, 0, 1555, 0, 0, 0, 1561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1107, 1218, 213, 1107, 213, 0, 0,
	2675, 2676, 2677, 0, 0, 0, 0, 2674, 2672, 2673,
	2665, 2666, 2667, 2668, 2670, 2671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 0, 1218, 0, 0, 0, 1218, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 1103, 0, 0, 0, 0, 1187,
	2784, 1187, 0, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 691, 1107, 0, 0, 0, 0, 0,
	0, 0, 2822, 2824, 2435, 1218, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 1643, 0, 1646, 0,
	88, 0, 1187, 0, 211, 0, 0, 1187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 1103,
	0, 674, 0, 0, 0, 0, 0, 0, 0, 619,
	675, 0, 0, 0, 1187, 2864, 0, 0, 0, 2868,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 211, 0, 696, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 677,
	1187, 0, 0, 0, 1205, 1205, 1103, 1107, 0, 211,
	0, 0, 211, 0, 211, 0, 211, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 2921, 0, 0,
	1187, 0, 1103, 0, 0, 0, 0, 0, 679, 0,
	0, 680, 0, 0, 0, 211, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 211, 0, 0, 0, 1187, 695, 0,
	0, 0, 2945, 0, 1205, 0, 0, 0, 0, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 211, 211, 211,
	0, 211, 1107, 211, 0, 1107, 0, 2957, 0, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 213, 0,
	1217, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 213, 211, 0, 0, 0, 0, 1107,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 1187,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 682,
	1107, 1107, 1107, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1107, 698, 0, 683,
	0, 213, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1103, 0, 0, 1218, 1217, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 684, 0, 1104, 685, 0, 0,
	0, 0, 0, 693, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 847, 0, 847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 694, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 1217, 1217, 0, 1217, 0,
	0, 0, 690, 0, 0, 0, 0, 689, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 692, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 1107, 0, 0, 0, 0, 0, 1187, 1037, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 1218, 1218,
	0, 0, 0, 0, 0, 0, 1104, 0, 829, 0,
	0, 829, 829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 1107, 213, 213, 3157, 0, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 0, 1107, 213, 2103, 0, 0, 1107,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1555, 634, 0, 0, 1555, 0, 0, 0, 0,
	0, 0, 0, 211, 211, 211, 0, 0, 3209, 0,
	1107, 0, 1645, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 1218,
	0, 1218, 0, 1218, 0, 0, 0, 0, 0, 0,
	1107, 1218, 0, 0, 1218, 0, 0, 0, 0, 0,
	637, 654, 0, 0, 0, 0, 0, 1218, 1218, 1218,
	0, 0, 0, 1024, 0, 0, 211, 0, 0, 0,
	211, 0, 0, 638, 0, 0, 639, 1107, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 661, 1037, 0, 0, 0, 213, 640,
	0, 1485, 1486, 0, 0, 0, 0, 0, 659, 0,
	88, 0, 0, 0, 0, 211, 211, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 635, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 1103, 0, 0, 0, 0, 641, 0, 0,
	642, 663, 0, 0, 0, 606, 0, 0, 1487, 1107,
	0, 0, 1107, 0, 1104, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 1103, 1504, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 211, 0, 0, 0, 213,
	213, 1103, 0, 0, 0, 0, 0, 0, 0, 3322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2435, 0, 0, 0, 0, 2584, 0, 0, 211, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	88, 0, 645, 1510, 1511, 1512, 1513, 2435, 0, 0,
	0, 0, 3362, 1493, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 0, 0, 1515, 1517, 0, 646, 0,
	0, 88, 0, 88, 0, 0, 0, 213, 0, 0,
	1107, 0, 0, 0, 0, 0, 0, 1103, 647, 0,
	1107, 1107, 0, 0, 1502, 1503, 1107, 0, 1217, 0,
	0, 0, 0, 0, 0, 0, 1104, 1103, 0, 0,
	0, 88, 0, 0, 88, 0, 605, 0, 0, 0,
	1508, 0, 1217, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 1104, 1217, 0, 213, 0, 1107, 0, 648,
	0, 88, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 1037, 1037, 0, 0, 0, 0, 653, 0,
	0, 0, 0, 213, 0, 3436, 0, 0, 0, 0,
	649, 0, 0, 666, 0, 665, 0, 0, 650, 0,
	0, 0, 0, 1217, 1217, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 0, 658, 0, 0, 88,
	0, 667, 0, 664, 1514, 0, 0, 0, 0, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 3517, 1205, 0, 0,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1516, 0, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 1534, 0, 211, 0, 0, 0,
	0, 0, 1104, 0, 211, 2103, 1218, 0, 1103, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 1103, 1555, 0, 1507, 0,
	0, 0, 1037, 0, 0, 0, 1504, 0, 0, 0,
	1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 0, 0, 3575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 1218, 0, 1218, 0,
	0, 0, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	1218, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 3617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3634, 0, 0, 0, 0, 1525, 0,
	0, 1535, 0, 0, 0, 0, 1515, 1517, 0, 0,
	3646, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	0, 0, 0, 0, 0, 1024, 1531, 0, 1532, 0,
	0, 0, 0, 0, 0, 1502, 1503, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 211, 88, 88, 1514, 0, 88, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 211, 0, 88, 88, 0, 0, 88,
	0, 1217, 1217, 1217, 0, 0, 0, 0, 0, 1526,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 847, 0, 0, 0, 1485, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 88,
	88, 0, 1104, 0, 1524, 1488, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 0, 0, 0, 0, 3254, 0, 0,
	0, 3253, 0, 0, 1104, 1487, 211, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 1104, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 211, 211, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 1103, 1485,
	1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 1104, 1521, 1516,
	0, 0, 0, 0, 0, 1103, 1488, 0, 1218, 0,
	1217, 1534, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 1218, 0, 1507, 0, 1508, 0, 0,
	0, 1103, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	1024, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1218, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 1103, 0,
	0, 1493, 0, 211, 0, 0, 0, 0, 0, 0,
	1103, 1514, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 1525, 0, 1104, 1535, 1509,
	0, 211, 0, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 1486, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 1516, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 1523, 0,
	1103, 0, 0, 1217, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 1533,
	1507, 0, 0, 0, 0, 1104, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 0, 0, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 88, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 1526, 0, 1515, 1517,
	0, 1217, 1217, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1524, 1024, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	1024, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	0, 0, 0, 0, 2651, 0, 0, 0, 2652, 0,
	0, 0, 0, 1218, 0, 0, 1218, 0, 0, 1485,
	1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 1521, 1516,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	1218, 1534, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 1487, 0, 0, 0,
	0, 1218, 1218, 1218, 88, 1507, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 1218, 0, 0,
	0, 0, 88, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 0,
	789, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 1505, 1501, 0, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1525, 772, 758, 1535, 0,
	0, 0, 0, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 1531, 0, 1532, 0, 762, 0, 0,
	0, 795, 1502, 1503, 0, 0, 0, 0, 0, 769,
	770, 0, 0, 0, 0, 782, 0, 0, 1523, 0,
	1104, 0, 1104, 0, 0, 0, 0, 0, 1508, 790,
	764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 0, 0,
	0, 0, 0, 1104, 0, 0, 0, 0, 1104, 765,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 766, 767, 1104, 0, 0, 0, 0,
	1218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 774, 773, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 794,
	0, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 761, 0, 0, 0, 786, 787, 0,
	1104, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	0, 0, 0, 784, 2125, 0, 0, 0, 2126, 0,
	780, 88, 0, 777, 88, 0, 0, 0, 0, 778,
	0, 0, 0, 0, 0, 0, 755, 0, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	1104, 0, 0, 1218, 779, 0, 0, 0, 776, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 0, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1218, 1218, 0, 0, 0, 0, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 1108, 226, 1109, 1110, 1111, 1104, 1112,
	491, 1113, 1114, 1115, 1116, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 1117, 236,
	237, 238, 239, 240, 241, 242, 1118, 1119, 243, 496,
	497, 498, 1120, 244, 499, 1121, 1106, 1122, 245, 246,
	247, 248, 249, 250, 0, 1123, 252, 253, 254, 251,
	1124, 255, 0, 256, 257, 258, 1125, 259, 974, 260,
	261, 1126, 1127, 1129, 1128, 1130, 1131, 1132, 262, 263,
	264, 265, 266, 267, 500, 501, 1133, 268, 1134, 270,
	269, 1135, 271, 1136, 1137, 272, 273, 274, 1138, 275,
	1139, 276, 277, 1140, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 1141, 218, 1142,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 1143, 295, 1144, 1145, 975, 296, 297, 1146,
	298, 506, 1147, 507, 299, 1148, 300, 301, 302, 303,
	508, 509, 510, 359, 977, 304, 305, 1149, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 1150, 976,
	312, 511, 314, 313, 315, 316, 317, 512, 1151, 513,
	1152, 319, 978, 514, 979, 320, 321, 322, 980, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 1153, 331,
	330, 1154, 332, 515, 981, 333, 334, 982, 1155, 335,
	336, 1156, 1157, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 983, 351,
	352, 355, 356, 354, 984, 353, 1158, 220, 985, 357,
	1159, 516, 358, 517, 360, 361, 1160, 362, 363, 364,
	1161, 1162, 366, 367, 368, 1163, 1164, 369, 370, 518,
	986, 371, 987, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 1165, 380, 381, 520, 382, 521, 383,
	384, 1166, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 1167, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	1168, 409, 988, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 1169, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 1170,
	436, 416, 417, 437, 438, 989, 439, 440, 524, 441,
	442, 1171, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 1172, 454, 455, 453, 1173, 456,
	457, 458, 459, 460, 283, 461, 1174, 462, 526, 527,
	528, 529, 1175, 469, 1176, 463, 464, 530, 465, 531,
	1177, 466, 467, 468, 0, 470, 471, 1178, 1179, 472,
	473, 474, 476, 477, 475, 479, 1180, 480, 1181, 478,
	481, 482, 483, 532, 533, 534, 1182, 485, 484, 535,
	1183, 1184, 1185, 1186, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 0,
	2256, 0, 0, 0, 0, 0, 0, 0, 2257, 221,
	222, 223, 224, 225, 1108, 226, 1109, 1110, 1111, 0,
	1112, 491, 1113, 1114, 1115, 1116, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 1117,
	236, 237, 238, 239, 240, 241, 242, 1118, 1119, 243,
	496, 497, 498, 1120, 244, 499, 1121, 1106, 1122, 245,
	246, 247, 248, 249, 250, 0, 1123, 252, 253, 254,
	251, 1124, 255, 0, 256, 257, 258, 1125, 259, 974,
	260, 261, 1126, 1127, 1129, 1128, 1130, 1131, 1132, 262,
	263, 264, 265, 266, 267, 500, 501, 1133, 268, 1134,
	270, 269, 1135, 271, 1136, 1137, 272, 273, 274, 1138,
	275, 1139, 276, 277, 1140, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 1141, 218,
	1142, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 1143, 295, 1144, 1145, 975, 296, 297,
	1146, 298, 506, 1147, 507, 299, 1148, 300, 301, 302,
	303, 508, 509, 510, 359, 977, 304, 305, 1149, 306,
	307, 308, 310, 0, 0, 219, 309, 311, 318, 1150,
	976, 312, 511, 314, 313, 315, 316, 317, 512, 1151,
	513, 1152, 319, 978, 514, 979, 320, 321, 322, 980,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 1153,
	331, 330, 1154, 332, 515, 981, 333, 334, 982, 1155,
	335, 336, 1156, 1157, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 1158, 220, 985,
	357, 1159, 516, 358, 517, 360, 361, 1160, 362, 363,
	364, 1161, 1162, 366, 367, 368, 1163, 1164, 369, 370,
	518, 986, 371, 987, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 1165, 380, 381, 520, 382, 521,
	383, 384, 1166, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 1167, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 1168, 409, 988, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 1169,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	1170, 436, 416, 417, 437, 438, 989, 439, 440, 524,
	441, 442, 1171, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 1172, 454, 455, 453, 1173,
	456, 457, 458, 459, 460, 283, 461, 1174, 462, 526,
	527, 528, 529, 1175, 469, 1176, 463, 464, 530, 465,
	531, 1177, 466, 467, 468, 0, 470, 471, 1178, 1179,
	472, 473, 474, 476, 477, 475, 479, 1180, 480, 1181,
	478, 481, 482, 483, 532, 533, 534, 1182, 485, 484,
	535, 1183, 1184, 1185, 1186, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 0, 2983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2985, 221, 222,
	223, 224, 225, 1108, 226, 1109, 1110, 1111, 0, 1112,
	491, 1113, 1114, 1115, 1116, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 1117, 236,
	237, 238, 239, 240, 241, 242, 1118, 1119, 243, 496,
	497, 498, 1120, 244, 499, 1121, 1106, 1122, 245, 246,
	247, 248, 249, 250, 0, 1123, 252, 253, 254, 251,
	1124, 255, 0, 256, 257, 258, 1125, 259, 974, 260,
	261, 1126, 1127, 1129, 1128, 1130, 1131, 1132, 262, 263,
	264, 265, 266, 267, 500, 501, 1133, 268, 1134, 270,
	269, 1135, 271, 1136, 1137, 272, 273, 274, 1138, 275,
	1139, 276, 277, 1140, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 1141, 218, 1142,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 1143, 295, 1144, 1145, 975, 296, 297, 1146,
	298, 506, 1147, 507, 299, 1148, 300, 301, 302, 303,
	508, 509, 510, 359, 977, 304, 305, 1149, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 1150, 976,
	312, 511, 314, 313, 315, 316, 317, 512, 1151, 513,
	1152, 319, 978, 514, 979, 320, 321, 322, 980, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 1153, 331,
	330, 1154, 332, 515, 981, 333, 334, 982, 1155, 335,
	336, 1156, 1157, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 983, 351,
	352, 355, 356, 354, 984, 353, 1158, 220, 985, 357,
	1159, 516, 358, 517, 360, 361, 1160, 362, 363, 364,
	1161, 1162, 366, 367, 368, 1163, 1164, 369, 370, 518,
	986, 371, 987, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 1165, 380, 381, 520, 382, 521, 383,
	384, 1166, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 1167, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	1168, 409, 988, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 1169, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 1170,
	436, 416, 417, 437, 438, 989, 439, 440, 524, 441,
	442, 1171, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 1172, 454, 455, 453, 1173, 456,
	457, 458, 459, 460, 283, 461, 1174, 462, 526, 527,
	528, 529, 1175, 469, 1176, 463, 464, 530, 465, 531,
	1177, 466, 467, 468, 0, 470, 471, 1178, 1179, 472,
	473, 474, 476, 477, 475, 479, 1180, 480, 1181, 478,
	481, 482, 483, 532, 533, 534, 1182, 485, 484, 535,
	1183, 1184, 1185, 1186, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3276, 221, 222, 223, 224, 225, 1108, 226, 1109, 1110,
	1111, 0, 1112, 491, 1113, 1114, 1115, 1116, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 1117, 236, 237, 238, 239, 240, 241, 242, 1118,
	1119, 243, 496, 497, 498, 1120, 244, 499, 1121, 1106,
	1122, 245, 246, 247, 248, 249, 250, 0, 1123, 252,
	253, 254, 251, 1124, 255, 0, 256, 257, 258, 1125,
	259, 974, 260, 261, 1126, 1127, 1129, 1128, 1130, 1131,
	1132, 262, 263, 264, 265, 266, 267, 500, 501, 1133,
	268, 1134, 270, 269, 1135, 271, 1136, 1137, 272, 273,
	274, 1138, 275, 1139, 276, 277, 1140, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	1141, 218, 1142, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 1143, 295, 1144, 1145, 975,
	296, 297, 1146, 298, 506, 1147, 507, 299, 1148, 300,
	301, 302, 303, 508, 509, 510, 359, 977, 304, 305,
	1149, 306, 307, 308, 310, 0, 0, 219, 309, 311,
	318, 1150, 976, 312, 511, 314, 313, 315, 316, 317,
	512, 1151, 513, 1152, 319, 978, 514, 979, 320, 321,
	322, 980, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 1153, 331, 330, 1154, 332, 515, 981, 333, 334,
	982, 1155, 335, 336, 1156, 1157, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 1158,
	220, 985, 357, 1159, 516, 358, 517, 360, 361, 1160,
	362, 363, 364, 1161, 1162, 366, 367, 368, 1163, 1164,
	369, 370, 518, 986, 371, 987, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 1165, 380, 381, 520,
	382, 521, 383, 384, 1166, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 1167, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 1168, 409, 988, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 1169, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 1170, 436, 416, 417, 437, 438, 989, 439,
	440, 524, 441, 442, 1171, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 1172, 454, 455,
	453, 1173, 456, 457, 458, 459, 460, 283, 461, 1174,
	462, 526, 527, 528, 529, 1175, 469, 1176, 463, 464,
	530, 465, 531, 1177, 466, 467, 468, 0, 470, 471,
	1178, 1179, 472, 473, 474, 476, 477, 475, 479, 1180,
	480, 1181, 478, 481, 482, 483, 532, 533, 534, 1182,
	485, 484, 535, 1183, 1184, 1185, 1186, 486, 487, 536,
	488, 489, 490, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3404, 0,
	221, 222, 223, 224, 225, 1108, 226, 1109, 1110, 1111,
	0, 1112, 491, 1113, 1114, 1115, 1116, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	1117, 236, 237, 238, 239, 240, 241, 242, 1118, 1119,
	243, 496, 497, 498, 1120, 244, 499, 1121, 1106, 1122,
	245, 246, 247, 248, 249, 250, 0, 1123, 252, 253,
	254, 251, 1124, 255, 0, 256, 257, 258, 1125, 259,
	974, 260, 261, 1126, 1127, 1129, 1128, 1130, 1131, 1132,
	262, 263, 264, 265, 266, 267, 500, 501, 1133, 268,
	1134, 270, 269, 1135, 271, 1136, 1137, 272, 273, 274,
	1138, 275, 1139, 276, 277, 1140, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 1141,
	218, 1142, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 1143, 295, 1144, 1145, 975, 296,
	297, 1146, 298, 506, 1147, 507, 299, 1148, 300, 301,
	302, 303, 508, 509, 510, 359, 977, 304, 305, 1149,
	306, 307, 308, 310, 0, 0, 219, 309, 311, 318,
	1150, 976, 312, 511, 314, 313, 315, 316, 317, 512,
	1151, 513, 1152, 319, 978, 514, 979, 320, 321, 322,
	980, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	1153, 331, 330, 1154, 332, 515, 981, 333, 334, 982,
	1155, 335, 336, 1156, 1157, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 348,
	983, 351, 352, 355, 356, 354, 984, 353, 1158, 220,
	985, 357, 1159, 516, 358, 517, 360, 361, 1160, 362,
	363, 364, 1161, 1162, 366, 367, 368, 1163, 1164, 369,
	370, 518, 986, 371, 987, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 1165, 380, 381, 520, 382,
	521, 383, 384, 1166, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 1167, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 1168, 409, 988, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 421, 422, 423, 424, 425,
	1169, 431, 432, 426, 428, 429, 430, 427, 433, 434,
	435, 1170, 436, 416, 417, 437, 438, 989, 439, 440,
	524, 441, 442, 1171, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 1172, 454, 455, 453,
	1173, 456, 457, 458, 459, 460, 283, 461, 1174, 462,
	526, 527, 528, 529, 1175, 469, 1176, 463, 464, 530,
	465, 531, 1177, 466, 467, 468, 0, 470, 471, 1178,
	1179, 472, 473, 474, 476, 477, 475, 479, 1180, 480,
	1181, 478, 481, 482, 483, 532, 533, 534, 1182, 485,
	484, 535, 1183, 1184, 1185, 1186, 486, 487, 536, 488,
	489, 490, 1101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3329, 0, 221,
	222, 223, 224, 225, 1108, 226, 1109, 1110, 1111, 0,
	1112, 491, 1113, 1114, 1115, 1116, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 1117,
	236, 237, 238, 239, 240, 241, 242, 1118, 1119, 243,
	496, 497, 498, 1120, 244, 499, 1121, 1106, 1122, 245,
	246, 247, 248, 249, 250, 0, 1123, 252, 253, 254,
	251, 1124, 255, 0, 256, 257, 258, 1125, 259, 974,
	260, 261, 1126, 1127, 1129, 1128, 1130, 1131, 1132, 262,
	263, 264, 265, 266, 267, 500, 501, 1133, 268, 1134,
	270, 269, 1135, 271, 1136, 1137, 272, 273, 274, 1138,
	275, 1139, 276, 277, 1140, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 1141, 218,
	1142, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 1143, 295, 1144, 1145, 975, 296, 297,
	1146, 298, 506, 1147, 507, 299, 1148, 300, 301, 302,
	303, 508, 509, 510, 359, 977, 304, 305, 1149, 306,
	307, 308, 310, 0, 0, 219, 309, 311, 318, 1150,
	976, 312, 511, 314, 313, 315, 316, 317, 512, 1151,
	513, 1152, 319, 978, 514, 979, 320, 321, 322, 980,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 1153,
	331, 330, 1154, 332, 515, 981, 333, 334, 982, 1155,
	335, 336, 1156, 1157, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 1158, 220, 985,
	357, 1159, 516, 358, 517, 360, 361, 1160, 362, 363,
	364, 1161, 1162, 366, 367, 368, 1163, 1164, 369, 370,
	518, 986, 371, 987, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 1165, 380, 381, 520, 382, 521,
	383, 384, 1166, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 1167, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 1168, 409, 988, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 1169,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	1170, 436, 416, 417, 437, 438, 989, 439, 440, 524,
	441, 442, 1171, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 1172, 454, 455, 453, 1173,
	456, 457, 458, 459, 460, 283, 461, 1174, 462, 526,
	527, 528, 529, 1175, 469, 1176, 463, 464, 530, 465,
	531, 1177, 466, 467, 468, 0, 470, 471, 1178, 1179,
	472, 473, 474, 476, 477, 475, 479, 1180, 480, 1181,
	478, 481, 482, 483, 532, 533, 534, 1182, 485, 484,
	535, 1183, 1184, 1185, 1186, 486, 487, 536, 488, 489,
	490, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3210, 0, 221, 222,
	223, 224, 225, 1108, 226, 1109, 1110, 1111, 0, 1112,
	491, 1113, 1114, 1115, 1116, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 1117, 236,
	237, 238, 239, 240, 241, 242, 1118, 1119, 243, 496,
	497, 498, 1120, 244, 499, 1121, 1106, 1122, 245, 246,
	247, 248, 249, 250, 0, 1123, 252, 253, 254, 251,
	1124, 255, 0, 256, 257, 258, 1125, 259, 974, 260,
	261, 1126, 1127, 1129, 1128, 1130, 1131, 1132, 262, 263,
	264, 265, 266, 267, 500, 501, 1133, 268, 1134, 270,
	269, 1135, 271, 1136, 1137, 272, 273, 274, 1138, 275,
	1139, 276, 277, 1140, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 1141, 218, 1142,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 1143, 295, 1144, 1145, 975, 296, 297, 1146,
	298, 506, 1147, 507, 299, 1148, 300, 301, 302, 303,
	508, 509, 510, 359, 977, 304, 305, 1149, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 1150, 976,
	312, 511, 314, 313, 315, 316, 317, 512, 1151, 513,
	1152, 319, 978, 514, 979, 320, 321, 322, 980, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 1153, 331,
	330, 1154, 332, 515, 981, 333, 334, 982, 1155, 335,
	336, 1156, 1157, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 983, 351,
	352, 355, 356, 354, 984, 353, 1158, 220, 985, 357,
	1159, 516, 358, 517, 360, 361, 1160, 362, 363, 364,
	1161, 1162, 366, 367, 368, 1163, 1164, 369, 370, 518,
	986, 371, 987, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 1165, 380, 381, 520, 382, 521, 383,
	384, 1166, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 1167, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	1168, 409, 988, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 1169, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 1170,
	436, 416, 417, 437, 438, 989, 439, 440, 524, 441,
	442, 1171, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 1172, 454, 455, 453, 1173, 456,
	457, 458, 459, 460, 283, 461, 1174, 462, 526, 527,
	528, 529, 1175, 469, 1176, 463, 464, 530, 465, 531,
	1177, 466, 467, 468, 0, 470, 471, 1178, 1179, 472,
	473, 474, 476, 477, 475, 479, 1180, 480, 1181, 478,
	481, 482, 483, 532, 533, 534, 1182, 485, 484, 535,
	1183, 1184, 1185, 1186, 486, 487, 536, 488, 489, 490,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3001, 0, 221, 222, 223,
	224, 225, 1108, 226, 1109, 1110, 1111, 0, 1112, 491,
	1113, 1114, 1115, 1116, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 1117, 236, 237,
	238, 239, 240, 241, 242, 1118, 1119, 243, 496, 497,
	498, 1120, 244, 499, 1121, 1106, 1122, 245, 246, 247,
	248, 249, 250, 0, 1123, 252, 253, 254, 251, 1124,
	255, 0, 256, 257, 258, 1125, 259, 974, 260, 261,
	1126, 1127, 1129, 1128, 1130, 1131, 1132, 262, 263, 264,
	265, 266, 267, 500, 501, 1133, 268, 1134, 270, 269,
	1135, 271, 1136, 1137, 272, 273, 274, 1138, 275, 1139,
	276, 277, 1140, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 1141, 218, 1142, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 1143, 295, 1144, 1145, 975, 296, 297, 1146, 298,
	506, 1147, 507, 299, 1148, 300, 301, 302, 303, 508,
	509, 510, 359, 977, 304, 305, 1149, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 1150, 976, 312,
	511, 314, 313, 315, 316, 317, 512, 1151, 513, 1152,
	319, 978, 514, 979, 320, 321, 322, 980, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 1153, 331, 330,
	1154, 332, 515, 981, 333, 334, 982, 1155, 335, 336,
	1156, 1157, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 1158, 220, 985, 357, 1159,
	516, 358, 517, 360, 361, 1160, 362, 363, 364, 1161,
	1162, 366, 367, 368, 1163, 1164, 369, 370, 518, 986,
	371, 987, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 1165, 380, 381, 520, 382, 521, 383, 384,
	1166, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 1167, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 1168,
	409, 988, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 1169, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 1170, 436,
	416, 417, 437, 438, 989, 439, 440, 524, 441, 442,
	1171, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 1172, 454, 455, 453, 1173, 456, 457,
	458, 459, 460, 283, 461, 1174, 462, 526, 527, 528,
	529, 1175, 469, 1176, 463, 464, 530, 465, 531, 1177,
	466, 467, 468, 0, 470, 471, 1178, 1179, 472, 473,
	474, 476, 477, 475, 479, 1180, 480, 1181, 478, 481,
	482, 483, 532, 533, 534, 1182, 485, 484, 535, 1183,
	1184, 1185, 1186, 486, 487, 536, 488, 489, 490, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2851, 0, 221, 222, 223, 224,
	225, 1108, 226, 1109, 1110, 1111, 0, 1112, 491, 1113,
	1114, 1115, 1116, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 1117, 236, 237, 238,
	239, 240, 241, 242, 1118, 1119, 243, 496, 497, 498,
	1120, 244, 499, 1121, 1106, 1122, 245, 246, 247, 248,
	249, 250, 0, 1123, 252, 253, 254, 251, 1124, 255,
	0, 256, 257, 258, 1125, 259, 974, 260, 261, 1126,
	1127, 1129, 1128, 1130, 1131, 1132, 262, 263, 264, 265,
	266, 267, 500, 501, 1133, 268, 1134, 270, 269, 1135,
	271, 1136, 1137, 272, 273, 274, 1138, 275, 1139, 276,
	277, 1140, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 1141, 218, 1142, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	1143, 295, 1144, 1145, 975, 296, 297, 1146, 298, 506,
	1147, 507, 299, 1148, 300, 301, 302, 303, 508, 509,
	510, 359, 977, 304, 305, 1149, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 1150, 976, 312, 511,
	314, 313, 315, 316, 317, 512, 1151, 513, 1152, 319,
	978, 514, 979, 320, 321, 322, 980, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 1153, 331, 330, 1154,
	332, 515, 981, 333, 334, 982, 1155, 335, 336, 1156,
	1157, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 983, 351, 352, 355,
	356, 354, 984, 353, 1158, 220, 985, 357, 1159, 516,
	358, 517, 360, 361, 1160, 362, 363, 364, 1161, 1162,
	366, 367, 368, 1163, 1164, 369, 370, 518, 986, 371,
	987, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 1165, 380, 381, 520, 382, 521, 383, 384, 1166,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 1167, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 1168, 409,
	988, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 1169, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 1170, 436, 416,
	417, 437, 438, 989, 439, 440, 524, 441, 442, 1171,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 1172, 454, 455, 453, 1173, 456, 457, 458,
	459, 460, 283, 461, 1174, 462, 526, 527, 528, 529,
	1175, 469, 1176, 463, 464, 530, 465, 531, 1177, 466,
	467, 468, 0, 470, 471, 1178, 1179, 472, 473, 474,
	476, 477, 475, 479, 1180, 480, 1181, 478, 481, 482,
	483, 532, 533, 534, 1182, 485, 484, 535, 1183, 1184,
	1185, 1186, 486, 487, 536, 488, 489, 490, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2149, 0, 221, 222, 223, 224, 225,
	1108, 226, 1109, 1110, 1111, 0, 1112, 491, 1113, 1114,
	1115, 1116, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 1117, 236, 237, 238, 239,
	240, 241, 242, 1118, 1119, 243, 496, 497, 498, 1120,
	244, 499, 1121, 1106, 1122, 245, 246, 247, 248, 249,
	250, 0, 1123, 252, 253, 254, 251, 1124, 255, 0,
	256, 257, 258, 1125, 259, 974, 260, 261, 1126, 1127,
	1129, 1128, 1130, 1131, 1132, 262, 263, 264, 265, 266,
	267, 500, 501, 1133, 268, 1134, 270, 269, 1135, 271,
	1136, 1137, 272, 273, 274, 1138, 275, 1139, 276, 277,
	1140, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 1141, 218, 1142, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 1143,
	295, 1144, 1145, 975, 296, 297, 1146, 298, 506, 1147,
	507, 299, 1148, 300, 301, 302, 303, 508, 509, 510,
	359, 977, 304, 305, 1149, 306, 307, 308, 310, 0,
	0, 219, 309, 311, 318, 1150, 976, 312, 511, 314,
	313, 315, 316, 317, 512, 1151, 513, 1152, 319, 978,
	514, 979, 320, 321, 322, 980, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 1153, 331, 330, 1154, 332,
	515, 981, 333, 334, 982, 1155, 335, 336, 1156, 1157,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 1158, 220, 985, 357, 1159, 516, 358,
	517, 360, 361, 1160, 362, 363, 364, 1161, 1162, 366,
	367, 368, 1163, 1164, 369, 370, 518, 986, 371, 987,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	1165, 380, 381, 520, 382, 521, 383, 384, 1166, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 1167, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 1168, 409, 988,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 1169, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 1170, 436, 416, 417,
	437, 438, 989, 439, 440, 524, 441, 442, 1171, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 1172, 454, 455, 453, 1173, 456, 457, 458, 459,
	460, 283, 461, 1174, 462, 526, 527, 528, 529, 1175,
	469, 1176, 463, 464, 530, 465, 531, 1177, 466, 467,
	468, 0, 470, 471, 1178, 1179, 472, 473, 474, 476,
	477, 475, 479, 1180, 480, 1181, 478, 481, 482, 483,
	532, 533, 534, 1182, 485, 484, 535, 1183, 1184, 1185,
	1186, 486, 487, 536, 488, 489, 490, 1199, 0, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 221, 222, 223, 224,
	225, 1108, 226, 1109, 1110, 1111, 0, 1112, 491, 1113,
	1114, 1115, 1116, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 1117, 236, 237, 238,
	239, 240, 241, 242, 1118, 1119, 243, 496, 497, 498,
	1120, 244, 499, 1121, 1106, 1122, 245, 246, 247, 248,
	249, 250, 0, 1123, 252, 253, 254, 251, 1124, 255,
	0, 256, 257, 258, 1125, 259, 974, 260, 261, 1126,
	1127, 1129, 1128, 1130, 1131, 1132, 262, 263, 264, 265,
	266, 267, 500, 501, 1133, 268, 1134, 270, 269, 1135,
	271, 1136, 1137, 272, 273, 274, 1138, 275, 1139, 276,
	277, 1140, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 1141, 218, 1142, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	1143, 295, 1144, 1145, 975, 296, 297, 1146, 298, 506,
	1147, 507, 299, 1148, 300, 301, 302, 303, 508, 509,
	510, 359, 977, 304, 305, 1149, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 1150, 976, 312, 511,
	314, 313, 315, 316, 317, 512, 1151, 513, 1152, 319,
	978, 514, 979, 320, 321, 322, 980, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 1153, 331, 330, 1154,
	332, 515, 981, 333, 334, 982, 1155, 335, 336, 1156,
	1157, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 983, 351, 352, 355,
	356, 354, 984, 353, 1158, 220, 985, 357, 1159, 516,
	358, 517, 360, 361, 1160, 362, 363, 364, 1161, 1162,
	366, 367, 368, 1163, 1164, 369, 370, 518, 986, 371,
	987, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 1165, 380, 381, 520, 382, 521, 383, 384, 1166,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 1167, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 1168, 409,
	988, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 1169, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 1170, 436, 416,
	417, 437, 438, 989, 439, 440, 524, 441, 442, 1171,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 1172, 454, 455, 453, 1173, 456, 457, 458,
	459, 460, 283, 461, 1174, 462, 526, 527, 528, 529,
	1175, 469, 1176, 463, 464, 530, 465, 531, 1177, 466,
	467, 468, 0, 470, 471, 1178, 1179, 472, 473, 474,
	476, 477, 475, 479, 1180, 480, 1181, 478, 481, 482,
	483, 532, 533, 534, 1182, 485, 484, 535, 1183, 1184,
	1185, 1186, 486, 487, 536, 488, 489, 490, 1098, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 1108, 226, 1109, 1110, 1111, 0, 1112, 491,
	1113, 1114, 1115, 1116, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 1117, 236, 237,
	238, 239, 240, 241, 242, 1118, 1119, 243, 496, 497,
	498, 1120, 244, 499, 1121, 1106, 1122, 245, 246, 247,
	248, 249, 250, 0, 1123, 252, 253, 254, 251, 1124,
	255, 0, 256, 257, 258, 1125, 259, 974, 260, 261,
	1126, 1127, 1129, 1128, 1130, 1131, 1132, 262, 263, 264,
	265, 266, 267, 500, 501, 1133, 268, 1134, 270, 269,
	1135, 271, 1136, 1137, 272, 273, 274, 1138, 275, 1139,
	276, 277, 1140, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 1141, 218, 1142, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 1143, 295, 1144, 1145, 975, 296, 297, 1146, 298,
	506, 1147, 507, 299, 1148, 300, 301, 302, 303, 508,
	509, 510, 359, 977, 304, 305, 1149, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 1150, 976, 312,
	511, 314, 313, 315, 316, 317, 512, 1151, 513, 1152,
	319, 978, 514, 979, 320, 321, 322, 980, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 1153, 331, 330,
	1154, 332, 515, 981, 333, 334, 982, 1155, 335, 336,
	1156, 1157, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 1158, 220, 985, 357, 1159,
	516, 358, 517, 360, 361, 1160, 362, 363, 364, 1161,
	1162, 366, 367, 368, 1163, 1164, 369, 370, 518, 986,
	371, 987, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 1165, 380, 381, 520, 382, 521, 383, 384,
	1166, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 1167, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 1168,
	409, 988, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 1169, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 1170, 436,
	416, 417, 437, 438, 989, 439, 440, 524, 441, 442,
	1171, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 1172, 454, 455, 453, 1173, 456, 457,
	458, 459, 460, 283, 461, 1174, 462, 526, 527, 528,
	529, 1175, 469, 1176, 463, 464, 530, 465, 531, 1177,
	466, 467, 468, 0, 470, 471, 1178, 1179, 472, 473,
	474, 476, 477, 475, 479, 1180, 480, 1181, 478, 481,
	482, 483, 532, 533, 534, 1182, 485, 484, 535, 1183,
	1184, 1185, 1186, 486, 487, 536, 488, 489, 490, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 1108, 226, 1109, 1110, 1111, 0, 1112, 491, 1113,
	1114, 1115, 1116, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 1117, 236, 237, 238,
	239, 240, 241, 242, 1118, 1119, 243, 496, 497, 498,
	1120, 244, 499, 1121, 1106, 1122, 245, 246, 247, 248,
	249, 250, 0, 1123, 252, 253, 254, 251, 1124, 255,
	0, 256, 257, 258, 1125, 259, 974, 260, 261, 1126,
	1127, 1129, 1128, 1130, 1131, 1132, 262, 263, 264, 265,
	266, 267, 500, 501, 1133, 268, 1134, 270, 269, 1135,
	271, 1136, 1137, 272, 273, 274, 1138, 275, 1139, 276,
	277, 1140, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 1141, 218, 1142, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	1143, 295, 1144, 1145, 975, 296, 297, 1146, 298, 506,
	1147, 507, 299, 1148, 300, 301, 302, 303, 508, 509,
	510, 359, 977, 304, 305, 1149, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 1150, 976, 312, 511,
	314, 313, 315, 316, 317, 512, 1151, 513, 1152, 319,
	978, 514, 979, 320, 321, 322, 980, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 1153, 331, 330, 1154,
	332, 515, 981, 333, 334, 982, 1155, 335, 336, 1156,
	1157, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 983, 351, 352, 355,
	356, 354, 984, 353, 1158, 220, 985, 357, 1159, 516,
	358, 517, 360, 361, 1160, 362, 363, 364, 1161, 1162,
	366, 367, 368, 1163, 1164, 369, 370, 518, 986, 371,
	987, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 1165, 380, 381, 520, 382, 521, 383, 384, 1166,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 1167, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 1168, 409,
	988, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 1169, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 1170, 436, 416,
	417, 437, 438, 989, 439, 440, 524, 441, 442, 1171,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 1172, 454, 455, 453, 1173, 456, 457, 458,
	459, 460, 283, 461, 1174, 462, 526, 527, 528, 529,
	1175, 469, 1176, 463, 464, 530, 465, 531, 1177, 466,
	467, 468, 0, 470, 471, 1178, 1179, 472, 473, 474,
	476, 477, 475, 479, 1180, 480, 1181, 478, 481, 482,
	483, 532, 533, 534, 1182, 485, 484, 535, 1183, 1184,
	1185, 1186, 486, 487, 536, 488, 489, 490, 2124, 0,
	914, 872, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 2121, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 2122, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 2120, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 2123, 0, 0, 0, 0, 0,
	0, 884, 2119, 0, 848, 882, 914, 872, 873, 874,
	870, 871, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 184, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 186, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 1350, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 178, 486,
	487, 536, 488, 489, 490, 859, 179, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	914, 872, 873, 874, 870, 871, 883, 1560, 1558, 0,
	0, 882, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 184, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 186, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 1350, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 178, 486, 487, 536, 488, 489, 490, 859,
	179, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 914, 872, 873, 874, 870, 871,
	883, 1560, 2597, 0, 0, 882, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 184, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 186, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 1350, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 178, 486, 487, 536,
	488, 489, 490, 859, 179, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 914, 872,
	873, 874, 870, 871, 883, 1560, 1558, 0, 0, 882,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 2218, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 2223, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 2219, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 2220, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 2177, 882, 914, 872, 873, 874, 870, 871,
	883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 0, 0,
	0, 0, 0, 0, 0, 884, 2175, 0, 2174, 882,
	914, 872, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 0, 0, 0, 0, 0, 0,
	0, 884, 2172, 0, 2171, 882, 914, 872, 873, 874,
	870, 871, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	0, 0, 0, 0, 0, 0, 0, 884, 2169, 0,
	2168, 882, 914, 872, 873, 874, 870, 871, 883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 0, 0, 0, 0,
	0, 0, 0, 884, 2166, 0, 1419, 882, 914, 872,
	873, 874, 870, 871, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 1418, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 851, 882, 914, 872, 873, 874, 870, 871,
	883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 863, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 914, 872,
	873, 874, 870, 871, 883, 884, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 3630, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 863, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 914, 872, 873, 874, 870, 871, 883, 884,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 3463, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 863, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 914, 872, 873, 874,
	870, 871, 883, 884, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 3179, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	1624, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 882, 914, 872, 873, 874, 870, 871, 883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 2979, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 914, 872, 873, 874,
	870, 871, 883, 884, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 2038,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 2037, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	914, 872, 873, 874, 870, 871, 883, 884, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 863,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 914, 872, 873, 874, 870, 871,
	883, 884, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 1624, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 882,
	914, 872, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 2223, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 914, 872, 873, 874, 870, 871,
	883, 884, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 0, 0,
	0, 0, 0, 0, 0, 884, 1558, 0, 2228, 882,
	914, 872, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 0, 0, 0, 0, 0, 0,
	0, 884, 0, 0, 2226, 882, 914, 872, 873, 874,
	870, 871, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	2214, 882, 914, 872, 873, 874, 870, 871, 883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 2203, 882, 914, 872,
	873, 874, 870, 871, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 2201, 882, 2192, 2199, 873, 874, 870, 871,
	883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 2195, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 2196, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 2197, 2194, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	2198, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 2193, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 2189, 882,
	2192, 2199, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 2195, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 2196, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 2197, 2194, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 2198, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 2193, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 914, 872, 873, 874, 870, 871,
	883, 884, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 0, 0,
	0, 0, 0, 1566, 0, 884, 0, 0, 0, 882,
	914, 872, 873, 874, 870, 871, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 2017, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 0, 0, 0, 0, 0, 0,
	0, 884, 0, 0, 1242, 882, 914, 872, 873, 874,
	870, 871, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 1241, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	1236, 882, 914, 872, 873, 874, 870, 871, 883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 1235, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 1231, 882, 914, 872,
	873, 874, 870, 871, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 914, 872, 873, 874, 870, 871, 883, 884,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 855, 856, 914, 872, 873, 874,
	870, 871, 883, 884, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 3662, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 861, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 858, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	3661, 471, 0, 862, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 859, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 855, 856,
	914, 872, 873, 874, 870, 871, 883, 884, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 3660,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 3662,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 861, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 858, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 868, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 3661, 471, 0, 862, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 859,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 855, 856, 914, 872, 873, 874, 2564, 2565,
	883, 884, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 965, 888, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 929, 908, 940, 235, 898, 939,
	938, 0, 236, 237, 900, 899, 240, 241, 242, 890,
	964, 243, 1001, 1002, 498, 0, 244, 971, 0, 952,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 955, 953, 954, 961, 957, 956,
	960, 262, 263, 264, 265, 943, 267, 936, 935, 861,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 934,
	274, 0, 275, 0, 276, 277, 0, 278, 867, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 992, 993,
	879, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	933, 931, 932, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 999, 0, 889, 299, 0, 300,
	301, 302, 303, 966, 967, 970, 359, 977, 304, 305,
	0, 306, 307, 308, 910, 0, 0, 219, 309, 311,
	318, 0, 976, 312, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 319, 978, 968, 979, 320, 321,
	322, 980, 948, 949, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 1000, 981, 333, 334,
	982, 0, 335, 336, 959, 958, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 902,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 858,
	220, 985, 357, 880, 969, 358, 937, 360, 361, 0,
	911, 363, 912, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 994, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 995,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 930, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	868, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 903, 904, 906, 907, 427, 433,
	434, 435, 962, 436, 416, 417, 437, 438, 989, 439,
	440, 925, 905, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 973, 448, 449, 450, 996, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 901, 0,
	462, 944, 945, 946, 947, 0, 469, 0, 463, 464,
	997, 465, 998, 878, 466, 467, 468, 0, 470, 471,
	0, 862, 472, 473, 474, 476, 477, 475, 479, 963,
	480, 0, 909, 481, 482, 483, 532, 941, 991, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 859, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 0, 0, 0, 855, 856, 914, 872,
	873, 874, 2562, 2563, 883, 884, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 985, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 470, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 859, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	855, 856, 914, 872, 873, 874, 870, 871, 883, 884,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 965, 888, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 929, 908, 940, 235, 898, 939, 938, 0,
	236, 237, 900, 899, 240, 241, 242, 890, 964, 243,
	1001, 1002, 498, 0, 244, 971, 0, 952, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 955, 953, 954, 961, 957, 956, 960, 262,
	263, 264, 265, 943, 267, 936, 935, 861, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 934, 274, 0,
	275, 0, 276, 277, 0, 278, 867, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 992, 993, 879, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 933, 931,
	932, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 999, 0, 889, 299, 0, 300, 301, 302,
	303, 966, 967, 970, 359, 977, 304, 305, 0, 306,
	307, 308, 910, 0, 0, 219, 309, 311, 318, 0,
	976, 312, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 319, 978, 968, 979, 320, 321, 322, 980,
	948, 949, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 1000, 981, 333, 334, 982, 0,
	335, 336, 959, 958, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 902, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 858, 220, 985,
	357, 880, 969, 358, 937, 360, 361, 0, 911, 363,
	912, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 994, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 995, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 930, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 868, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 903, 904, 906, 907, 427, 433, 434, 435,
	962, 436, 416, 417, 437, 438, 989, 439, 440, 925,
	905, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	973, 448, 449, 450, 996, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 901, 0, 462, 944,
	945, 946, 947, 0, 469, 0, 463, 464, 997, 465,
	998, 878, 466, 467, 468, 0, 470, 471, 0, 862,
	472, 473, 474, 476, 477, 475, 479, 963, 480, 0,
	909, 481, 482, 483, 532, 941, 991, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 859, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 2025, 2026, 914, 872, 873, 874,
	870, 871, 883, 884, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 888, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 929, 908, 940, 235,
	898, 939, 938, 0, 236, 237, 900, 899, 240, 241,
	242, 890, 964, 243, 1001, 1002, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 943, 267, 936,
	935, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 934, 274, 0, 275, 0, 276, 277, 0, 278,
	867, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 879, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 933, 931, 932, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 889, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 910, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 948, 949, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 902, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 0, 220, 985, 357, 880, 969, 358, 937, 360,
	361, 0, 911, 363, 912, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 930, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 868, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 903, 904, 906, 907,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 925, 905, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 973, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	901, 0, 462, 944, 945, 946, 947, 0, 469, 0,
	463, 464, 997, 465, 998, 878, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 909, 481, 482, 483, 532, 941,
	991, 0, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 2211, 0, 0, 0, 0, 0, 0, 2209, 2210,
	914, 872, 873, 874, 870, 871, 883, 884, 0, 0,
	0, 882, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	888, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	929, 908, 940, 235, 898, 939, 938, 0, 236, 237,
	900, 899, 240, 241, 242, 890, 964, 243, 1001, 1002,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 943, 267, 936, 935, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 934, 274, 0, 275, 0,
	276, 277, 0, 278, 867, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 879, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 933, 931, 932, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 889, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	910, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 948, 949,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 902, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 0, 220, 985, 357, 880,
	969, 358, 937, 360, 361, 0, 911, 363, 912, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	930, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 2557, 2558, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	903, 904, 906, 907, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 925, 905, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 973, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 901, 0, 462, 944, 945, 946,
	947, 0, 469, 0, 463, 464, 997, 465, 998, 878,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 909, 481,
	482, 483, 532, 941, 991, 0, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 914,
	872, 873, 874, 870, 871, 883, 0, 0, 0, 0,
	0, 0, 1778, 1779, 0, 0, 221, 222, 223, 224,
	225, 884, 226, 0, 0, 882, 0, 0, 965, 888,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 929,
	908, 940, 235, 898, 939, 938, 0, 236, 237, 900,
	899, 240, 241, 242, 0, 964, 243, 1001, 1002, 498,
	0, 244, 971, 0, 952, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 974, 260, 261, 955,
	953, 954, 961, 957, 956, 960, 262, 263, 264, 265,
	943, 267, 936, 935, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 934, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 992, 993, 879, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 933, 931, 932, 0, 294,
	0, 295, 0, 0, 975, 296, 297, 0, 298, 999,
	0, 889, 299, 0, 300, 301, 302, 303, 966, 967,
	970, 359, 977, 304, 305, 0, 306, 307, 308, 910,
	0, 0, 219, 309, 311, 318, 0, 976, 312, 922,
	913, 924, 926, 927, 928, 923, 0, 915, 0, 319,
	978, 968, 979, 320, 321, 322, 980, 948, 949, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 1000, 981, 333, 334, 982, 0, 335, 336, 959,
	958, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 902, 348, 983, 351, 352, 355,
	356, 354, 984, 353, 0, 220, 985, 357, 880, 969,
	358, 937, 360, 361, 0, 911, 363, 912, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 986, 371,
	987, 994, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 995, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 930,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	988, 410, 411, 412, 413, 868, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 903,
	904, 906, 907, 427, 433, 434, 435, 962, 436, 416,
	417, 437, 438, 989, 439, 440, 925, 905, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 973, 448, 449,
	450, 996, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 901, 0, 462, 944, 945, 946, 947,
	0, 469, 0, 463, 464, 997, 465, 998, 878, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 963, 480, 0, 909, 481, 482,
	483, 532, 941, 991, 0, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 914, 872,
	873, 874, 870, 871, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	884, 226, 0, 0, 882, 0, 0, 965, 888, 0,
	0, 0, 227, 229, 228, 230, 231, 0, 929, 908,
	940, 235, 898, 939, 938, 0, 236, 237, 900, 899,
	240, 241, 242, 890, 964, 243, 1001, 1002, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 3662, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 943,
	267, 936, 935, 861, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 934, 274, 0, 275, 0, 276, 277,
	0, 278, 867, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 879, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 933, 931, 932, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	889, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 0, 304, 305, 0, 306, 307, 308, 910, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 319, 0,
	968, 0, 320, 321, 322, 980, 948, 949, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	1000, 981, 333, 334, 0, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 902, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 858, 220, 0, 357, 880, 969, 358,
	937, 360, 361, 0, 911, 363, 912, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 930, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 868, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 903, 904,
	906, 907, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 0, 439, 440, 925, 905, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 973, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 901, 0, 462, 944, 945, 946, 947, 0,
	469, 0, 463, 464, 997, 465, 998, 878, 466, 467,
	468, 0, 3661, 471, 0, 862, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 909, 481, 482, 483,
	532, 941, 991, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 0, 1039, 0, 0,
	855, 856, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 0, 882, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 964, 243, 496, 497, 498, 0, 244,
	971, 0, 952, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 955, 953, 954,
	961, 957, 956, 960, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 992, 993, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 999, 0, 507,
	299, 0, 300, 301, 302, 303, 966, 967, 970, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	219, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 968,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 1025, 331, 330, 0, 332, 1000,
	981, 333, 334, 982, 0, 335, 336, 959, 958, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 220, 985, 357, 0, 969, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 1031, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 994,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 995, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 1033, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 184, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 962, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 996,
	0, 454, 455, 453, 186, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 997, 465, 998, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 963, 480, 0, 478, 481, 482, 483, 1350,
	533, 534, 0, 485, 484, 535, 1039, 0, 0, 178,
	486, 487, 536, 488, 489, 490, 0, 179, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 1029, 0, 1648, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 964, 243, 496, 497, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 507, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 1025, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 0, 220, 985, 357, 0, 969, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 1031, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 523, 1033, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 184, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 996, 0,
	454, 455, 453, 186, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 997, 465, 998, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 478, 481, 482, 483, 1350, 533,
	534, 0, 485, 484, 535, 2710, 0, 1039, 178, 486,
	487, 536, 488, 489, 490, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 1029, 965, 1648, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 964, 243, 496, 497, 498, 0, 244,
	971, 0, 952, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 955, 953, 954,
	961, 957, 956, 960, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 992, 993, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 999, 0, 507,
	299, 0, 300, 301, 302, 303, 966, 967, 970, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	219, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 968,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 1025, 331, 330, 0, 332, 1000,
	981, 333, 334, 982, 0, 335, 336, 959, 958, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 220, 985, 357, 0, 969, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 1031, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 994,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 995, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 1033, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 962, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 996,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 997, 465, 998, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 963, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 1021, 0, 1039, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 1029, 965, 1027, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 964, 243, 496, 497, 498, 0,
	244, 971, 0, 952, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 955, 953,
	954, 961, 957, 956, 960, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 992, 993, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 999, 0,
	507, 299, 0, 300, 301, 302, 303, 966, 967, 970,
	359, 977, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 219, 309, 311, 318, 0, 976, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 978,
	968, 979, 320, 321, 322, 980, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 1025, 331, 330, 0, 332,
	1000, 981, 333, 334, 982, 0, 335, 336, 959, 958,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 0, 220, 985, 357, 0, 969, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 1031, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	994, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 995, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 523, 1033, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 962, 436, 416, 417,
	437, 438, 989, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	996, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 997, 465, 998, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 963, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 1039, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 965, 1029, 0, 1027,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 964, 243, 496, 497, 498, 0, 244,
	971, 0, 952, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 955, 953, 954,
	961, 957, 956, 960, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 992, 993, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 999, 0, 507,
	299, 0, 300, 301, 302, 303, 966, 967, 970, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	219, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 968,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 1025, 331, 330, 0, 332, 1000,
	981, 333, 334, 982, 0, 335, 336, 959, 958, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 220, 985, 357, 0, 969, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 1031, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 994,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 995, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 1033, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 962, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 996,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 997, 465, 998, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 963, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 1039, 0, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 965, 1029, 0, 1027, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 964, 243, 496, 497, 498, 0, 244, 971,
	0, 952, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 974, 260, 261, 955, 953, 954, 961,
	957, 956, 960, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	992, 993, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 975, 296, 297, 0, 298, 999, 0, 507, 299,
	0, 300, 301, 302, 303, 966, 967, 970, 359, 977,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 976, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 978, 968, 979,
	320, 321, 322, 980, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 1000, 981,
	333, 334, 982, 0, 335, 336, 959, 958, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 983, 351, 352, 355, 356, 354, 984,
	353, 0, 220, 985, 357, 0, 969, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 986, 371, 987, 994, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 995, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 988, 410, 411,
	412, 413, 523, 1033, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 962, 436, 416, 417, 437, 438,
	989, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 996, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 997, 465, 998, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 963, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 848, 0, 1215, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 1549, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 1106, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 514,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	981, 333, 334, 982, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 0, 985, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 184, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 186, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 1350,
	533, 534, 0, 485, 484, 535, 1347, 0, 1215, 178,
	486, 487, 536, 488, 489, 490, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 153, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 1106, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 977, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 976, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 978,
	514, 979, 320, 321, 322, 980, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 981, 333, 334, 982, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 0, 0, 985, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 184, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 989, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 186, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	1350, 533, 534, 0, 485, 484, 535, 0, 0, 0,
	178, 486, 487, 536, 488, 489, 490, 0, 179, 0,
	0, 0, 0, 1215, 1214, 0, 0, 0, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 496, 497, 498, 0, 244, 499, 0, 1106, 0,
	245, 246, 247, 248, 249, 250, 0, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	974, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 500, 501, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 0, 295, 0, 0, 975, 296,
	297, 0, 298, 506, 0, 507, 299, 0, 300, 301,
	302, 303, 508, 509, 510, 359, 977, 304, 305, 0,
	306, 307, 308, 310, 0, 0, 0, 309, 311, 318,
	0, 976, 312, 511, 314, 313, 315, 316, 317, 512,
	0, 513, 0, 319, 978, 514, 979, 320, 321, 322,
	980, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	0, 331, 330, 0, 332, 515, 981, 333, 334, 982,
	0, 335, 336, 0, 0, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 348,
	983, 351, 352, 355, 356, 354, 984, 353, 0, 0,
	985, 357, 0, 516, 358, 517, 360, 361, 0, 362,
	363, 364, 0, 0, 366, 367, 368, 0, 0, 369,
	370, 518, 986, 371, 987, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 520, 382,
	521, 383, 384, 0, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 0, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 0, 409, 988, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 421, 422, 423, 424, 425,
	0, 431, 432, 426, 428, 429, 430, 427, 433, 434,
	435, 0, 436, 416, 417, 437, 438, 989, 439, 440,
	524, 441, 442, 0, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 0, 454, 455, 453,
	0, 456, 457, 458, 459, 460, 283, 461, 0, 462,
	526, 527, 528, 529, 0, 469, 0, 463, 464, 530,
	465, 531, 0, 466, 467, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 476, 477, 475, 479, 0, 480,
	0, 478, 481, 482, 483, 532, 533, 534, 0, 485,
	484, 535, 0, 0, 0, 0, 486, 487, 536, 488,
	489, 490, 1215, 1214, 0, 0, 0, 0, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 2916, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 0, 244, 499, 0, 1106, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 977, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	976, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 978, 514, 979, 320, 321, 322, 980,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 981, 333, 334, 982, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 0, 0, 985,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 989, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 1215, 1214, 0, 0, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 1221, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 1106, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 974, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 975, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 977, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 0, 309, 311, 318, 0, 976,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 978, 514, 979, 320, 321, 322, 980, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 981, 333, 334, 982, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 983, 351,
	352, 355, 356, 354, 984, 353, 0, 0, 985, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	986, 371, 987, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 988, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 989, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 0, 485, 484, 535,
	1039, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 965,
	0, 0, 1356, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 964, 243, 496, 497,
	498, 0, 244, 971, 0, 952, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 974, 260, 261,
	955, 953, 954, 961, 957, 956, 960, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 992, 993, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 975, 296, 297, 0, 298,
	999, 0, 507, 299, 0, 300, 301, 302, 303, 966,
	967, 970, 359, 977, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 0, 976, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 978, 968, 979, 320, 321, 322, 980, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 1000, 981, 333, 334, 982, 0, 335, 336,
	959, 958, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 983, 351, 352,
	355, 356, 354, 984, 353, 0, 220, 985, 357, 0,
	969, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 986,
	371, 987, 994, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 995, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 988, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 962, 436,
	416, 417, 437, 438, 989, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 996, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 997, 465, 998, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 963, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 0, 485, 484, 535, 848,
	0, 215, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 0, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 0, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 184, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 186, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 1350, 533, 534, 0, 485, 484, 535,
	215, 0, 0, 178, 486, 487, 536, 488, 489, 490,
	0, 179, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 491,
	0, 0, 153, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 496, 497,
	498, 0, 244, 499, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	506, 0, 507, 299, 0, 300, 301, 302, 303, 508,
	509, 510, 359, 0, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 0, 0, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 0, 514, 0, 320, 321, 322, 0, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 515, 0, 333, 334, 0, 0, 335, 336,
	0, 0, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 0, 351, 352,
	355, 356, 354, 0, 353, 0, 220, 0, 357, 0,
	516, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 0,
	371, 0, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 520, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 0, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 0, 436,
	416, 417, 437, 438, 0, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 530, 465, 531, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 0, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 0, 485, 484, 535, 1301,
	0, 215, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 1662, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 220, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 0, 485, 484, 535,
	215, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 491,
	1305, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 496, 497,
	498, 0, 244, 499, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	506, 0, 507, 299, 0, 300, 301, 302, 303, 508,
	509, 510, 359, 0, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 0, 0, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 0, 514, 0, 320, 321, 322, 0, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 515, 0, 333, 334, 0, 0, 335, 336,
	0, 0, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 0, 351, 352,
	355, 356, 354, 0, 353, 0, 220, 0, 357, 0,
	516, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 0,
	371, 0, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 520, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 0, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 0, 436,
	416, 417, 437, 438, 0, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 530, 465, 531, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 0, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 0, 485, 484, 535, 215,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 2865,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 220, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 215, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 1305, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 0, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 215, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 2462,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 215, 0, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 3004, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 0,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 0, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 717, 0, 611, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 1930, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 617, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 715, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	219, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 220, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 616, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 0, 610, 0, 611,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 620, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 617, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 220, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 616, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	608, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 1215, 1214,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 1106, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 977, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 976, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 978,
	514, 979, 320, 321, 322, 980, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 981, 333, 334, 982, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 0, 0, 985, 357, 3143, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 989, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 1215, 1214, 0,
	0, 0, 0, 1212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 1106, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 514,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	981, 333, 334, 982, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 0, 985, 357, 2845, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 611, 485, 484, 535, 0, 0, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 0, 244, 499, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 617, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 0, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 219, 309, 311, 318, 0,
	0, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 0, 514, 0, 320, 321, 322, 0,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 0, 333, 334, 0, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 0,
	351, 352, 355, 356, 354, 0, 353, 0, 220, 0,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 0, 371, 0, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 0, 1964, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 0, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 616,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 0, 485, 484,
	535, 611, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 620, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	617, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 220, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 616, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 0, 485, 484, 535,
	0, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	1383, 0, 1215, 1214, 0, 0, 0, 0, 1212, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 0, 244, 499, 0, 1106, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 218,
	0, 0, 0, 0, 0, 1382, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 977, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	976, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 978, 514, 979, 320, 321, 322, 980,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 981, 333, 334, 982, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 0, 0, 985,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	1381, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 1380, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 989, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 0, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 1344, 0, 1215, 1214, 0, 0, 0, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 496, 497, 498, 0, 244, 499, 0, 1106, 0,
	245, 246, 247, 248, 249, 250, 0, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	974, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 500, 501, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 0, 295, 0, 0, 975, 296,
	297, 0, 298, 506, 0, 507, 299, 0, 300, 301,
	302, 303, 1343, 509, 510, 359, 977, 304, 305, 0,
	306, 307, 308, 310, 0, 0, 0, 309, 311, 318,
	0, 976, 312, 511, 314, 313, 315, 316, 317, 512,
	0, 513, 0, 319, 978, 514, 979, 320, 321, 322,
	980, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	0, 331, 330, 0, 332, 515, 981, 333, 334, 982,
	0, 335, 336, 0, 0, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 348,
	983, 351, 352, 355, 356, 354, 984, 353, 0, 0,
	985, 357, 0, 516, 358, 517, 360, 361, 0, 362,
	363, 364, 0, 0, 366, 367, 368, 0, 0, 369,
	370, 518, 986, 371, 987, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 520, 382,
	521, 383, 384, 0, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 0, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 0, 409, 988, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 421, 422, 423, 424, 425,
	0, 431, 432, 426, 428, 429, 430, 427, 433, 434,
	435, 0, 436, 416, 417, 437, 438, 989, 439, 440,
	524, 441, 442, 0, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 0, 454, 455, 453,
	0, 456, 457, 458, 459, 460, 283, 461, 0, 462,
	526, 527, 528, 529, 0, 469, 0, 463, 464, 530,
	465, 531, 0, 466, 467, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 476, 477, 475, 479, 0, 480,
	0, 478, 481, 482, 483, 532, 533, 534, 0, 485,
	484, 535, 0, 0, 0, 0, 486, 487, 536, 488,
	489, 490, 1281, 0, 1215, 1214, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 1106,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 1280, 509, 510, 359, 977, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 976, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 978, 514, 979, 320, 321,
	322, 980, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 981, 333, 334,
	982, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 0,
	0, 985, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 989, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 0,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 1210, 0, 1215, 1214, 0, 0, 0,
	0, 1212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 244, 499, 0,
	1106, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 974, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	975, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 1209, 509, 510, 359, 977, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 0, 309,
	311, 318, 0, 976, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 978, 514, 979, 320,
	321, 322, 980, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 981, 333,
	334, 982, 0, 335, 336, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 348, 983, 351, 352, 355, 356, 354, 984, 353,
	0, 0, 985, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 0, 366, 367, 368, 0,
	0, 369, 370, 518, 986, 371, 987, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 988, 410, 411, 412,
	413, 523, 414, 0, 415, 419, 420, 421, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 434, 435, 0, 436, 416, 417, 437, 438, 989,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 0, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 526, 527, 528, 529, 0, 469, 0, 463,
	464, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	0, 485, 484, 535, 0, 0, 0, 0, 486, 487,
	536, 488, 489, 490, 1215, 1214, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 1106,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 974, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 975,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 508, 509, 510, 359, 977, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 976, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 978, 514, 979, 320, 321,
	322, 980, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 981, 333, 334,
	982, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 983, 351, 352, 355, 356, 354, 984, 353, 0,
	0, 985, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 986, 371, 987, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 988, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 989, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 220, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 1215, 1214,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 620, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 1106, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 974, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 1751, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 975, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 977, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 976, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 978,
	514, 979, 320, 321, 322, 980, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 981, 333, 334, 982, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 983, 351, 352, 355, 356,
	354, 984, 353, 0, 0, 985, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 986, 371, 987,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 988,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 989, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 1215, 1214, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 1106, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 974, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 975, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	977, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 976, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 978, 514,
	979, 320, 321, 322, 980, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	981, 333, 334, 982, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 983, 351, 352, 355, 356, 354,
	984, 353, 0, 0, 985, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 986, 371, 987, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 988, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 989, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 1215, 485, 484, 535, 0, 0, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 0, 244, 499, 0, 1106, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 974,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 975, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 977, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	976, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 978, 514, 979, 320, 321, 322, 980,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 981, 333, 334, 982, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 983,
	351, 352, 355, 356, 354, 984, 353, 0, 0, 985,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 986, 371, 987, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 988, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 989, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 215, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 2337, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 2334, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	2341, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 2498, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	2340, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	2495, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 2497, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 2494, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 2339, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 2496, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 215, 485, 484, 535, 0, 0, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 2337, 244, 499, 0, 0, 2331, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 2334, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 2341, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 2340, 0, 0, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 2330, 509, 510, 359, 0, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	0, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 0, 514, 0, 320, 321, 322, 0,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 0, 333, 334, 0, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 0,
	351, 352, 355, 356, 354, 0, 353, 0, 0, 0,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 0, 371, 0, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 2339, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 0, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 0, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 2338,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 0, 485, 484,
	535, 1440, 0, 215, 0, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 496, 497, 498, 0, 244, 499, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 500, 501, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 506, 0, 507, 299, 0, 300, 301,
	302, 303, 508, 509, 510, 359, 0, 304, 305, 0,
	306, 307, 308, 310, 0, 0, 219, 309, 311, 318,
	0, 0, 312, 511, 314, 313, 315, 316, 317, 512,
	0, 513, 0, 319, 0, 514, 0, 320, 321, 322,
	0, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	0, 331, 330, 0, 332, 515, 0, 333, 334, 0,
	0, 335, 336, 0, 0, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 348,
	0, 351, 352, 355, 356, 354, 0, 353, 0, 220,
	0, 357, 0, 516, 358, 517, 360, 361, 0, 362,
	363, 364, 0, 0, 366, 367, 368, 0, 0, 369,
	370, 518, 0, 371, 0, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 520, 382,
	521, 383, 384, 0, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 0, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 0, 409, 0, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 421, 422, 423, 424, 425,
	0, 1443, 432, 426, 428, 429, 430, 427, 433, 434,
	435, 0, 436, 416, 417, 437, 438, 0, 439, 440,
	524, 441, 442, 0, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 0, 454, 455, 453,
	1441, 456, 457, 458, 459, 460, 283, 461, 0, 462,
	526, 527, 528, 529, 0, 469, 0, 463, 464, 530,
	465, 531, 0, 466, 467, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 476, 477, 475, 479, 0, 480,
	0, 478, 481, 482, 483, 532, 533, 534, 0, 1442,
	484, 535, 1191, 0, 215, 0, 486, 487, 536, 488,
	489, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 1193, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 219, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	220, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 1031, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 0,
	485, 484, 535, 1188, 0, 215, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 244, 499, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 1190, 509, 510, 359, 0, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 219, 309,
	311, 318, 0, 0, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 0, 514, 0, 320,
	321, 322, 0, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 0, 333,
	334, 0, 0, 335, 336, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 348, 0, 351, 352, 355, 356, 354, 0, 353,
	0, 220, 0, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 1031, 366, 367, 368, 0,
	0, 369, 370, 518, 0, 371, 0, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 0, 410, 411, 412,
	413, 523, 414, 0, 415, 419, 420, 421, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 434, 435, 0, 436, 416, 417, 437, 438, 0,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 0, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 526, 527, 528, 529, 0, 469, 0, 463,
	464, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	0, 485, 484, 535, 1094, 0, 215, 0, 486, 487,
	536, 488, 489, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 1096, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 220, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 1031, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 565, 0, 215, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 564, 225, 554,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 557, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 558, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 559, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 553, 0, 215, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	554, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 557, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 558, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 0, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 559, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 215, 485, 484, 535, 0, 0, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 496, 497, 498, 0, 244, 499, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 500, 501, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 506, 0, 507, 299, 0, 300, 301,
	302, 303, 508, 509, 510, 359, 0, 304, 305, 0,
	306, 307, 308, 310, 0, 0, 219, 309, 311, 318,
	0, 0, 312, 511, 314, 313, 315, 316, 317, 512,
	0, 513, 0, 319, 0, 514, 0, 320, 321, 322,
	0, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	0, 331, 330, 0, 332, 515, 0, 333, 334, 0,
	0, 335, 336, 0, 0, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 348,
	0, 351, 352, 355, 356, 354, 2827, 353, 0, 220,
	0, 357, 0, 516, 358, 517, 360, 361, 0, 362,
	363, 364, 0, 0, 366, 367, 368, 0, 0, 369,
	370, 518, 0, 371, 0, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 520, 382,
	521, 383, 384, 0, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 0, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 0, 409, 0, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 421, 422, 423, 424, 425,
	0, 431, 432, 426, 428, 429, 430, 427, 433, 434,
	435, 0, 436, 416, 417, 437, 438, 0, 439, 440,
	524, 441, 442, 0, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 0, 454, 455, 453,
	0, 456, 457, 458, 459, 460, 283, 461, 0, 462,
	526, 527, 528, 529, 0, 469, 0, 463, 464, 530,
	465, 531, 0, 466, 467, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 476, 477, 475, 479, 0, 480,
	0, 478, 481, 482, 483, 532, 533, 534, 215, 485,
	484, 535, 0, 0, 0, 0, 486, 487, 536, 488,
	489, 490, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 219, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 220, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 1031, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 2434, 0, 215,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 2433, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 220, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 1940, 0,
	215, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 496, 497,
	498, 0, 244, 499, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	506, 0, 507, 299, 0, 300, 301, 302, 303, 508,
	509, 510, 359, 0, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 0, 0, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 0, 514, 0, 320, 321, 322, 0, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 515, 0, 333, 334, 0, 0, 335, 336,
	0, 0, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 0, 351, 352,
	355, 356, 354, 0, 353, 0, 220, 0, 357, 0,
	516, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 0,
	371, 0, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 520, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 0, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 0, 436,
	416, 417, 437, 438, 0, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 530, 465, 531, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 0, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 215, 485, 484, 535, 0,
	0, 0, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 244, 499, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 508, 509, 510, 359, 0, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 219, 309,
	311, 318, 0, 0, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 0, 514, 0, 320,
	321, 322, 0, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 0, 333,
	334, 0, 0, 335, 336, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 348, 0, 351, 352, 355, 356, 354, 0, 353,
	0, 220, 0, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 0, 366, 367, 368, 0,
	0, 369, 370, 518, 0, 371, 0, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 0, 410, 411, 412,
	413, 523, 414, 0, 415, 419, 420, 421, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 434, 435, 0, 436, 416, 417, 437, 438, 0,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 1871, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 526, 527, 528, 529, 0, 469, 0, 463,
	464, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	0, 485, 484, 535, 1876, 0, 215, 0, 486, 487,
	536, 488, 489, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 1875, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 220, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 1864, 0, 215, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 1866, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	219, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 220, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 1335, 0, 215, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 1334, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 219, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 220, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 1332, 0, 215,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 1331, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 219, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 220, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 1328, 0,
	215, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 496, 497,
	498, 0, 244, 499, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	506, 0, 507, 299, 0, 300, 301, 302, 303, 1327,
	509, 510, 359, 0, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 219, 309, 311, 318, 0, 0, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 0, 514, 0, 320, 321, 322, 0, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 515, 0, 333, 334, 0, 0, 335, 336,
	0, 0, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 0, 351, 352,
	355, 356, 354, 0, 353, 0, 220, 0, 357, 0,
	516, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 0,
	371, 0, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 520, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 0, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 0, 436,
	416, 417, 437, 438, 0, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 530, 465, 531, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 0, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 0, 485, 484, 535, 1202,
	0, 215, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	1204, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 220, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 215, 485, 484, 535,
	0, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 220, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 215, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 557, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 558,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 0, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 0, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 559, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 215, 485, 484, 535,
	0, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 1971, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 220, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 215, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	1969, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 220, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 215, 485, 484, 535,
	0, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 1967, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 219,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 220, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 215, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	1914, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 219, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 220, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 0, 485, 484, 535,
	708, 0, 215, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 498, 0, 244, 499, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 0, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	0, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 707, 319, 0, 514, 0, 320, 321, 322, 0,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 0, 333, 334, 0, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 348, 0,
	351, 352, 355, 356, 354, 0, 353, 0, 0, 0,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 0, 371, 0, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 0, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 421, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 434, 435,
	0, 436, 416, 417, 437, 438, 0, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 706,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 526,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 215, 485, 484,
	535, 0, 0, 0, 0, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 2498, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 3341, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 544, 0, 215, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	543, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 0, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 542, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 215, 3350, 0,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 215, 2485, 0, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 0,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 0, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 215, 485, 484, 535, 0, 0, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 3131, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 0, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 0, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 215, 485, 484, 535,
	0, 0, 0, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 2262, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 0,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 0, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 215, 2485, 0, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 244, 499, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 508, 509, 510, 359, 0, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 0, 309,
	311, 318, 0, 0, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 0, 514, 0, 320,
	321, 322, 0, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 0, 333,
	334, 0, 0, 335, 336, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 348, 0, 351, 352, 355, 356, 354, 0, 353,
	0, 0, 0, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 0, 366, 367, 2482, 0,
	0, 369, 370, 518, 0, 371, 0, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 0, 410, 411, 412,
	413, 523, 414, 0, 415, 419, 420, 421, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 434, 435, 0, 436, 416, 417, 437, 438, 0,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 0, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 526, 527, 528, 529, 0, 469, 0, 463,
	464, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	215, 485, 484, 535, 0, 0, 0, 0, 486, 487,
	536, 488, 489, 490, 0, 0, 0, 221, 222, 223,
	224, 225, 1948, 226, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 492,
	493, 232, 494, 235, 233, 234, 495, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 496, 497,
	498, 0, 244, 499, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 500, 501, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 502, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 503, 504, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 291, 505, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	506, 0, 507, 299, 0, 300, 301, 302, 303, 508,
	509, 510, 359, 0, 304, 305, 0, 306, 307, 308,
	310, 0, 0, 0, 309, 311, 318, 0, 0, 312,
	511, 314, 313, 315, 316, 317, 512, 0, 513, 0,
	319, 0, 514, 0, 320, 321, 322, 0, 323, 324,
	0, 0, 325, 326, 327, 328, 329, 0, 331, 330,
	0, 332, 515, 0, 333, 334, 0, 0, 335, 336,
	0, 0, 337, 338, 339, 340, 0, 341, 342, 344,
	346, 343, 345, 347, 349, 350, 348, 0, 351, 352,
	355, 356, 354, 0, 353, 0, 0, 0, 357, 0,
	516, 358, 517, 360, 361, 0, 362, 363, 364, 0,
	0, 366, 367, 368, 0, 0, 369, 370, 518, 0,
	371, 0, 519, 372, 365, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 381, 520, 382, 521, 383, 384,
	0, 385, 0, 386, 387, 388, 389, 390, 391, 392,
	522, 393, 394, 0, 395, 396, 397, 398, 399, 400,
	0, 402, 403, 404, 401, 405, 406, 407, 408, 0,
	409, 0, 410, 411, 412, 413, 523, 414, 0, 415,
	419, 420, 421, 422, 423, 424, 425, 0, 431, 432,
	426, 428, 429, 430, 427, 433, 434, 435, 0, 436,
	416, 417, 437, 438, 0, 439, 440, 524, 441, 442,
	0, 443, 444, 445, 446, 418, 447, 451, 452, 448,
	449, 450, 525, 0, 454, 455, 453, 0, 456, 457,
	458, 459, 460, 283, 461, 0, 462, 526, 527, 528,
	529, 0, 469, 0, 463, 464, 530, 465, 531, 0,
	466, 467, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 476, 477, 475, 479, 0, 480, 0, 478, 481,
	482, 483, 532, 533, 534, 0, 485, 484, 535, 1938,
	0, 215, 0, 486, 487, 536, 488, 489, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	492, 493, 232, 494, 235, 233, 234, 495, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 496,
	497, 498, 0, 244, 499, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 500, 501, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 502, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 505, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 506, 0, 507, 299, 0, 300, 301, 302, 303,
	508, 509, 510, 359, 0, 304, 305, 0, 306, 307,
	308, 310, 0, 0, 0, 309, 311, 318, 0, 0,
	312, 511, 314, 313, 315, 316, 317, 512, 0, 513,
	0, 319, 0, 514, 0, 320, 321, 322, 0, 323,
	324, 0, 0, 325, 326, 327, 328, 329, 0, 331,
	330, 0, 332, 515, 0, 333, 334, 0, 0, 335,
	336, 0, 0, 337, 338, 339, 340, 0, 341, 342,
	344, 346, 343, 345, 347, 349, 350, 348, 0, 351,
	352, 355, 356, 354, 0, 353, 0, 0, 0, 357,
	0, 516, 358, 517, 360, 361, 0, 362, 363, 364,
	0, 0, 366, 367, 368, 0, 0, 369, 370, 518,
	0, 371, 0, 519, 372, 365, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 381, 520, 382, 521, 383,
	384, 0, 385, 0, 386, 387, 388, 389, 390, 391,
	392, 522, 393, 394, 0, 395, 396, 397, 398, 399,
	400, 0, 402, 403, 404, 401, 405, 406, 407, 408,
	0, 409, 0, 410, 411, 412, 413, 523, 414, 0,
	415, 419, 420, 421, 422, 423, 424, 425, 0, 431,
	432, 426, 428, 429, 430, 427, 433, 434, 435, 0,
	436, 416, 417, 437, 438, 0, 439, 440, 524, 441,
	442, 0, 443, 444, 445, 446, 418, 447, 451, 452,
	448, 449, 450, 525, 0, 454, 455, 453, 0, 456,
	457, 458, 459, 460, 283, 461, 0, 462, 526, 527,
	528, 529, 0, 469, 0, 463, 464, 530, 465, 531,
	0, 466, 467, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 476, 477, 475, 479, 0, 480, 0, 478,
	481, 482, 483, 532, 533, 534, 0, 485, 484, 535,
	585, 0, 215, 0, 486, 487, 536, 488, 489, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 227, 1068, 228, 230,
	231, 492, 493, 232, 494, 235, 233, 234, 495, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	496, 497, 1066, 0, 244, 499, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 500, 501, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 502, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 505, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 506, 0, 507, 299, 0, 300, 301, 302,
	303, 508, 509, 510, 359, 0, 304, 305, 0, 306,
	307, 308, 310, 0, 0, 0, 309, 311, 318, 0,
	0, 312, 511, 314, 313, 315, 316, 317, 512, 0,
	513, 0, 319, 0, 514, 0, 320, 321, 322, 0,
	323, 324, 0, 0, 325, 326, 327, 328, 329, 0,
	331, 330, 0, 332, 515, 0, 333, 334, 0, 0,
	335, 336, 0, 0, 337, 338, 339, 340, 0, 341,
	342, 344, 346, 343, 345, 347, 349, 350, 586, 0,
	351, 352, 355, 356, 354, 0, 353, 0, 0, 0,
	357, 0, 516, 358, 517, 360, 361, 0, 362, 363,
	364, 0, 0, 366, 367, 368, 0, 0, 369, 370,
	518, 0, 371, 0, 519, 372, 365, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 381, 520, 382, 521,
	383, 384, 0, 385, 0, 386, 387, 388, 389, 390,
	391, 392, 522, 393, 394, 0, 395, 396, 397, 398,
	399, 400, 0, 402, 403, 404, 401, 405, 406, 407,
	408, 0, 409, 0, 410, 411, 412, 413, 523, 414,
	0, 415, 419, 420, 582, 422, 423, 424, 425, 0,
	431, 432, 426, 428, 429, 430, 427, 433, 1069, 435,
	0, 436, 416, 417, 437, 438, 0, 439, 440, 524,
	441, 442, 0, 443, 444, 445, 446, 418, 447, 451,
	452, 448, 449, 450, 525, 0, 454, 455, 453, 0,
	456, 457, 458, 459, 460, 283, 461, 0, 462, 581,
	527, 528, 529, 0, 469, 0, 463, 464, 530, 465,
	531, 0, 466, 467, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 476, 477, 475, 479, 0, 480, 0,
	478, 481, 482, 483, 532, 533, 534, 0, 485, 484,
	535, 585, 0, 215, 0, 486, 487, 536, 488, 489,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 492, 493, 232, 494, 235, 233, 234, 495,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 496, 497, 498, 0, 575, 499, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 500, 501, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 502, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 291, 505,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 506, 0, 507, 299, 0, 300, 301,
	302, 303, 508, 509, 510, 359, 0, 304, 305, 0,
	306, 307, 308, 310, 0, 0, 0, 309, 311, 318,
	0, 0, 312, 511, 314, 313, 315, 316, 317, 512,
	0, 513, 0, 319, 0, 514, 0, 320, 321, 322,
	0, 323, 324, 0, 0, 325, 326, 327, 328, 329,
	0, 331, 330, 0, 332, 515, 0, 333, 334, 0,
	0, 335, 336, 0, 0, 337, 338, 339, 340, 0,
	341, 342, 344, 346, 343, 345, 347, 349, 350, 586,
	0, 351, 352, 355, 356, 354, 0, 353, 0, 0,
	0, 357, 0, 516, 358, 517, 360, 361, 0, 362,
	363, 364, 0, 0, 366, 367, 368, 0, 0, 369,
	370, 518, 0, 371, 0, 519, 372, 365, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 381, 520, 382,
	521, 383, 384, 0, 385, 0, 386, 387, 388, 389,
	390, 391, 392, 522, 393, 394, 0, 395, 396, 397,
	398, 399, 400, 0, 402, 403, 404, 401, 405, 406,
	407, 408, 0, 409, 0, 410, 411, 412, 413, 523,
	414, 0, 415, 419, 420, 582, 422, 423, 424, 425,
	0, 431, 432, 426, 428, 429, 430, 427, 433, 1355,
	435, 0, 436, 416, 417, 437, 438, 0, 439, 440,
	524, 441, 442, 0, 443, 444, 445, 446, 418, 447,
	451, 452, 448, 449, 450, 525, 0, 454, 455, 453,
	0, 456, 457, 458, 459, 460, 283, 461, 0, 462,
	581, 527, 528, 529, 0, 469, 0, 463, 464, 530,
	465, 531, 0, 466, 467, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 476, 477, 475, 479, 0, 480,
	0, 478, 481, 482, 483, 532, 533, 534, 0, 485,
	484, 535, 1341, 0, 215, 0, 486, 487, 536, 488,
	489, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 1340, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 0,
	485, 484, 535, 1289, 0, 215, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 244, 499, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 1288, 509, 510, 359, 0, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 0, 309,
	311, 318, 0, 0, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 0, 514, 0, 320,
	321, 322, 0, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 0, 333,
	334, 0, 0, 335, 336, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 348, 0, 351, 352, 355, 356, 354, 0, 353,
	0, 0, 0, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 0, 366, 367, 368, 0,
	0, 369, 370, 518, 0, 371, 0, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 0, 410, 411, 412,
	413, 523, 414, 0, 415, 419, 420, 421, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 434, 435, 0, 436, 416, 417, 437, 438, 0,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 0, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 526, 527, 528, 529, 0, 469, 0, 463,
	464, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	0, 485, 484, 535, 1274, 0, 215, 0, 486, 487,
	536, 488, 489, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 1273, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 0,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 0, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 419, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 1269, 0, 215, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 1196, 0, 215, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 0, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 585, 0, 215,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 1068, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 1066,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 586, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 582, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 1069, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 581, 527, 528, 529,
	0, 469, 0, 463, 1067, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 1050, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 508, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 0,
	485, 484, 535, 585, 0, 215, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 492, 493, 232, 494, 235, 233,
	234, 495, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 496, 497, 498, 0, 575, 499, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 0,
	252, 253, 254, 251, 0, 573, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 500, 501,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 502,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 505, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 506, 0, 507, 299, 0,
	300, 301, 302, 303, 508, 509, 510, 359, 0, 304,
	305, 0, 306, 307, 308, 310, 0, 0, 0, 309,
	311, 318, 0, 0, 312, 511, 314, 313, 315, 316,
	317, 512, 0, 513, 0, 319, 0, 514, 0, 320,
	321, 322, 0, 323, 324, 0, 0, 325, 326, 327,
	328, 329, 0, 331, 330, 0, 332, 515, 0, 333,
	334, 0, 0, 335, 574, 0, 0, 337, 338, 339,
	340, 0, 341, 342, 344, 346, 343, 345, 347, 349,
	350, 586, 0, 351, 352, 355, 356, 354, 0, 353,
	0, 0, 0, 357, 0, 516, 358, 517, 360, 361,
	0, 362, 363, 364, 0, 0, 366, 367, 368, 0,
	0, 369, 370, 518, 0, 371, 0, 519, 372, 365,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 381,
	520, 382, 521, 383, 384, 0, 385, 0, 386, 387,
	388, 389, 390, 391, 392, 522, 393, 394, 0, 395,
	396, 397, 398, 399, 400, 0, 402, 403, 404, 401,
	405, 406, 407, 408, 0, 409, 0, 410, 411, 412,
	413, 576, 414, 0, 415, 419, 420, 582, 422, 423,
	424, 425, 0, 431, 432, 426, 428, 429, 430, 427,
	433, 577, 435, 0, 436, 416, 417, 437, 438, 0,
	439, 440, 524, 441, 442, 0, 443, 444, 445, 446,
	418, 447, 451, 452, 448, 449, 450, 525, 0, 454,
	455, 453, 0, 456, 457, 458, 459, 460, 283, 461,
	0, 462, 581, 527, 528, 529, 0, 469, 0, 463,
	579, 530, 465, 531, 0, 466, 467, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 476, 477, 475, 479,
	0, 480, 0, 478, 481, 482, 483, 532, 533, 534,
	0, 485, 484, 535, 569, 0, 215, 0, 486, 487,
	536, 488, 489, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 492, 493, 232, 494, 235,
	233, 234, 495, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 496, 497, 498, 0, 244, 499,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 500,
	501, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	502, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 505, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 506, 0, 507, 299,
	0, 300, 301, 302, 303, 508, 509, 510, 359, 0,
	304, 305, 0, 306, 307, 308, 310, 0, 0, 0,
	309, 311, 318, 0, 0, 312, 511, 314, 313, 315,
	316, 317, 512, 0, 513, 0, 319, 0, 514, 0,
	320, 321, 322, 0, 323, 324, 0, 0, 325, 326,
	327, 328, 329, 0, 331, 330, 0, 332, 515, 0,
	333, 334, 0, 0, 335, 336, 0, 0, 337, 338,
	339, 340, 0, 341, 342, 344, 346, 343, 345, 347,
	349, 350, 348, 0, 351, 352, 355, 356, 354, 0,
	353, 0, 0, 0, 357, 0, 516, 358, 517, 360,
	361, 0, 362, 363, 364, 0, 0, 366, 367, 368,
	0, 0, 369, 370, 518, 0, 371, 0, 519, 372,
	365, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	381, 520, 382, 521, 383, 384, 0, 385, 0, 386,
	387, 388, 389, 390, 391, 392, 522, 393, 394, 0,
	395, 396, 397, 398, 399, 400, 0, 402, 403, 404,
	401, 405, 406, 407, 408, 0, 409, 0, 410, 411,
	412, 413, 523, 414, 0, 415, 570, 420, 421, 422,
	423, 424, 425, 0, 431, 432, 426, 428, 429, 430,
	427, 433, 434, 435, 0, 436, 416, 417, 437, 438,
	0, 439, 440, 524, 441, 442, 0, 443, 444, 445,
	446, 418, 447, 451, 452, 448, 449, 450, 525, 0,
	454, 455, 453, 0, 456, 457, 458, 459, 460, 283,
	461, 0, 462, 526, 527, 528, 529, 0, 469, 0,
	463, 464, 530, 465, 531, 0, 466, 467, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 476, 477, 475,
	479, 0, 480, 0, 478, 481, 482, 483, 532, 533,
	534, 0, 485, 484, 535, 567, 0, 215, 0, 486,
	487, 536, 488, 489, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 492, 493, 232, 494,
	235, 233, 234, 495, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 496, 497, 498, 0, 244,
	499, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	500, 501, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 502, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 505, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 506, 0, 507,
	299, 0, 300, 301, 302, 303, 508, 509, 510, 359,
	0, 304, 305, 0, 306, 307, 308, 310, 0, 0,
	0, 309, 311, 318, 0, 0, 312, 511, 314, 313,
	315, 316, 317, 512, 0, 513, 0, 319, 0, 514,
	0, 320, 321, 322, 0, 323, 324, 0, 0, 325,
	326, 327, 328, 329, 0, 331, 330, 0, 332, 515,
	0, 333, 334, 0, 0, 335, 336, 0, 0, 337,
	338, 339, 340, 0, 341, 342, 344, 346, 343, 345,
	347, 349, 350, 348, 0, 351, 352, 355, 356, 354,
	0, 353, 0, 0, 0, 357, 0, 516, 358, 517,
	360, 361, 0, 362, 363, 364, 0, 0, 366, 367,
	368, 0, 0, 369, 370, 518, 0, 371, 0, 519,
	372, 365, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 381, 520, 382, 521, 383, 384, 0, 385, 0,
	386, 387, 388, 389, 390, 391, 392, 522, 393, 394,
	0, 395, 396, 397, 398, 399, 400, 0, 402, 403,
	404, 401, 405, 406, 407, 408, 0, 409, 0, 410,
	411, 412, 413, 523, 414, 0, 415, 419, 420, 421,
	422, 423, 424, 425, 0, 431, 432, 426, 428, 429,
	430, 427, 433, 434, 435, 0, 436, 416, 417, 437,
	438, 0, 439, 440, 524, 441, 442, 0, 443, 444,
	445, 446, 418, 447, 451, 452, 448, 449, 450, 525,
	0, 454, 455, 453, 0, 456, 457, 458, 459, 460,
	283, 461, 0, 462, 526, 527, 528, 529, 0, 469,
	0, 463, 464, 530, 465, 531, 0, 466, 467, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 476, 477,
	475, 479, 0, 480, 0, 478, 481, 482, 483, 532,
	533, 534, 0, 485, 484, 535, 561, 0, 215, 0,
	486, 487, 536, 488, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 492, 493, 232,
	494, 235, 233, 234, 495, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 496, 497, 498, 0,
	244, 499, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 500, 501, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 502, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 505, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 506, 0,
	507, 299, 0, 300, 301, 302, 303, 508, 509, 510,
	359, 0, 304, 305, 0, 306, 307, 308, 310, 0,
	0, 0, 309, 311, 318, 0, 0, 312, 511, 314,
	313, 315, 316, 317, 512, 0, 513, 0, 319, 0,
	514, 0, 320, 321, 322, 0, 323, 324, 0, 0,
	325, 326, 327, 328, 329, 0, 331, 330, 0, 332,
	515, 0, 333, 334, 0, 0, 335, 336, 0, 0,
	337, 338, 339, 340, 0, 341, 342, 344, 346, 343,
	345, 347, 349, 350, 348, 0, 351, 352, 355, 356,
	354, 0, 353, 0, 0, 0, 357, 0, 516, 358,
	517, 360, 361, 0, 362, 363, 364, 0, 0, 366,
	367, 368, 0, 0, 369, 370, 518, 0, 371, 0,
	519, 372, 365, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 381, 520, 382, 521, 383, 384, 0, 385,
	0, 386, 387, 388, 389, 390, 391, 392, 522, 393,
	394, 0, 395, 396, 397, 398, 399, 400, 0, 402,
	403, 404, 401, 405, 406, 407, 408, 0, 409, 0,
	410, 411, 412, 413, 523, 414, 0, 415, 419, 420,
	421, 422, 423, 424, 425, 0, 431, 432, 426, 428,
	429, 430, 427, 433, 434, 435, 0, 436, 416, 417,
	437, 438, 0, 439, 440, 524, 441, 442, 0, 443,
	444, 445, 446, 418, 447, 451, 452, 448, 449, 450,
	525, 0, 454, 455, 453, 0, 456, 457, 458, 459,
	460, 283, 461, 0, 462, 526, 527, 528, 529, 0,
	469, 0, 463, 464, 530, 465, 531, 0, 466, 467,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 476,
	477, 475, 479, 0, 480, 0, 478, 481, 482, 483,
	532, 533, 534, 0, 485, 484, 535, 539, 0, 215,
	0, 486, 487, 536, 488, 489, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 508, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 2880, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 2803, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 2801, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 2787, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 2442, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 508, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 570, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	1896, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 0, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 1311, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 393, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 299, 0, 300, 301, 302, 303, 1246, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 390, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 414, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 215, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 492, 493, 232, 494, 235, 233, 234,
	495, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 496, 497, 498, 0, 244, 499, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 500, 501, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 502, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	505, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 506, 0, 507, 299, 0, 300,
	301, 302, 303, 508, 509, 510, 359, 0, 304, 305,
	0, 306, 307, 308, 310, 0, 0, 0, 309, 311,
	318, 0, 0, 312, 511, 314, 313, 315, 316, 317,
	512, 0, 513, 0, 319, 0, 514, 0, 320, 321,
	322, 0, 323, 324, 0, 0, 325, 326, 327, 328,
	329, 0, 331, 330, 0, 332, 515, 0, 333, 334,
	0, 0, 335, 336, 0, 0, 337, 338, 339, 340,
	0, 341, 342, 344, 346, 343, 345, 347, 349, 350,
	348, 0, 351, 352, 355, 356, 354, 0, 353, 0,
	0, 0, 357, 0, 516, 358, 517, 360, 361, 0,
	362, 363, 364, 0, 0, 366, 367, 368, 0, 0,
	369, 370, 518, 0, 371, 0, 519, 372, 365, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 381, 520,
	382, 521, 383, 384, 0, 385, 0, 386, 387, 388,
	389, 390, 391, 392, 522, 1004, 394, 0, 395, 396,
	397, 398, 399, 400, 0, 402, 403, 404, 401, 405,
	406, 407, 408, 0, 409, 0, 410, 411, 412, 413,
	523, 414, 0, 415, 419, 420, 421, 422, 423, 424,
	425, 0, 431, 432, 426, 428, 429, 430, 427, 433,
	434, 435, 0, 436, 416, 417, 437, 438, 0, 439,
	440, 524, 441, 442, 0, 443, 444, 445, 446, 418,
	447, 451, 452, 448, 449, 450, 525, 0, 454, 455,
	453, 0, 456, 457, 458, 459, 460, 283, 461, 0,
	462, 526, 527, 528, 529, 0, 469, 0, 463, 464,
	530, 465, 531, 0, 466, 467, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 476, 477, 475, 479, 0,
	480, 0, 478, 481, 482, 483, 532, 533, 534, 215,
	485, 484, 535, 0, 0, 0, 0, 486, 487, 536,
	488, 489, 490, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 492, 493,
	232, 494, 235, 233, 234, 495, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 496, 497, 498,
	0, 244, 499, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 500, 501, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 502, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 505, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 506,
	0, 507, 0, 0, 300, 301, 302, 303, 508, 509,
	510, 359, 0, 304, 305, 0, 306, 307, 308, 310,
	0, 0, 0, 309, 311, 318, 0, 0, 312, 511,
	314, 313, 315, 316, 317, 512, 0, 513, 0, 319,
	0, 514, 0, 320, 321, 322, 0, 323, 324, 0,
	0, 325, 326, 327, 328, 329, 0, 331, 330, 0,
	332, 515, 0, 333, 334, 0, 0, 335, 336, 0,
	0, 337, 338, 339, 340, 0, 341, 342, 344, 346,
	343, 345, 347, 349, 350, 348, 0, 351, 352, 355,
	356, 354, 0, 353, 0, 0, 0, 357, 0, 516,
	358, 517, 360, 361, 0, 362, 363, 364, 0, 0,
	366, 367, 368, 0, 0, 369, 370, 518, 0, 371,
	0, 519, 372, 365, 373, 374, 0, 376, 377, 378,
	379, 0, 380, 381, 520, 382, 521, 383, 384, 0,
	385, 0, 386, 387, 388, 389, 0, 391, 392, 522,
	393, 394, 0, 395, 396, 397, 398, 399, 400, 0,
	402, 403, 404, 401, 405, 406, 407, 408, 0, 409,
	0, 410, 411, 412, 413, 523, 0, 0, 415, 419,
	420, 421, 422, 423, 424, 425, 0, 431, 432, 426,
	428, 429, 430, 427, 433, 434, 435, 0, 436, 416,
	417, 437, 438, 0, 439, 440, 524, 441, 442, 0,
	443, 444, 445, 446, 418, 447, 451, 452, 448, 449,
	450, 525, 0, 454, 455, 453, 0, 456, 457, 458,
	459, 460, 283, 461, 0, 462, 526, 527, 528, 529,
	0, 469, 0, 463, 464, 530, 465, 531, 0, 466,
	467, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	476, 477, 475, 479, 0, 480, 0, 478, 481, 482,
	483, 532, 533, 534, 0, 485, 484, 535, 0, 0,
	0, 0, 486, 487, 536, 488, 489, 490, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 1487, 0, 0, 0, 0, 0,
	1493, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 1535, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 0, 1510,
	1511, 1512, 1513, 0, 0, 0, 0, 1523, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 1535, 0, 1533, 0,
	0, 1515, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 1531, 0, 1532, 0, 0, 0, 0, 0, 0,
	1502, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 1509, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 3252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 1535, 0, 0, 0, 1524,
	1515, 1517, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	1531, 0, 1532, 0, 0, 0, 2975, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 1535, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 1524, 0,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 1508, 0, 0,
	0, 0, 0, 0, 0, 2654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 1509,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1511, 1512, 1513, 1487, 0, 0, 0, 0, 0, 1493,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 1535, 0, 0, 0,
	1524, 1515, 1517, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0,
	0, 1531, 0, 1532, 0, 0, 0, 2653, 0, 0,
	1502, 1503, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 0, 1523, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 1535, 0, 1533, 0, 0,
	1515, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 1509, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 1524,
	0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 2650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 1535, 0, 0, 0, 1524, 1515,
	1517, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 1531,
	0, 1532, 0, 0, 0, 2649, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 1485, 1486, 0,
	1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 1521, 1516, 0, 0,
	0, 0, 0, 0, 1488, 0, 0, 0, 0, 1534,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 1510,
	1511, 1512, 1513, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 0, 1535, 0, 0, 0,
	0, 1515, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 1532, 0, 0, 0, 0, 0, 0,
	1502, 1503, 0, 0, 0, 0, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 1508, 0, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 1509, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 1487, 0, 0, 0, 0, 0, 1493, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 1535, 0, 0, 0, 1524,
	1515, 1517, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498,
	1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0,
	1531, 0, 1532, 0, 0, 0, 2126, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 0, 1510, 1511, 1512,
	1513, 0, 0, 0, 0, 1523, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 1535, 0, 1533, 0, 0, 1515,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528,
	1529, 1530, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 1521, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 1534, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 1526, 0, 0, 0, 0, 0, 1524, 1507,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1504, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0,
	0, 3606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0, 1525,
	3525, 0, 1535, 0, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 1485,
	1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 1516,
	1526, 0, 0, 0, 0, 0, 1488, 1510, 1511, 1512,
	1513, 1534, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 1525, 0, 0, 1535, 1507, 0, 0, 0, 1515,
	1517, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 1508, 0, 0, 0, 3524, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1525, 0, 0, 1535, 0,
	0, 0, 0, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 1508, 0,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	1521, 1516, 1526, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 1534, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 1526, 0, 0, 0,
	3407, 0, 0, 1510, 1511, 1512, 1513, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 0,
	1535, 0, 0, 0, 0, 1515, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 1532, 0, 0,
	0, 0, 0, 0, 1502, 1503, 0, 0, 0, 0,
	0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	1508, 0, 0, 0, 3304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 1526, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 1487, 0, 0, 1493, 0,
	0, 0, 0, 1524, 1507, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1504, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1525, 0, 0, 1535, 3257, 0, 0, 0,
	1515, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 1523, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 1533, 1535, 127, 0,
	0, 0, 1515, 1517, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 60, 122,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 40,
	124, 0, 0, 0, 0, 0, 0, 1508, 0, 1514,
	0, 0, 0, 0, 39, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 1533, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 43, 0, 0, 1522, 0, 75, 0, 0,
	125, 0, 0, 1526, 0, 0, 41, 86, 0, 0,
	0, 0, 76, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528,
	1529, 1530, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 1514, 1521, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 1534, 77, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 1526, 0, 0, 1524, 1507,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1504, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0,
	0, 3256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	1524, 78, 0, 1499, 1500, 1506, 1527, 1505, 1501, 45,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1525,
	0, 0, 1535, 3255, 0, 0, 0, 1515, 1517, 0,
	56, 0, 0, 0, 0, 48, 150, 81, 0, 82,
	0, 46, 0, 0, 0, 126, 0, 1531, 0, 1532,
	0, 47, 0, 0, 0, 0, 1502, 1503, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 0, 1523, 0, 120, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 123, 1485, 1486, 0, 1518, 1519,
	1520, 1528, 1529, 1530, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 1533, 1521, 1516, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 1534, 0, 0,
	1522, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 1487, 185, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 178, 0, 0, 0, 0, 0, 1504,
	0, 179, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 1509, 3, 0, 0, 0, 1485,
	1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 1516,
	1526, 0, 0, 0, 0, 0, 1488, 1510, 1511, 1512,
	1513, 1534, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 1525, 0, 0, 1535, 1507, 0, 0, 0, 1515,
	1517, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 1532, 0, 0, 0, 0, 0, 0, 1502, 1503,
	0, 0, 0, 0, 0, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 1508, 0, 0, 0, 3011, 0,
	0, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1525, 0, 0, 1535, 0,
	0, 0, 0, 1515, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 1532, 0, 0, 0, 0,
	0, 0, 1502, 1503, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 1508, 0,
	0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	1521, 1516, 1526, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 1534, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497,
	1489, 1490, 1491, 1492, 1494, 1495, 1526, 0, 0, 0,
	2646, 0, 0, 1510, 1511, 1512, 1513, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 0,
	1535, 0, 0, 0, 0, 1515, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 1532, 0, 0,
	0, 0, 0, 0, 1502, 1503, 0, 0, 0, 0,
	0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501,
	1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495,
	1508, 0, 0, 0, 2645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1514, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 1526, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 1487, 0, 0, 1493, 0,
	0, 0, 0, 1524, 1507, 0, 1499, 1500, 1506, 1527,
	1505, 1501, 1504, 1498, 1496, 1497, 1489, 1490, 1491, 1492,
	1494, 1495, 1525, 0, 0, 1535, 2644, 0, 0, 0,
	1515, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 1523, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 1533, 1535, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 1533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528,
	1529, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 1521, 1516, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 1534, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 1526, 0, 0, 1524, 1507,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1504, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 0, 0, 0,
	0, 2643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1511, 1512, 1513, 0,
	0, 0, 0, 0, 0, 1493, 3720, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1525,
	0, 2601, 1535, 0, 0, 0, 0, 1515, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 1532,
	0, 0, 0, 0, 0, 0, 1502, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3719, 0, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 1521, 1516, 0,
	0, 0, 0, 2572, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 0, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	1526, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 1524, 0, 0, 1499, 1500,
	1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489, 1490,
	1491, 1492, 1494, 1495, 1525, 0, 0, 1535, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 1521,
	1516, 0, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 1534, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2236, 0, 1509,
	0, 0, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 1516, 1526, 0, 0, 2235, 0,
	0, 1488, 1510, 1511, 1512, 1513, 1534, 0, 0, 0,
	0, 0, 1493, 0, 2693, 0, 0, 2692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 1525, 0, 0, 1535,
	1507, 0, 0, 0, 1515, 1517, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 1532, 0, 0, 0,
	0, 0, 0, 1502, 1503, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 1523,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1508,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	1532, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 1508, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 1521, 1516, 1526, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505,
	1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 1526, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1512, 1513, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 0, 1535, 0, 0, 0, 0,
	1515, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 1524, 0, 0, 1499,
	1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1508, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1521, 1516, 0,
	0, 0, 0, 0, 0, 1488, 0, 0, 0, 0,
	1534, 0, 0, 1522, 845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1516, 1526, 0, 0, 0, 0, 0, 1488,
	1510, 1511, 1512, 1513, 1534, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 1525, 0, 0, 1535, 1507, 0,
	0, 0, 1515, 1517, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 0, 1524, 0,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 1508, 0, 0,
	0, 0, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 1533, 2699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 1525, 0,
	0, 1535, 0, 0, 0, 0, 1515, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 1532, 0,
	0, 0, 0, 0, 0, 1502, 1503, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 1508, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 1521, 1516, 1526, 0, 0, 2694, 0,
	0, 1488, 0, 0, 0, 0, 1534, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2990, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 0,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1526,
	0, 0, 0, 0, 0, 0, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 1535, 0, 0, 0, 0, 1515, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	1532, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 1508, 0, 0, 1485, 1486, 0, 1518,
	1519, 1520, 1528, 1529, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 1521, 1516, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 0, 1534, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	1516, 1526, 0, 0, 2647, 0, 0, 1488, 1510, 1511,
	1512, 1513, 1534, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 1525, 0, 0, 1535, 1507, 0, 0, 0,
	1515, 1517, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 0, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 0, 0, 1524, 0, 0, 1499,
	1500, 1506, 1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1508, 0, 0, 0, 0,
	0, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 1525, 0, 0, 1535,
	0, 0, 0, 0, 1515, 1517, 0, 0, 0, 0,
	0, 2661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 1532, 0, 0, 0,
	0, 0, 0, 1502, 1503, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 1508,
	0, 0, 1485, 1486, 0, 1518, 1519, 1520, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 1521, 1516, 1526, 0, 0, 0, 0, 0, 1488,
	0, 0, 0, 0, 1534, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 1524, 0,
	0, 1499, 1500, 1506, 1527, 1505, 1501, 0, 1498, 1496,
	1497, 1489, 1490, 1491, 1492, 1494, 1495, 1526, 0, 0,
	0, 0, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 1535, 0, 0, 0, 0, 1515, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 1532, 0,
	0, 0, 0, 0, 0, 1502, 1503, 0, 0, 0,
	0, 0, 1524, 0, 0, 1499, 1500, 1506, 1527, 1505,
	1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 1508, 0, 0, 1485, 1486, 0, 1518, 1519, 1520,
	1528, 1529, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 1521, 1516, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 1534, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 1485, 1486,
	0, 1518, 1519, 1520, 1528, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 1526,
	0, 0, 0, 0, 0, 1488, 1510, 1511, 1512, 1513,
	1534, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	1525, 0, 0, 1535, 1507, 0, 0, 0, 1515, 1517,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	1532, 0, 0, 0, 0, 0, 0, 1502, 1503, 0,
	0, 0, 0, 0, 1524, 0, 0, 1499, 1500, 1506,
	1527, 1505, 1501, 1523, 1498, 1496, 1497, 1489, 1490, 1491,
	1492, 1494, 1495, 1508, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1512, 1513, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 1535, 0, 0,
	0, 0, 1515, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 1532, 0, 0, 0, 0, 0,
	0, 1502, 1503, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 1508, 0, 0,
	1485, 1486, 0, 1518, 1519, 1520, 1528, 1529, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	1516, 1526, 0, 0, 0, 0, 0, 1488, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 1524, 0, 0, 1499,
	1500, 1506, 1527, 1505, 1501, 0, 1498, 1496, 1497, 1489,
	1490, 1491, 1492, 1494, 1495, 1526, 0, 0, 0, 0,
	0, 0, 1510, 1511, 1512, 1513, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 1535,
	0, 0, 0, 0, 1515, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 1502, 1503, 0, 0, 0, 0, 0,
	1524, 0, 0, 1499, 1500, 1506, 1527, 1505, 1501, 1523,
	1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494, 1495, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1698, 1705, 0, 1688, 1731, 1730, 0, 0, 0, 1690,
	1689, 0, 0, 0, 0, 0, 0, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 1728, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1703, 1716, 1718, 1719, 1720, 1715, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 1692, 1499, 1500, 1506, 1527, 1505,
	1501, 0, 1498, 1496, 1497, 1489, 1490, 1491, 1492, 1494,
	1495, 1729, 0, 0, 0, 1701, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 1711, 1709, 1710, 1713, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	1694, 1696, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 1733, 1734, 1735, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 1706, 1739,
}

var sqlPact = [...]int32{
	80727, -1000, -1000, -1000, -1000, -1000, -1000, 237, 223, 221,
	218, 213, 211, 209, 208, -1000, -1000, -1000, -1000, 207,
	-1000, -1000, 204, -1000, 202, 198, 193, 192, -1000, 190,
	189, 186, -1000, -1000, -1000, -1000, 174, 173, 172, 59162,
	1920, 71885, 62654, 1811, 53894, 71444, 53453, 71003, 70562, 170,
	-1000, 70121, 166, 164, 162, -1000, 1670, -1000, 161, 2005,
	44605, 159, 156, 155, 1901, 153, -1000, 152, -1000, -1000,
	8040, 1330, -1000, 150, -1000, 7471, 398, 61778, 2301, 148,
	147, 44163, 2269, 2327, -1000, -1000, 1669, -1000, -1000, 146,
	143, 138, 136, 135, 134, 132, 130, 129, -1000, 128,
	117, 116, 114, 113, 111, 109, -1000, 106, 105, 103,
	101, 98, 96, 92, 91, 90, 89, 88, 83, -1000,
	9706, 1588, 1485, 1477, 1473, 1464, 1450, 880, 82, 81,
	80, 79, 77, 75, 74, -1000, 73, 71, 69, 68,
	63, -1000, 62, 60, 191, 57, 54, 53, 47, 43,
	2451, -1000, 1374, 967, 20840, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 76670, 72320,
	42, -58, 41, -1000, 2690, 912, 36654, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 458, -1000, -1000,
	-1000, 314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1514, 688, -1000,
	-1000, -1000, 69680, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1916, -21, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	685, -1000, 1913, 210, 1713, -1000, -1000, -1000, -1000, -1000,
	72320, -1000, -1000, 3042, 3034, 1760, 682, 69245, -1000, 1405,
	-1000, 831, 23636, -1000, 1039, -1000, 23636, 313, -1000, -1000,
	-1000, 3033, 3029, 3026, 3016, -1000, -1000, 53012, 15216, 52571,
	52130, 68804, 14765, 58727, 48181, -1000, -1000, -1000, 39318, 1128,
	-1000, -1000, -1000, -1000, -1000, 9, 49065, 72320, -1000, 304,
	-1000, -1000, -1000, -1000, -1000, -1000, 30264, 884, 29788, 561,
	29312, 560, -1000, -1000, -1000, 76235, 3015, 3014, 1026, 3013,
	2627, 1550, 3007, 1456, 1110, 950, 3005, 3002, 3001, 3000,
	2995, 2994, 1233, 68363, 2428, 67922, 1438, 47730, 59162, 59162,
	2127, 67481, 1221, 1217, -1000, -1000, -1000, -1000, 2531, 2319,
	2317, 41527, -1000, 2989, 2988, 2986, 2985, 2984, 75800, 1524,
	2982, 2051, 2980, 2979, 2978, 2977, 2976, 2975, 2974, 2973,
	2970, -1000, 58286, 57845, 57404, 2738, 67040, 47279, -1000, -1000,
	-1000, 38414, 4809, 3702, 66599, 39767, 59162, 59162, -1000, -1000,
	30728, 118, -1000, -1000, -1000, 39318, 2389, -1000, 30728, 118,
	-1000, 72320, -1000, 2424, 1672, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2252, 1424, 2872, 46828, 1774,
	1230, 2704, 2514, 2513, 1296, 2016, 2512, 2504, 2491, 2483,
	2466, 1449, 2095, 528, 20364, 1309, 1242, 2463, 2434, 2883,
	1703, 1800, 51689, 2969, 2968, 2656, 2430, 2419, 2386, -1000,
	-1000, -1000, -1000, 1247, -1000, -1000, 54764, -1000, -1000, 1035,
	-1000, -1000, 1035, -1000, -1000, -1000, -1000, -1000, 1121, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1374, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1741, -1000, 1748, -1000,
	-1000, 2073, 2606, 2606, 2606, 2742, 442, 437, -1000, 191,
	-1000, -1000, 84101, -1000, -1000, 30728, 30728, 30728, 30728, 30728,
	1653, -1000, 681, -1000, -1000, 715, -1000, 680, 548, -1000,
	-1000, -1000, -1000, -1000, -1000, 678, 2886, -1000, -1000, -1000,
	-1000, -1000, 2854, -1000, 17520, -1000, -1000, -1000, 500, 676,
	30728, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 902, -1000, 303, 846, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 602, 1575, 600, 600, 600, -1000, -1000,
	935, -1000, -1000, -1000, 331, 593, 323, 591, -1000, -1000,
	-1000, -1000, 2421, 672, 670, -1000, 669, 665, 661, 660,
	657, -1000, -1000, -1000, 656, 655, 652, 651, 650, 646,
	644, 643, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	934, -1000, 640, 639, 638, 637, 634, 633, 619, 616,
	614, -1000, -1000, 6, 72320, -1000, 458, 6, -1000, -1000,
	613, -1000, 24100, 24100, 24100, -1000, -1000, 1912, 30728, -1000,
	2498, -1000, 18, 18, 787, 37532, -1000, 35772, 787, 480,
	723, 41086, -1000, 2379, -1000, -1000, 612, 296, -1000, -1000,
	2377, 72320, 15665, 72320, 59162, 59162, 59162, 2580, 30728, -1000,
	-1000, 46377, 72320, 59597, 2821, 84875, 46377, 72320, 2418, -1000,
	-1000, -1000, 72320, -1000, 30728, -1000, 2820, 1384, 49504, 2763,
	-4, -1000, -1000, -1000, -1000, -1000, -1000, 2028, 2054, 1010,
	1941, 1549, -1000, 23636, 2619, -1000, -1000, -1000, 291, 15665,
	-1000, -1000, -1000, -1000, -1000, 2167, 2556, 1119, -1000, 1940,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1527,
	2552, -1000, 1848, 2551, 1526, -1000, -1000, 1812, -1000, -1000,
	2645, -1000, -1000, 1710, 2548, 24, -1000, -1000, 893, 2541,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 784,
	-1000, 48630, 39318, 49065, 4, -1000, -1000, -29, -1000, 14314,
	84101, -1000, -1000, -1000, 84101, 792, -1000, -1000, 2540, -1000,
	84101, 789, -1000, -1000, 2536, -1000, 1985, 2967, -1000, -1000,
	2966, -1000, 2964, 2963, 2961, -1000, 1435, 1569, 2960, -1000,
	2959, -1000, -1000, -1000, -1000, -1000, -1000, 56963, 1898, -1000,
	-1000, 56081, -1000, 1984, -1000, -1000, 56522, 940, -1000, 893,
	1982, -1000, 874, -1000, 2958, 2737, 2147, 893, 1981, -1000,
	-1000, -1000, -1000, -1000, 42405, -1000, 42405, -1000, 42405, -1000,
	1343, -1000, 75365, 18, 18, 2854, -1000, -1000, -1000, -1000,
	-1000, 2532, 2955, 2954, 2952, -1000, 72320, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 181, 2530, -1000, -1000,
	181, 2528, -1000, 181, 2527, -1000, 61337, -1000, -1000, 1822,
	2518, -1000, -38, 2517, -1000, -1000, -5, -1000, -1000, -1000,
	912, -1000, 37973, -1000, 37973, 66158, 48630, 858, 677, 43722,
	84101, -1000, -129, -1000, 39318, 84101, -1000, 48630, 56081, -1000,
	65717, 55646, -1000, -1000, 1224, 2086, -1000, -1000, -1000, 858,
	48630, 48630, 48630, -1000, 65276, -1000, -1000, 1705, 1404, 2652,
	1684, 59162, -1000, 1565, -1000, -1000, -1000, 2685, 2417, -1000,
	45938, 60902, -1000, 60467, -1000, 60032, -1000, 59162, -1000, 59162,
	-1000, 2951, 2950, 2948, -1000, 2947, 2674, 84101, 2667, -1000,
	2553, 1460, 1437, 72320, -1000, -1000, 72320, -1000, 72320, -1000,
	-1000, -1000, -1000, -1000, 2023, -1000, -1000, -1000, -1000, 59162,
	-1000, -1000, -1000, -1000, -1000, -1000, 2416, -1000, 1451, -1000,
	1517, -1000, 1220, -1000, -1000, 183, -1000, -1000, -4, -1000,
	74930, -1000, 2073, -1000, 72320, -1000, 2055, 2408, 2415, 1275,
	1927, 2135, -1000, 28836, 2102, 33048, 1938, 191, -1000, -1000,
	191, 191, 23172, -1000, -1000, 84875, 84875, 15665, 1163, 30728,
	30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728,
	30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728,
	30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728, 30728,
	30728, 30728, 30728, 30728, 1942, 30728, 1117, 30728, 30728, 30728,
	30728, 1866, -1000, -1000, 1704, 505, 1683, -1000, 2855, 2855,
	2855, 84437, 84437, 575, 2945, 715, -1000, 30728, -1000, 118,
	30728, 16116, -1000, -1000, -1000, 437, 9568, 1915, -1000, 434,
	16592, -1000, -1000, -1000, 17520, 548, 28360, 30728, 924, 84101,
	1493, 2868, 13865, 2426, 2250, -1000, 2875, -1000, -1000, 2868,
	-1000, -1000, -1000, -1000, 2868, 1155, 1140, 2868, -1000, 2868,
	2868, 611, 718, 686, 19888, 19412, 18936, 18460, 667, 30728,
	30728, 30728, 30728, 30728, 30728, 30728, 30728, -1000, 27896, 27420,
	26944, 33512, 26468, 30728, 17984, 25992, 25516, 72320, 6, 2818,
	30728, 163, -1000, 82733, -1000, 163, 163, 609, -6, 84101,
	2171, 2171, 37093, 1990, 1686, 1686, 1686, -1000, 787, 10247,
	787, 64402, 1675, 787, 787, 285, 310, 432, 35333, 2498,
	64402, 697, 607, 38, 37, 35, -1000, -1000, 33, 28,
	-1000, -1000, 59162, 605, 16116, 15665, 1270, -18, 265, 2108,
	2106, 2104, -1000, 2103, 1416, -23, 1113, -39, -1000, 409,
	-42, -1000, 920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 933, 604, 603, 350, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 602, 1575, 600, 600, 600,
	-1000, -1000, -1000, 331, 593, 323, 591, -1000, -1000, -1000,
	-1000, -1000, -1000, 2376, -29, 59597, 820, -59, 1038, -4,
	-1000, -1000, -1000, 49504, 1035, -1000, 1805, -1000, -1000, -1000,
	-1000, -1000, -1000, 1248, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 902, -1000, -1000, -1000, -1000, -1000, -1000, 2864, 2861,
	5, -1000, -1000, 15665, -1000, -12, 1459, -1000, 51248, 1862,
	2650, 2634, 1335, -1000, 1293, 2740, 54764, 2767, 2810, 229,
	-1000, 2374, -1000, -1000, 829, 1443, 1112, 54764, 1848, -1000,
	84875, -1000, 2168, 2739, 1211, 1209, 1211, 1211, 1213, -1000,
	54764, 1109, -1000, 1097, -1000, -20, 2766, 2803, 199, -1000,
	2373, 1096, -1000, -1000, 59162, 15665, -1000, 1326, -1000, 48630,
	2137, -1000, -61, 784, 4, 49065, 72320, 258, -1000, 30728,
	118, 30728, 118, 2516, -1000, -1000, -1000, -1000, -1000, 2941,
	1548, 2046, -1000, -1000, -1000, 586, 1980, 2368, 72320, 2114,
	-1, 59162, -1000, 2515, 1848, 1975, -1000, -1000, 55205, -1000,
	2510, 654, 2938, -1000, 74495, -1000, 2660, 1142, 2509, 999,
	819, 2816, -1000, 819, 42844, -1000, 72320, -1000, -1000, 72320,
	-1000, -1000, -1000, 2937, -1000, 59162, -1000, -1000, 59162, -1000,
	59162, -1000, 59162, 177, 2507, -1000, -1000, 72320, 48630, 48630,
	1442, 50378, -62, -64, 430, -1000, 64841, 72320, 997, 50813,
	72320, 2609, 858, 39318, -129, 858, 858, 784, -1000, 784,
	-1000, 59162, 2414, -1000, 858, 858, 858, -1000, -1000, -1000,
	-1000, 2936, 2933, -1000, -1000, -1000, 882, 59162, 72320, 59162,
	-1000, -1000, 72320, -1000, 72320, -1000, 882, 72320, 882, 72320,
	882, 72320, -1000, -1000, -1000, -1000, -1000, -1000, 118, 30728,
	1359, -1000, 2413, -1000, 2409, -1000, 59, -1000, -1000, -1000,
	-1000, 1784, 59162, 59162, 59162, 59162, 72320, 59162, -1000, 54764,
	-1000, 2055, 2408, -1000, -1000, -1000, -1000, -1000, -1000, 1266,
	1736, -1000, 2079, -1000, 1319, -1000, -1000, -1000, 84101, 33976,
	-1000, -1000, 84101, 1428, -1000, 32584, 32120, -1000, -1000, 1461,
	59162, 2117, -1000, 2117, 2, -1000, 82397, 2078, 59162, -1000,
	-1000, -1000, -1000, -1000, 822, 488, 488, 1127, 1127, 1127,
	1127, 2756, 1178, 243, 5497, 5613, 5613, 5170, 5170, 5170,
	5170, 5170, 5613, 1138, 469, 469, 1138, 1138, 1138, 1138,
	1138, 469, 469, 469, 5613, 5613, 5613, 84437, 84333, 8927,
	30728, 30728, 1093, 1694, 505, 8140, 30728, 9273, 9273, 9273,
	9273, -1000, 1936, -1000, -1000, -1000, -1000, 2347, 585, 33512,
	33512, -1000, -1000, -1000, -1000, 17056, 30728, -1000, -1000, -1000,
	-1000, 25040, -1000, -1000, 81807, -249, 429, -127, -15, -1000,
	30728, 30728, 30728, 419, -1000, 255, 30728, 72320, -1000, 78976,
	694, -208, -1000, -67, 1252, -1000, 30728, -1000, -1000, 1091,
	-1000, 1090, 1088, 1087, -1000, 584, 418, -1000, 254, -1000,
	1656, 581, 576, 417, -70, 407, 811, 790, 406, 402,
	394, 30728, -1000, -1000, -1000, -1000, -1000, 81725, -1000, -1000,
	81430, -1000, -1000, 81198, -1000, -1000, 81094, -1000, -1000, -1000,
	83869, 78744, 78475, 78396, 9088, 78127, 77895, -72, 392, -1000,
	2345, -127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	391, -1000, 389, -1000, 83765, -127, 388, 6934, -1000, 33512,
	33512, 33512, -1000, 386, -1000, 82629, -1000, 83533, 24576, 24576,
	24576, 385, 83301, 30728, -127, -75, -1000, -77, -1000, -1000,
	573, -78, 918, 24100, 36213, 15665, -1000, 918, 918, 30728,
	-1000, 30728, 2091, -1000, -1000, -1000, 2090, 1611, 2171, 37093,
	-1000, -1000, -1000, -1000, 64402, -1000, 2854, 2372, -1000, 64402,
	-1000, -1000, 72320, 458, -1000, 64402, 64402, 15665, 787, -1000,
	787, 64402, 516, -1000, -1000, -1000, -1000, -1000, 378, 40206,
	-15, 252, 858, -1000, 15665, 2213, 2213, 2213, 2213, -1000,
	-1000, 72320, 2833, -1000, 1593, -1000, 84875, -1000, 712, 1030,
	559, -1000, 2868, 2868, -1000, 2868, 72320, 95, 23636, -1000,
	1035, -1000, -1000, 1362, -1000, 1553, -1000, 1131, -1000, -1000,
	-1000, -1000, 23636, -1000, 2093, 72320, 72320, 59162, -1000, -1000,
	1974, 74060, 1973, 84875, 72320, -1000, -1000, 558, 556, 2075,
	2065, 986, 72320, 72320, 2064, 73625, 73190, 72320, 1603, 30728,
	1872, 1721, 118, 118, -1000, -1000, 118, 553, 1135, 59162,
	59162, 59162, 1523, -1000, -1000, -1000, -1000, -1000, 54329, -1000,
	-1000, 2874, 2873, -1000, 1211, -1000, -1000, -1000, 1211, 1848,
	1498, 59162, 72320, 1600, 118, 118, -1000, -1000, 118, 552,
	15665, 1576, -1000, 1326, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 45503, 992, 893, 858, 2339, -1000, 2137, -1000, -1000,
	13416, 84101, -1000, 84101, -1000, 72320, -1000, 939, 72320, 50813,
	844, 2502, 41966, -29, 858, 48630, 59162, -1, 72320, -1000,
	1848, 2492, 458, 1971, -1000, -1000, 48630, 2932, 551, 2930,
	-1000, 1895, 1970, -1000, -1000, 72755, 2569, 743, 72320, 918,
	37093, 1528, -1000, 40647, 961, 72320, 1431, 93, -1000, -1000,
	-1000, 46, 72320, -1000, 2928, -1000, -1000, 181, 181, 181,
	-1000, 59162, 59162, 1822, -1000, -38, -1000, -1000, 1442, 1442,
	858, -2, 550, -1000, 762, 757, 38869, 48630, -83, -1000,
	-1000, -1000, -1000, -1000, 59162, 72320, 671, 2146, 72320, -85,
	-1000, 244, 549, -1000, -1000, 858, 2336, -1000, -1000, 906,
	-1000, 1180, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17, -29, -29, -1000, 882, -1000, 882, -1000, 882,
	-1000, 84101, -1000, 1354, 1351, 72320, -1000, 15665, 72320, 59162,
	15665, 59162, 2407, 2405, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1009, -1000, 1428, 1735, -1000, 548, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2017, -1000, -3,
	23172, 1944, -1000, -1000, 59162, 16, 30728, 30728, 6392, 5848,
	30728, 33512, 33512, -1000, 30728, 5194, -1000, -1000, -1000, -1000,
	-1000, 2333, 547, 30728, 84875, 4109, 3914, -1000, 377, 77626,
	1138, -1000, 30728, -1000, 373, 22708, -1000, 82965, -34, -86,
	-1000, 10708, -127, -91, -1000, -1000, 702, -1000, 2558, -1000,
	30728, 83197, 1998, 1871, 1482, 1375, 2868, 2885, 12967, -1000,
	43283, 922, 1695, -1000, -1000, 2868, 783, -1000, -1000, -1000,
	783, -1000, 80862, -1000, -1000, -1000, -1000, 84875, 84875, 30728,
	30728, -1000, 30728, 30728, 30728, -1000, -1000, 30728, -1000, -1000,
	2326, 30728, -1000, 84875, 84875, 33512, 33512, 33512, 33512, 33512,
	33512, 33512, 33512, 33512, 33512, 33512, 33512, 33512, 33512, 33512,
	33512, 33512, 33512, 33512, 2130, 33512, 2849, 2849, 2849, -1000,
	2404, 2326, 30728, 30728, 84875, 372, 367, 366, -1000, 30728,
	-127, -1000, -1000, 1442, -1000, 2245, -1000, 30728, -1000, -148,
	-1000, 2498, -1000, -1000, 2245, 2245, -93, 84101, 37093, 37093,
	-1000, 546, 30728, 2088, -1000, -1000, 693, -242, -1000, 755,
	-1000, -1000, -1000, -1000, -1000, 458, -1000, -1000, -1000, 241,
	64402, 64402, 690, -1000, -94, -1000, -1000, -99, -1000, 2814,
	365, 15665, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-29, 1711, 2884, -1000, 2871, 701, 687, 2868, 363, 362,
	360, -29, 72320, -1000, -4, -1000, -1000, -1000, 30728, -1000,
	-1000, 2644, 1084, 1076, -1000, 2490, -1000, 1968, -1000, 965,
	-1000, 1408, -1000, 30728, 30728, 545, 544, 2925, 1601, 2924,
	994, 2489, 1822, 2487, 1822, -1000, -1000, 838, -1000, 84101,
	538, 537, -1000, -12, 1402, 905, -1000, -1000, 30728, 30728,
	63967, -1000, 380, 2645, 14, -1000, 1073, -1000, -1000, -1000,
	-1000, 1848, 1072, -1000, -1000, -1000, 904, -1000, -1000, 30728,
	-1000, -20, 1069, -1000, -1000, -1000, 45054, -1000, -1000, 48630,
	858, -1000, 2921, 2916, 2909, 356, -100, -28, 84875, 2807,
	1743, 536, 59162, 815, -1000, 2854, -1000, -1000, -1000, -1000,
	59162, 2805, 2482, 893, -1000, 2908, -1000, 59162, 2481, 1892,
	1964, 2036, 743, 49943, -1000, 893, 1695, -45, -1000, 1431,
	22232, 2639, -101, -1000, -1000, -1000, 918, 42844, 37093, 30728,
	2907, -102, -1000, -1000, -1000, -1000, -1000, 177, -1000, -1000,
	-1000, -1000, 63532, 63532, 48630, 48630, 48630, 858, 72320, 72320,
	50813, 2904, 535, 72320, 72320, 533, -1000, 72320, 72320, 2901,
	48630, -1000, 118, -1000, 1707, 59162, 12518, -1000, -1000, -1000,
	-1000, -1000, 882, -1000, -1000, 1608, 1931, 1608, 1447, 1439,
	-1000, 1718, -1000, -1000, -1000, -1000, 2157, 2669, 15665, 2775,
	9273, 30728, 30728, 4727, 1081, 433, 9273, 30728, 30728, 84875,
	84669, -107, 30728, 30728, -1000, 30728, 668, 84101, 2882, 30728,
	348, 346, -1000, -1000, -1000, 2856, -1000, -1000, -1000, 84101,
	30728, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 343, -1000,
	240, -1000, -1000, -1000, 77105, -1000, 30728, 340, 335, -1000,
	-1000, -1000, 334, 333, 77547, 8511, 80567, 80485, 80190, 84101,
	2404, 84101, -1000, -1000, 865, 865, 1196, 1196, 1196, 1196,
	2849, 479, 876, 713, 845, 845, 845, 635, 988, 988,
	845, 845, 845, 2311, 2096, 529, 6678, -1000, -1000, 84101,
	84101, 332, -1000, -1000, -1000, -127, 328, 2169, 2728, 84101,
	-1000, 37093, 2169, 2169, -1000, -1000, 1611, 72320, 84101, 37093,
	-1000, 2372, -1000, 11167, -1000, 15665, -1000, -1000, -1000, -1000,
	2854, -1000, 40206, -1000, 527, -1000, 200, -1000, -1000, 636,
	2900, 700, 326, -1000, -1000, -1000, -29, 84101, 72320, 72320,
	72320, 2480, -1000, 3597, -1000, 986, 79958, -109, -1000, 82397,
	30728, 72320, -1000, -1000, 1676, 2129, 1019, -1000, 2688, 72320,
	-1000, 72320, -1000, -1000, 72320, 72320, 59162, 2459, -110, 84101,
	-37, -1000, 754, -1000, 1194, -1000, 12069, 59162, 59162, 2456,
	-115, 15665, -1000, -1000, -38, -1000, -1000, -1000, -1000, 2133,
	-1000, 62213, 1826, 118, -1000, 63093, 2899, 520, -1000, 1699,
	-1000, 517, 1848, 118, 59162, -1000, -1000, 978, 15665, 59162,
	2479, 2042, 743, 49943, -1000, 1142, 2135, -1000, -43, -1000,
	526, 118, 1695, -1000, -45, 84101, -1000, 753, -1000, -1000,
	-117, -1000, -1000, 320, -1000, 2605, 2597, -1000, -1000, 30728,
	515, 514, 72320, 2596, -1000, -1000, -118, -1000, 2097, -1000,
	-1000, -1000, -1000, -1000, 15665, 1387, -1000, 513, 512, -1000,
	-1000, -1000, -1000, 2669, 9273, 9273, 30728, 30728, 30728, 9273,
	84669, -120, -1000, 9273, 9273, -127, -1000, -1000, 82965, -1000,
	-1000, -1000, 84101, -1000, 11620, 1630, -1000, 79854, -1000, -1000,
	-1000, -1000, 30728, 30728, -1000, -1000, -1000, -1000, -1000, 33512,
	2285, 511, 84875, -1000, -1000, 877, 30728, 30728, 2498, 877,
	877, -1000, -126, -1000, -1000, -1000, 2854, 200, -1000, -1000,
	2898, 15665, 699, -1000, 2897, -1000, -1000, -1000, -1000, 72320,
	-1000, 72320, -1000, 15665, 72320, 2258, 1957, -1000, -1000, 2059,
	510, 33512, 59162, 801, 2290, 1566, 30728, 1944, -128, -131,
	1956, -1000, -1000, 1953, 30728, -1000, 84875, 509, 1822, 1822,
	-133, -134, -1000, 30728, 1066, 72320, 21768, -1000, 2895, 2645,
	-1000, -1000, 30728, 1062, -1000, 1600, 2185, -1000, -1000, -1000,
	-1000, 2058, -1000, -1000, 72320, 2057, 860, -136, -1000, 747,
	745, -1000, 50813, 844, 832, -1000, -1000, -1000, 458, 508,
	72320, 1889, 506, 15665, -1000, 743, 49943, -1000, 2569, 1431,
	-1000, 2577, 72320, 2632, -1000, 2135, 505, -1000, 858, 504,
	503, -139, 30728, 30728, -141, 501, 858, -57, -1000, 794,
	791, -1000, -1000, 59162, 59162, 30728, 30728, -1000, 9273, 9273,
	9273, -1000, 319, -1000, -1000, 1695, 2726, -1000, 79622, 79324,
	5020, 33512, 84875, -142, -1000, 72320, 84101, -127, -1000, -1000,
	-1000, 489, -1000, 2894, -1000, -1000, 2447, -1000, -1000, -1000,
	72320, 1963, -1000, 984, 30728, 6678, 497, 30728, -1000, -1000,
	2131, 2283, 2133, 495, -1000, -1000, -1000, -1000, -1000, 974,
	1481, -1000, -1000, 84101, 2694, 30728, -1000, -1000, 493, 492,
	84101, 486, 741, 2270, -1000, -1000, -1000, 84101, 485, 844,
	-1000, 1647, 1826, 467, -1000, -1000, 1751, 2145, -1000, 63093,
	34425, 34425, 318, 2804, 832, -1000, 2829, -1000, 2785, 30728,
	-1000, 59162, 30728, 1873, 49943, -1000, 2036, -1000, 1172, -147,
	72320, 1431, -1000, -1000, 48630, 48630, 974, -149, -152, -1000,
	48630, -1000, 2097, -1000, 72320, -1000, 72320, -1000, -1000, -160,
	-161, -1000, 1816, 30728, -1000, -1000, 5020, -166, -1000, -88,
	-1000, 2772, -1000, -1000, -1000, -1000, 2468, 2238, 79245, 2009,
	72320, 287, 2274, -1000, -1000, 1600, 72320, 2133, 2236, 59162,
	980, 15665, -167, 1608, 1608, 30728, 21304, 1644, 30728, 1751,
	59162, 72320, -1000, 2682, -1000, 2595, -1000, -1000, -1000, 2133,
	118, -1000, -1000, 118, -168, 978, -180, 59162, -1000, 2042,
	1321, -1000, 918, -1000, -1000, -185, -186, 1566, 974, -1000,
	-187, -1000, -188, -193, -1000, -1000, 317, 31656, 31656, 31656,
	-127, -1000, 72320, 466, 2446, 873, -1000, 1799, 1568, 311,
	942, -1000, -1000, 2290, -196, -1000, 861, 458, -1000, 30728,
	-1000, 974, -198, -1000, 960, -201, -1000, 958, -207, -1000,
	2267, -1000, -209, -1000, 457, -215, -1000, -1000, 2082, -1000,
	1600, 860, -1000, 974, 456, 1566, 455, -1000, 42844, -1000,
	858, 858, 2133, 1566, 858, -1000, -1000, -1000, 2484, -1000,
	34874, 1794, 1426, 82102, 2484, 2484, -1000, -1000, 72320, 2751,
	-1000, 1863, 1827, 1318, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2750, 2009, 84101, 2133, -1000, 1608, 2170, -1000,
	1608, 2264, -1000, 1613, -1000, 72320, -1000, 72320, 1396, 1385,
	2892, 844, 1751, 1566, 30728, 2133, 30728, -194, -1000, -1000,
	1600, 2133, -1000, -1000, 1543, 2780, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 740, -1000, 2583, -1000, 1008, 1758,
	1758, 735, 1799, -1000, -1000, 449, -1000, 448, -1000, -217,
	-1000, -1000, 2891, -1000, 1751, -1000, 2133, -218, 1600, -224,
	-1000, -1000, 1600, 1420, -1000, -1000, 1671, 31192, 30728, -1000,
	2837, -1000, -1000, 2105, -1000, 30728, 2290, 30728, 30728, 1792,
	-1000, -1000, 1600, 974, 917, 1566, -1000, -1000, -1000, -1000,
	84101, -1000, -1000, -1000, 84101, -1000, -232, -233, -1000, -1000,
	-1000, 917, 1566, -1000, 2890, 2133, 1600, 1043, -1000, 2133,
	-1000, 1600, -1000, 446, 1600, 917, 30728, 917, -1000, -234,
	-1000, 1600, -1000,
}

var sqlPgo = [...]int16{
	0, 3496, 3494, 3493, 3491, 3490, 3489, 3488, 3486, 3484,
	3483, 3478, 3477, 3476, 3475, 3474, 3471, 3470, 3469, 3468,
	3467, 3465, 3464, 3462, 3458, 3456, 3455, 3454, 3452, 3450,
	3449, 3448, 3447, 3443, 3442, 3440, 3437, 3432, 3428, 3426,
	3425, 3423, 3422, 3418, 3417, 3412, 3410, 35, 3406, 3403,
	3398, 3393, 3389, 3387, 3385, 3383, 3380, 3379, 3378, 3370,
	3368, 3366, 3362, 3360, 3358, 3357, 39, 3355, 230, 3354,
	3347, 3346, 3344, 3343, 3342, 3341, 3339, 3335, 229, 3334,
	126, 3333, 3332, 3331, 3330, 3329, 226, 3327, 3325, 3324,
	3323, 3322, 3321, 3319, 3318, 165, 202, 3315, 297, 3314,
	3313, 3312, 3311, 3310, 3309, 3308, 3306, 3304, 3302, 204,
	3301, 224, 3300, 3299, 3298, 3293, 3289, 3288, 3285, 3281,
	3280, 3278, 3276, 3274, 3273, 3272, 3271, 3270, 3269, 3268,
	3267, 3266, 3265, 3264, 3263, 3262, 3261, 3260, 3259, 3258,
	237, 152, 3256, 3255, 223, 221, 3254, 3253, 135, 101,
	99, 141, 3251, 91, 50, 3250, 15, 131, 212, 6480,
	191, 3246, 3244, 3243, 207, 155, 3242, 192, 3236, 3235,
	3234, 3231, 83, 66, 149, 138, 134, 133, 260, 3229,
	3227, 71, 60, 37, 30, 3225, 3224, 3223, 1980, 95,
	3221, 217, 194, 130, 3220, 3219, 3218, 1849, 3214, 184,
	80, 106, 44, 92, 3213, 116, 26, 3210, 143, 56,
	3209, 129, 72, 34, 5693, 5122, 3208, 93, 232, 73,
	77, 188, 175, 128, 198, 167, 140, 1786, 3207, 209,
	3206, 119, 127, 3205, 3202, 3201, 55, 160, 75, 3200,
	7, 3, 12, 137, 11, 94, 16, 3199, 14, 3198,
	3197, 3195, 3194, 33, 132, 3192, 115, 57, 3191, 17,
	3190, 23, 178, 3189, 200, 102, 3188, 3187, 214, 166,
	156, 3185, 18, 182, 3184, 3183, 3182, 3181, 3180, 108,
	24, 100, 3179, 3177, 110, 197, 159, 3176, 51, 3175,
	139, 74, 114, 228, 97, 183, 90, 177, 145, 190,
	3173, 3172, 3166, 154, 3163, 3155, 168, 150, 3153, 3150,
	163, 233, 32, 62, 193, 63, 153, 123, 3147, 162,
	3146, 3145, 3141, 227, 146, 174, 1, 4, 85, 105,
	31, 10, 187, 121, 205, 86, 3134, 3129, 1865, 1524,
	41, 111, 87, 59, 98, 120, 220, 53, 3133, 3132,
	1815, 3131, 3130, 3124, 3123, 148, 3121, 3119, 3118, 104,
	112, 173, 3117, 122, 70, 13, 89, 208, 222, 88,
	176, 169, 211, 3116, 147, 3115, 69, 113, 3114, 161,
	206, 96, 3113, 170, 117, 3111, 196, 3110, 3109, 3107,
	3105, 3104, 3103, 3102, 136, 3098, 118, 3097, 3096, 219,
	157, 3095, 218, 144, 186, 79, 36, 3094, 65, 215,
	3093, 158, 38, 3092, 3459, 58, 0, 6726, 4845, 5956,
	3090, 4375, 3089, 164, 103, 3088, 3087, 3086, 76, 3085,
	64, 3084, 3083, 54, 3082, 19, 8, 9, 20, 21,
	1325, 1070, 3081, 3080, 84, 107, 124, 3079, 231, 181,
	3078, 3077, 3075, 67, 3073, 25, 3072, 29, 3071, 3070,
	27, 6, 22, 3069, 3067, 195, 3066, 199, 3064, 3062,
	2799, 109, 3061, 3060, 216, 81, 3058, 213, 3057, 2746,
	142, 171, 3056, 3055, 3054, 3053, 210, 3052, 3051, 28,
	5, 3050, 3049, 172, 2, 2663, 3048, 3047, 68, 3046,
	3045, 151,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 8, 8, 8,
	35, 35, 9, 9, 9, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 14, 14, 25, 25,
	15, 15, 27, 27, 16, 16, 28, 28, 474, 474,
	19, 30, 20, 31, 13, 475, 475, 475, 475, 24,
	21, 32, 22, 22, 22, 22, 22, 152, 152, 152,
	152, 18, 18, 26, 26, 175, 175, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 473,
	473, 177, 177, 176, 171, 171, 476, 476, 178, 178,
	178, 180, 180, 36, 36, 36, 94, 94, 94, 95,
	95, 96, 96, 153, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 82, 82, 414, 414, 415, 415, 148,
	148, 149, 149, 149, 149, 150, 150, 151, 151, 151,
	50, 38, 38, 38, 38, 38, 38, 38, 39, 39,
	39, 39, 40, 40, 40, 40, 40, 40, 41, 41,
	41, 41, 41, 41, 48, 48, 48, 48, 141, 141,
	51, 51, 51, 51, 51, 51, 51, 51, 55, 55,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 484, 484,
	485, 485, 486, 486, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 63, 63, 255, 255, 230, 230, 64, 64, 64,
	65, 65, 66, 66, 52, 52, 467, 467, 269, 269,
	378, 378, 68, 68, 289, 289, 69, 69, 69, 69,
	69, 69, 70, 70, 70, 70, 70, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 76, 76, 76,
	77, 77, 77, 75, 75, 75, 73, 73, 73, 72,
	72, 72, 74, 74, 74, 270, 270, 78, 78, 78,
	78, 78, 78, 78, 78, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	380, 380, 79, 79, 79, 348, 348, 83, 83, 83,
	304, 304, 84, 84, 84, 84, 84, 85, 85, 85,
	85, 97, 97, 97, 97, 470, 470, 262, 262, 191,
	191, 191, 191, 90, 90, 90, 90, 91, 91, 91,
	92, 92, 146, 146, 103, 103, 103, 103, 103, 102,
	102, 102, 102, 102, 102, 42, 42, 42, 43, 43,
	44, 44, 45, 45, 46, 46, 47, 47, 47, 47,
	47, 105, 105, 480, 480, 107, 104, 104, 104, 106,
	106, 106, 106, 108, 109, 109, 109, 109, 109, 109,
	109, 109, 110, 110, 408, 408, 278, 278, 406, 406,
	422, 422, 407, 407, 234, 234, 234, 234, 234, 235,
	235, 235, 413, 413, 413, 413, 413, 413, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 147, 147, 147, 147, 130, 130, 130, 140,
	140, 140, 140, 140, 140, 140, 133, 133, 133, 120,
	120, 112, 112, 112, 112, 112, 116, 116, 116, 116,
	116, 116, 116, 116, 113, 113, 122, 122, 122, 122,
	122, 117, 117, 119, 119, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 114, 114, 114, 114, 124, 124,
	124, 124, 311, 311, 311, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 136, 136, 136, 136, 136,
	136, 362, 362, 131, 131, 131, 131, 135, 135, 135,
	135, 294, 294, 128, 128, 128, 129, 129, 129, 134,
	134, 132, 132, 137, 137, 137, 137, 115, 115, 115,
	488, 488, 488, 138, 138, 127, 127, 139, 139, 139,
	139, 139, 139, 139, 139, 126, 126, 126, 125, 125,
	125, 125, 118, 468, 468, 465, 465, 465, 465, 465,
	465, 465, 466, 466, 469, 469, 88, 88, 88, 58,
	58, 58, 59, 59, 156, 156, 156, 156, 240, 240,
	240, 240, 154, 154, 155, 155, 60, 60, 489, 489,
	489, 477, 477, 477, 478, 478, 478, 478, 478, 478,
	236, 236, 237, 237, 329, 329, 329, 329, 329, 241,
	241, 179, 179, 179, 244, 245, 245, 242, 242, 243,
	243, 243, 247, 247, 246, 249, 249, 248, 328, 429,
	429, 431, 431, 431, 431, 431, 431, 431, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 427,
	427, 427, 428, 423, 423, 424, 424, 424, 424, 424,
	238, 238, 239, 239, 239, 239, 425, 426, 260, 260,
	365, 430, 430, 432, 432, 434, 490, 490, 490, 490,
	490, 490, 491, 491, 491, 327, 327, 326, 326, 253,
	253, 435, 435, 435, 435, 436, 436, 436, 436, 436,
	439, 438, 437, 437, 437, 437, 437, 62, 62, 62,
	291, 291, 290, 290, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 143,
	143, 194, 194, 57, 57, 57, 12, 12, 12, 479,
	479, 479, 61, 61, 61, 61, 193, 193, 193, 193,
	193, 193, 472, 472, 471, 471, 195, 195, 493, 493,
	67, 67, 67, 67, 67, 67, 56, 56, 56, 56,
	56, 494, 494, 312, 312, 310, 310, 309, 309, 259,
	259, 364, 198, 198, 172, 172, 172, 23, 17, 17,
	33, 33, 34, 34, 29, 29, 481, 481, 482, 482,
	89, 89, 93, 93, 93, 101, 101, 142, 142, 142,
	142, 142, 142, 142, 37, 37, 37, 37, 49, 49,
	49, 49, 99, 496, 496, 496, 100, 100, 100, 495,
	495, 192, 192, 323, 323, 324, 324, 497, 497, 325,
	325, 325, 325, 186, 185, 187, 187, 54, 54, 54,
	181, 181, 182, 182, 183, 183, 184, 184, 498, 498,
	86, 86, 86, 145, 145, 229, 229, 229, 319, 319,
	319, 254, 254, 203, 203, 322, 322, 320, 320, 320,
	320, 288, 288, 288, 144, 144, 267, 267, 280, 280,
	281, 281, 375, 375, 282, 98, 98, 159, 159, 157,
	157, 157, 157, 157, 157, 157, 157, 164, 164, 165,
	165, 166, 166, 167, 168, 168, 168, 168, 271, 271,
	169, 169, 169, 158, 158, 158, 160, 160, 160, 160,
	160, 160, 160, 163, 163, 163, 163, 170, 170, 170,
	162, 162, 446, 446, 446, 448, 448, 449, 445, 445,
	447, 447, 492, 492, 293, 293, 293, 251, 252, 250,
	250, 257, 257, 256, 258, 258, 363, 363, 363, 173,
	173, 173, 285, 285, 285, 285, 286, 286, 315, 315,
	313, 313, 313, 313, 314, 314, 316, 316, 316, 317,
	317, 318, 318, 284, 284, 344, 344, 161, 161, 161,
	264, 264, 264, 265, 265, 335, 335, 335, 335, 335,
	335, 336, 336, 334, 334, 334, 334, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 367, 368, 368, 266,
	266, 369, 321, 321, 463, 463, 463, 464, 464, 361,
	361, 370, 370, 370, 370, 370, 370, 359, 359, 360,
	360, 376, 377, 377, 297, 297, 297, 297, 295, 295,
	298, 298, 298, 298, 296, 296, 371, 371, 371, 371,
	287, 287, 372, 372, 372, 372, 373, 330, 331, 331,
	381, 381, 381, 381, 396, 263, 263, 263, 263, 263,
	499, 499, 382, 382, 382, 382, 382, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 386,
	386, 386, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	395, 395, 395, 395, 395, 387, 387, 392, 392, 393,
	393, 393, 388, 389, 394, 394, 394, 394, 500, 500,
	398, 398, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 384, 384, 384, 391, 391, 391, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	305, 305, 307, 307, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 339,
	339, 339, 339, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 440, 440,
	440, 440, 440, 440, 440, 440, 443, 443, 444, 444,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 450,
	450, 451, 451, 453, 453, 454, 454, 455, 456, 456,
	456, 457, 458, 458, 452, 452, 459, 459, 459, 459,
	460, 460, 461, 461, 461, 461, 461, 462, 462, 462,
	462, 462, 350, 350, 351, 351, 357, 357, 357, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 196, 196, 196, 196, 196,
	276, 276, 274, 274, 274, 277, 277, 275, 275, 273,
	273, 272, 272, 347, 347, 345, 345, 349, 349, 299,
	299, 397, 397, 397, 397, 397, 397, 397, 397, 300,
	300, 300, 308, 301, 301, 302, 302, 302, 302, 302,
	341, 342, 303, 303, 303, 343, 343, 352, 356, 356,
	355, 354, 354, 353, 353, 332, 332, 333, 333, 283,
	283, 501, 501, 279, 279, 374, 374, 374, 374, 232,
	232, 268, 268, 231, 231, 224, 224, 225, 225, 225,
	225, 261, 261, 358, 358, 399, 399, 400, 400, 401,
	401, 402, 402, 403, 404, 405, 346, 346, 213, 212,
	200, 201, 211, 210, 209, 199, 202, 206, 207, 208,
	204, 205, 219, 218, 217, 223, 215, 216, 379, 226,
	226, 227, 227, 227, 228, 228, 228, 228, 197, 197,
	220, 220, 221, 222, 222, 214, 214, 214, 188, 188,
	188, 189, 189, 190, 190, 412, 412, 410, 410, 410,
	411, 411, 411, 411, 409, 409, 409, 409, 409, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 418, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 421,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 1, 3,
	4, 6, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	5, 5, 6, 6, 4, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 6, 5, 6, 6, 4, 8,
	3, 4, 10, 3, 6, 4, 3, 1, 3, 2,
	1, 1, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 0, 6, 7, 2, 5, 6, 2, 1,
	3, 1, 3, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	6, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 2, 7, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	4, 3, 3, 4, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	2, 6, 4, 7, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 1, 2, 0, 3, 3, 2, 3,
	6, 3, 11, 14, 0, 2, 4, 3, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	1, 2, 8, 4, 2, 5, 5, 5, 2, 9,
	10, 6, 5, 3, 1, 5, 8, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 11, 7, 5, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	6, 7, 6, 5, 3, 4, 16, 19, 15, 18,
	4, 0, 2, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 2, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 8, 11, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 8, 5, 3, 4, 3,
	0, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 6, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 2,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 478, -80, -50, -48, -83, -84, -69,
	-85, -79, -97, -101, -89, -103, -142, -147, -3, -36,
	-38, -51, -68, -70, -78, -87, -86, -88, -90, -94,
	-93, -82, -42, -98, -102, -111, -143, -144, -145, 87,
	72, 129, 110, 115, 162, 302, 334, 344, 328, -106,
	-107, 363, -37, -49, -100, -99, 323, -4, -12, 27,
	41, -39, -40, -41, 57, -57, -53, -63, -483, -55,
	89, -447, -71, -74, -487, 120, 135, 179, 294, -91,
	-92, 330, 332, 136, -44, -43, 130, -157, -159, -104,
	-105, -146, -112, -113, -114, -115, -116, -117, -118, -119,
	-120, -121, -122, -123, -124, -125, -126, -127, -132, -128,
	-129, -130, -131, -133, -134, -135, -136, -137, -138, -139,
	367, 414, 42, 377, 73, 123, 338, 21, -5, -6,
	-7, -8, -9, -10, -11, -52, -54, -56, -58, -59,
	-60, -67, -61, -62, -446, -72, -73, -75, -76, -77,
	329, -160, -158, 475, 428, -14, -19, -20, -15, -16,
	-18, -21, -17, -25, -30, -31, -27, -28, -26, -29,
	-32, -33, -34, -35, -23, -24, -13, -22, 446, 454,
	-163, -161, -162, -170, 351, 436, 391, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, -215, -220, -221,
	-222, -214, -188, -418, -421, 4, -416, -419, 141, 187,
	260, 21, 22, 23, 24, 25, 27, 38, 40, 39,
	41, 42, 45, 48, 49, 47, 52, 53, 54, 55,
	56, 57, 58, 61, 66, 71, 72, 73, 74, 75,
	76, 82, 79, 80, 81, 84, 86, 87, 88, 90,
	92, 93, 101, 102, 103, 104, 105, 106, 110, 113,
	112, 115, 118, 119, 120, 122, 124, 125, 127, 129,
	130, 133, 131, 397, 132, 134, 135, 136, 137, 147,
	148, 149, 151, 152, 154, 156, 160, 161, 163, 167,
	169, 170, 171, 172, 178, 179, 181, 182, 183, 188,
	184, 189, 193, 196, 195, 197, 198, 199, 190, 204,
	208, 209, 210, 212, 213, 216, 217, 218, 219, 220,
	223, 222, 225, 228, 229, 232, 233, 236, 237, 238,
	239, 241, 242, 245, 243, 246, 244, 247, 250, 248,
	249, 252, 253, 258, 256, 254, 255, 262, 265, 176,
	267, 268, 270, 271, 272, 288, 275, 276, 277, 280,
	281, 284, 287, 289, 290, 291, 292, 293, 294, 295,
	297, 298, 300, 302, 303, 305, 307, 308, 309, 310,
	311, 312, 313, 315, 316, 318, 319, 320, 321, 322,
	323, 328, 325, 326, 327, 329, 330, 331, 332, 334,
	336, 337, 338, 339, 341, 343, 364, 365, 379, 344,
	345, 346, 347, 348, 349, 350, 354, 358, 355, 356,
	357, 352, 353, 359, 360, 361, 363, 366, 367, 369,
	370, 372, 373, 375, 376, 377, 378, 380, 383, 384,
	385, 381, 382, 390, 388, 389, 392, 393, 394, 395,
	396, 398, 400, 408, 409, 411, 414, 415, 416, 406,
	418, 419, 422, 423, 424, 427, 425, 426, 432, 428,
	430, 433, 434, 435, 441, 440, 447, 448, 450, 451,
	452, 33, 43, 44, 46, 50, 62, 63, 64, 67,
	107, 108, 128, 138, 139, 150, 164, 166, 173, 174,
	175, 194, 200, 202, 206, 226, 264, 266, 282, 286,
	299, 301, 314, 340, 371, 386, 401, 402, 403, 404,
	410, 412, 436, 437, 438, 442, 449, 273, -208, 2,
	-188, -188, 302, 26, 2, 26, 298, 353, 393, 395,
	2, -470, -262, 2, 26, -191, -188, 89, 162, 351,
	-208, 2, -470, -262, 24, 2, -188, 2, -192, 2,
	344, -188, 478, 84, 233, 66, 340, 360, -109, 409,
	-108, 401, 346, -110, -408, 2, 250, -188, 478, 478,
	478, 391, 187, 103, 389, 478, 2, 391, 291, 440,
	352, 103, 311, 187, -479, 336, 165, 429, 405, -465,
	2, 4, -419, -416, -225, -224, 391, 103, -222, -214,
	468, -221, 478, 478, 478, 2, 209, 210, 310, 309,
	360, 361, 478, 478, 2, 137, 25, 60, 83, 86,
	109, 157, 160, 278, -484, 242, 288, 308, 359, 390,
	398, 411, -478, 378, 61, 346, -477, -479, 416, 118,
	-309, 103, 233, 161, 423, 395, 393, 421, 113, 193,
	426, 425, 478, 25, 60, 69, 86, 118, 137, 157,
	160, -486, 288, 308, 343, 346, 359, 390, 398, 416,
	411, 2, 440, 352, 391, 187, 103, -479, 306, -80,
	2, 475, 29, 28, 363, -153, 391, 203, 2, -188,
	209, 210, 2, 478, 478, 158, -465, 2, 209, 210,
	2, 203, 2, 61, 348, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 2, -140, 360, 378, 171, 41, 66,
	26, 307, 71, 292, 104, 163, 187, 188, 217, 83,
	84, -311, 40, 210, 209, -362, 392, 347, 353, 388,
	344, 409, 89, 430, 337, 452, 311, 312, 131, 4,
	103, 250, 362, 401, 233, 75, -492, 2, 391, -495,
	2, 409, 409, 2, -495, 2, -495, 2, -495, 2,
	-496, 409, 449, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, -158, -160, -159,
	478, 478, 478, 478, 478, -140, 360, 2, 66, 26,
	-256, -257, 420, 201, 126, 279, -157, -159, 2, -446,
	-406, 2, -337, -422, -339, 466, 467, 459, 259, 453,
	-350, 109, 421, 273, -421, -340, -352, 128, 340, -277,
	8, 9, 5, 6, 7, -197, -383, -346, 413, 140,
	263, -228, 479, 10, 475, -443, -159, -351, 34, 166,
	59, -410, -227, -385, -393, -389, -390, -499, 48, 55,
	54, 398, 249, 354, 355, 372, 356, 357, 45, 432,
	184, 270, 272, 195, 4, 202, -226, -214, -440, -441,
	-416, -417, 194, 200, 196, 371, 197, 198, 199, 44,
	314, 151, 152, 150, 119, 108, 107, 266, 50, 49,
	46, 437, -394, 105, 401, 402, 403, 404, 212, 213,
	-188, -418, 69, 95, 96, 94, 99, 98, 235, 234,
	100, 97, 362, 429, 60, 33, 173, 174, 206, 264,
	175, 67, -442, 382, 91, 159, 192, 177, 205, 207,
	211, 227, 230, 251, 257, 261, 283, 285, 335, 368,
	-500, 438, 138, 139, 286, 299, 386, 410, 412, 164,
	226, 62, 63, -448, 315, -449, -208, -448, 478, 478,
	480, 478, -250, -251, -252, 2, 26, 116, 475, 2,
	-366, 2, -367, -371, -159, 221, -370, 475, -368, 473,
	-215, 274, -444, 341, -440, -441, -197, -214, -227, 4,
	-253, 475, 477, 103, 391, 70, 187, -304, 475, -188,
	26, 273, 405, 480, -348, 475, 273, 158, 276, -188,
	2, 2, 364, 2, 475, -109, 64, 409, 39, 360,
	-324, 2, -325, -185, -186, -187, -376, 208, 305, 313,
	455, 452, -406, -480, 158, 458, 405, -406, -278, 477,
	2, 2, 2, 2, 2, -371, 173, -215, 2, -212,
	-409, 4, -416, -419, -417, -420, 69, -418, 26, 28,
	29, 30, 32, 34, 35, 36, 37, 51, 59, 60,
	65, 68, 70, 78, 83, 89, 94, 95, 97, 96,
	98, 99, 100, 109, 111, 114, 116, 117, 121, 123,
	126, 140, 142, 155, 157, 158, 162, 165, 168, 180,
	191, 201, 203, 221, 224, 231, 234, 235, 259, 263,
	269, 273, 274, 278, 279, 296, 304, 317, 333, 351,
	362, 374, 387, 391, 399, 405, 407, 413, 420, 421,
	429, 431, 439, 443, 444, 445, 446, -421, 2, -371,
	173, 2, -217, 173, -371, -220, 2, -199, -188, 2,
	-211, -409, 2, -231, 173, -215, -216, -220, -414, 173,
	2, -412, 10, -411, 5, 4, -416, -419, -417, -95,
	-414, 475, 405, 480, -268, -224, -225, -261, -188, 477,
	-337, 2, -98, 2, -337, 173, 2, -98, 173, 2,
	-337, 173, 2, -98, 173, 2, 173, -188, 2, 2,
	411, 2, 86, 391, 102, 2, 327, -485, 343, 415,
	440, 2, 2, 2, 2, 2, 2, 391, -204, 2,
	-188, 155, -223, 173, 2, -188, 352, -493, 315, -414,
	173, 2, -218, -220, -218, 187, 204, -199, 173, 2,
	395, 393, 395, 393, 158, 2, 203, 2, 203, 2,
	-372, 2, -373, -367, -215, 473, 2, 2, 2, 2,
	2, 173, -188, 391, 102, 2, 219, 2, 2, 2,
	2, 2, 2, 2, 2, 2, -270, 173, 2, -215,
	-270, 173, 2, -270, 173, 2, -310, 2, 78, -199,
	173, 2, -415, 173, 2, -414, -380, 2, -379, -411,
	436, -80, 475, -80, 475, 360, 475, -414, -215, -215,
	-337, -98, -96, -95, 158, -337, -98, -153, 155, 2,
	103, 391, -140, 2, 155, 431, 2, 8, 2, -414,
	347, 312, 147, 2, 364, 2, 365, 66, -311, 452,
	66, 158, 2, 158, 2, -294, 2, 446, -468, 2,
	273, 158, 2, 158, 2, 158, 2, 158, 2, 158,
	2, 309, 361, 210, 2, -98, 443, -337, 443, 2,
	408, 218, 132, 158, -294, 2, 158, 2, 158, 2,
	5, 2, 379, 2, 208, 305, 379, 2, -215, -488,
	2, 391, 440, 352, 2, 2, 79, 80, 158, 2,
	158, 2, 158, 452, 2, -287, -371, -323, -324, -323,
	405, -256, -257, -140, 364, 2, -164, -285, -166, 155,
	-313, -314, -167, 231, 142, 269, -168, -293, 26, 116,
	-293, -293, 53, 476, 476, 11, 12, 68, 38, 466,
	467, 468, 469, 153, 470, 471, 464, 465, 463, 456,
	457, 461, 214, 215, 85, 460, 458, 77, 240, 342,
	143, 144, 145, 146, 324, 185, 31, 186, 14, 15,
	16, 30, 278, 230, 453, 177, 368, 459, 17, 18,
	19, 205, 207, 261, 43, 180, -196, -233, -337, -337,
	-337, -337, -337, 285, 475, -283, -332, 473, -159, 475,
	475, 475, 5, -405, 8, -159, -337, -350, 476, -275,
	475, -159, -350, -345, 475, 340, 473, 475, -353, -337,
	5, 475, 477, -450, 447, -387, 475, 301, -386, 475,
	-386, -386, 441, -384, 475, 454, 448, 475, -384, 475,
	475, 155, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 441, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 480, -448, -253,
	475, -279, -374, -337, 468, -279, -279, 273, -272, -337,
	91, -297, 211, 251, 159, 227, 335, 192, -334, 479,
	-334, -361, 454, -159, -368, -214, -159, -370, 475, -366,
	-361, -81, -405, -68, -78, -86, -98, -111, -144, -145,
	468, -215, 475, 158, 475, 477, 158, -261, -409, -199,
	-215, -226, -227, -231, 115, -272, -465, -261, -191, 35,
	-347, -381, -382, -383, -392, -388, -391, -395, 48, 55,
	54, 398, 249, 354, 355, 372, 356, 357, 45, 432,
	184, 270, 272, 195, 4, 46, 437, -394, 202, 319,
	320, 318, 322, 321, 194, 200, 196, 371, 197, 198,
	199, 44, 314, 151, 152, 150, 119, 108, 107, 266,
	50, 49, 105, 401, 402, 403, 404, 212, 213, 438,
	382, 62, 63, -465, -261, 155, -408, -272, 35, -324,
	2, 109, -412, 39, -497, 480, 229, -235, 239, 258,
	170, 274, 450, 267, -413, 5, 4, -346, -358, 109,
	233, 202, -399, -401, 8, -400, 9, -402, 466, 467,
	-407, -406, 93, 477, -409, -175, 325, -174, 23, 27,
	120, 434, 133, -243, 189, 291, 128, 375, 424, -474,
	-475, 345, 396, 397, 81, 267, 325, 128, -290, -292,
	35, 101, 253, 287, 56, 182, 244, 245, 377, 442,
	128, 325, -475, 325, -475, -177, 375, 424, -474, -475,
	345, 325, -176, -243, 128, 479, -471, -445, 446, 128,
	-377, -376, -415, -95, -268, 480, 480, -409, 468, 128,
	128, 128, 128, 259, 2, 2, 2, 2, 2, 160,
	-477, -486, 2, 2, 2, -215, 173, -255, 273, -467,
	-269, 391, -215, 259, -217, 173, 2, -220, 440, -471,
	259, 35, 475, 2, -310, 2, 187, -445, 259, -372,
	-229, -215, -367, -229, 363, -208, 35, -334, -334, 128,
	2, 2, 2, -188, -178, 480, 58, 331, 128, -178,
	128, -178, 128, -232, 173, -231, -178, 128, 480, 128,
	476, 480, -380, -380, -414, -151, 446, 158, 89, 475,
	475, -153, -377, 480, -96, -414, -467, -199, 2, -215,
	2, 391, 212, -151, -414, -414, -414, -408, 26, 365,
	2, 309, 361, 80, 365, 2, -215, 391, 103, 187,
	72, -469, 155, -466, 336, -465, -215, 103, -215, 103,
	-215, 103, -215, -215, 2, 2, 2, 2, 76, 76,
	155, 2, 408, 2, 408, 2, -188, -188, -188, 229,
	-215, 155, 391, 187, 391, 187, 103, 391, -178, 480,
	-192, -164, -285, -408, -286, -285, -165, -164, -167, 155,
	313, 425, 253, 366, 216, -314, -313, 26, -337, -318,
	149, 252, -337, -316, -339, 466, 467, -400, -402, -271,
	267, -158, -158, -158, -258, -363, -337, 304, 187, -396,
	-381, -381, -213, -409, 401, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	230, 177, 368, 43, 180, -337, 405, -337, -337, -337,
	-337, 248, 259, 263, 413, 140, 422, 116, 267, -501,
	387, 37, -343, -159, -276, 475, -357, 32, 374, 26,
	-350, 475, 2, -332, -337, -333, -273, -272, -272, 476,
	439, 26, 116, 468, 2, 476, 480, 35, 476, -337,
	-273, -349, -345, -272, -356, -355, 443, -305, -306, 451,
	247, 106, 172, 246, -307, 350, -403, 8, -409, 468,
	-451, 148, 165, 8, -403, -403, 401, 401, -403, -403,
	-403, 475, 476, 2, 476, 2, 476, -337, 2, 476,
	-337, 2, 476, -337, 2, 476, -337, 2, 476, 2,
	-337, -337, -337, -337, -337, -337, -337, -272, -299, 2,
	-397, -272, 4, 451, 247, 106, 172, 246, 350, 5,
	-299, 2, -300, 2, -337, -272, -301, -338, -339, 466,
	467, 459, -350, -302, 2, -337, -273, -337, 51, 224,
	407, -303, -337, 158, -272, -272, 2, -272, 2, -449,
	35, -272, -264, 480, 158, 35, 4, -264, -264, 475,
	476, 480, -298, 169, 243, 238, -298, -366, -297, 211,
	-295, 283, -295, -295, -361, -200, 473, 481, -409, -361,
	-360, -359, 35, -208, 280, -361, -361, 477, 476, -360,
	474, -463, 475, 478, 478, 478, 478, 478, -215, 475,
	-272, -409, 380, 476, 477, 205, 205, 205, 205, 341,
	476, 405, 446, -80, 275, 476, 480, -263, 34, 473,
	-398, 441, 475, 475, -306, 475, 158, -262, -480, 476,
	409, -325, -234, 313, 373, 326, 358, 389, 8, 9,
	8, 9, 480, -409, 480, -481, 83, 405, 70, -328,
	173, 70, -423, -202, 83, -424, -188, 65, 421, 304,
	157, 127, -481, 83, 304, -481, 83, 83, 363, 378,
	53, -371, 38, 38, 26, -98, 225, 158, 452, 391,
	187, 405, -371, -292, -381, 101, 244, 245, 53, -404,
	-399, 466, 467, -404, 53, -404, -404, -404, 446, -217,
	-371, 405, 405, 480, 38, 38, 26, -98, 225, 158,
	405, -231, -200, -472, -193, 90, 254, 237, 255, -194,
	-195, 293, 433, -414, -148, 183, 476, -377, -224, -188,
	477, -337, -98, -337, -98, 128, 2, -493, 219, 475,
	-238, 259, 158, -261, -378, 203, 480, -269, 128, -291,
	-290, 259, -219, 173, 2, -215, 128, 475, 124, 311,
	2, -201, 173, -189, -188, -310, -181, 394, 128, -289,
	431, -319, -98, 475, 109, 35, -319, -280, -281, -375,
	-282, -202, 475, -208, -188, 2, -215, -270, -270, -270,
	-178, 480, 128, -199, -414, -415, -80, -379, 476, 476,
	476, -150, 277, -149, -188, 5, -153, 431, -237, -329,
	-328, -427, -428, -423, 230, 187, 421, 204, 141, -254,
	-203, -202, 102, -151, -95, -377, -151, -151, -377, -377,
	-215, 155, -151, -151, -151, 2, 2, -294, -215, -199,
	-231, -215, -261, -261, -294, -199, -294, -199, -294, -199,
	-98, -337, 360, 155, 155, 477, -294, 311, 103, 391,
	291, 187, -215, -231, -215, -231, -199, -215, -371, -286,
	-165, 274, 216, 366, -316, -317, -339, 340, 341, -317,
	340, 341, 8, 9, 8, 9, -169, 370, 262, -270,
	480, -172, 36, 114, 216, -215, 452, 125, -337, -337,
	405, -501, 387, -343, 125, -337, 248, 263, 413, 140,
	422, 116, 267, 158, 475, -338, -338, 476, -274, -337,
	-337, 474, 483, 476, -257, 480, -256, -337, -272, -272,
	476, 477, -272, -261, 474, 474, 480, 476, -354, -355,
	121, -337, 405, 405, 405, 405, 475, 476, 477, -456,
	284, 475, 475, 476, 476, 480, 476, 452, 452, 476,
	476, 476, -337, 476, 476, 476, 476, 35, 480, 480,
	480, 476, 480, 480, 480, 476, 476, 158, 476, 476,
	-308, 296, 476, 11, 12, 466, 467, 468, 469, 153,
	470, 471, 464, 465, 463, 456, 457, 458, 77, 240,
	342, 14, 15, 16, 205, 180, -338, -338, -338, 476,
	-341, -342, 158, 155, 35, -303, -303, -303, 476, 158,
	-272, 476, 476, 475, 476, -331, -330, 444, -374, -265,
	2, -366, -210, -409, -331, -331, -272, -337, 211, 211,
	-296, 431, 273, -298, -366, -360, -405, -336, -335, 156,
	36, 114, 256, 176, -360, -208, -253, -360, -360, -409,
	-361, -361, -359, 476, -464, -405, 476, -266, -369, -444,
	-257, 477, -151, -409, -141, 5, 263, -141, -141, -141,
	-261, 24, 297, -381, 473, 474, 8, 475, -403, -403,
	-403, -261, 158, -406, -324, 419, 74, 313, 401, -406,
	-174, 325, -202, -202, -215, 259, -328, 173, -180, 259,
	-381, -209, -188, 475, 475, 216, 216, 431, -202, -209,
	216, 173, -202, 173, -209, -209, -473, 313, 268, -337,
	232, 311, 260, -175, 325, -98, -98, -98, 475, -480,
	431, 115, -215, -231, -215, -219, 325, 257, -226, -404,
	-404, -290, 325, -217, -199, -176, -98, -98, -98, 475,
	-200, -177, 325, -193, -414, 263, 427, -471, -151, 158,
	-148, 468, -188, 440, -188, -236, -239, -237, -202, -156,
	448, 446, 128, -230, -215, 473, -151, -414, -215, -223,
	128, -253, 259, -414, 2, 475, 2, 273, 259, -201,
	173, -182, 122, -498, 458, -199, -331, -265, -288, -322,
	333, 273, -254, 436, -208, -288, -267, 480, 158, 458,
	477, -254, 2, -178, -178, -178, -231, -232, -178, -80,
	-80, -151, 480, 475, 458, 458, 475, -414, -414, 476,
	480, -215, -201, 187, 187, -207, -189, 476, 480, 477,
	475, -151, 158, -45, 446, 391, 479, -294, -294, -294,
	360, 360, -188, -211, -199, -215, -212, -231, 155, 155,
	425, -317, 274, 236, -363, -173, 265, -215, 479, -337,
	-337, 125, 125, -337, -338, -338, -337, 125, 158, 475,
	-337, -347, 30, 30, 476, 480, -333, -337, 476, 439,
	-257, -257, 476, 468, -409, 479, 476, -345, 123, -337,
	399, 247, 172, 246, -307, 246, -307, -307, -403, 5,
	-409, 468, -457, -205, 475, -188, 444, -256, -403, -384,
	-384, 476, -396, -381, -337, -337, -337, -337, -337, -337,
	-341, -337, -396, -381, -338, -338, -338, -338, -338, -338,
	-338, -338, -338, -338, -338, -338, -338, -338, -338, -338,
	-338, -338, -338, 116, 259, 267, -338, -342, -341, -337,
	-337, -381, 476, 476, 476, -272, -80, -284, 165, -337,
	-377, 480, -284, -284, 476, -366, -366, 475, -337, 211,
	474, 480, 482, 458, -253, 477, -359, -360, 474, 476,
	480, 476, 480, -321, 35, 476, -409, 276, 5, 8,
	473, 474, -403, 476, 476, 476, -261, -337, 405, 405,
	128, 259, 433, -429, -424, 127, -337, -259, -364, -337,
	475, 475, 2, -171, 120, 363, -482, 2, 431, 128,
	-178, 128, -178, 450, 475, 475, 405, 446, -272, -337,
	-152, 109, -408, -475, 479, -475, 479, 405, 405, 446,
	-272, 405, -414, 263, -415, -151, 2, 2, 2, 476,
	476, 480, -430, 35, 271, 475, 271, -215, -64, 446,
	-376, -405, -217, 35, 128, -471, 2, -215, 128, 273,
	259, -183, 223, -498, -412, -445, -257, -288, -279, 260,
	82, 476, -331, -281, -265, -337, 2, 476, -178, -149,
	-150, -414, -414, -414, -151, -153, -153, -329, 2, 475,
	-201, -189, 475, -153, -203, 2, -415, -98, 277, -215,
	468, -294, -245, -244, 291, 267, -245, 340, 340, 274,
	149, 220, -172, -200, -337, -337, 125, 30, 30, -337,
	-337, -347, 476, -337, -337, -272, 474, 5, -337, 476,
	476, 8, -337, 476, 477, -458, -188, -337, 476, 476,
	476, 476, 480, 480, 476, 476, 476, 476, -342, 158,
	116, 267, 475, 476, 476, -344, 168, 53, -366, -344,
	-344, -296, -261, -366, -335, -200, 473, -409, -405, -369,
	475, 477, 474, 2, 473, 476, -202, -202, -328, 128,
	-431, 83, -433, 68, 141, 89, 259, 263, 421, 304,
	65, 109, 317, 35, 476, 476, 480, -172, -259, -261,
	259, 384, 109, 259, 109, 102, 416, 71, -202, -209,
	-261, -261, -215, 134, 476, 480, 458, 2, 468, 468,
	-219, -217, 134, 476, -200, -241, 190, -202, -428, -425,
	-426, 304, -432, -434, 141, 304, -98, -155, -154, -188,
	5, 2, 475, -238, 277, 474, -291, -98, -219, -312,
	431, -200, -215, 128, -184, 222, -498, -412, -181, -315,
	-313, -320, 475, 273, -98, -257, 458, 476, 476, 102,
	102, -259, 475, 475, -261, 102, 476, -46, -47, 187,
	83, 295, -212, 391, 187, 475, 475, -172, -337, -337,
	-337, 476, -257, -409, 468, -452, 291, 476, -337, -337,
	-338, 158, 475, -347, -453, 445, -337, -272, -453, -453,
	476, -405, 2, 473, 2, -328, -209, -213, -206, -188,
	141, 173, 263, 216, 475, -338, -215, 475, 2, -490,
	111, 191, -327, -491, 88, 385, 181, -364, -173, 476,
	476, 263, 263, -337, -381, 475, -178, -178, 476, 476,
	-337, 405, -408, 87, -406, 2, -475, -337, 405, -242,
	-243, 180, -430, 216, -206, 216, -489, 446, 476, 480,
	458, 458, -236, -156, -65, -66, 406, -376, -253, 475,
	-188, 273, 475, -200, -498, -412, -182, -288, 117, -261,
	83, -315, -343, -151, 475, 475, 476, -259, -259, 476,
	475, -151, 480, 26, 475, 26, 475, -215, -231, -272,
	-272, 476, -257, 53, 476, 476, -338, -347, 476, -454,
	-455, -205, 474, 2, -433, -206, 259, 431, -337, -190,
	475, -337, 191, 112, 178, -241, 475, -326, 431, 317,
	-198, 68, -259, 475, 475, 475, 458, 158, 475, -156,
	289, 475, -240, 273, 102, 253, -154, -340, -340, 476,
	35, -66, 9, 35, -259, -215, -259, 273, -412, -183,
	425, 260, 476, -209, -288, -415, -415, -326, 476, 476,
	-415, -47, -261, -261, 476, 476, -459, 311, 341, 167,
	-272, 476, 480, 35, 128, 169, 476, -435, 241, -188,
	476, 112, 178, -242, -261, -241, 169, -215, -476, 431,
	-213, 476, -247, -246, -244, -249, -248, -244, -272, -406,
	87, 289, -272, -240, -215, -260, -365, -202, 73, 102,
	-241, -98, -98, 476, -312, 476, -215, -184, 363, -330,
	476, 476, -327, -326, 476, 476, 476, 476, -460, -461,
	43, 418, 93, -337, -460, -460, -455, -457, 141, 446,
	-436, -439, -438, 273, 369, 159, 290, 476, 384, 442,
	-490, 476, 446, -253, -337, -326, 476, 480, 436, 476,
	480, 436, 476, 158, 476, 475, 476, 480, 303, 113,
	120, -242, -489, -326, 475, -327, 475, -280, -151, -151,
	-241, -327, -151, -462, 127, -461, 300, 154, 340, 300,
	154, -462, -462, -206, 47, -438, 273, -439, 273, 425,
	113, 47, -435, -241, -246, 180, -248, 158, 289, -261,
	-365, 341, 341, 2, -156, -240, -327, -259, -241, -259,
	-331, -242, -241, 93, 165, 400, 253, 30, 458, -437,
	253, 331, 58, 363, -437, 458, -436, 475, 475, 476,
	2, -240, -241, 476, -242, 476, -242, 340, 281, -461,
	-337, 22, 263, 109, -337, -490, -272, -272, -179, 58,
	331, -242, -326, -494, 444, -327, 476, 476, -494, -327,
	2, -241, -242, 405, -241, -242, 475, -242, -494, -272,
	-494, 476, -242,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 24, 365, 366,
	368, 369, 370, 372, 373, 375, 377, 379, 381, 382,
	384, 386, 388, 389, 390, 391, 392, 394, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	456, 0, 967, 969, 971, 973, 0, 26, 27, 0,
	0, 191, 193, 195, 0, 220, 222, 223, 225, 226,
	-2, 0, 322, 323, 325, -2, -2, 0, 0, 443,
	445, 0, 0, 0, 465, 466, 0, 1055, -2, 459,
	461, 463, 528, 530, 532, 534, 536, 538, 540, 541,
	543, 545, 547, 549, 551, 553, 555, 556, 558, 560,
	562, 564, 566, 568, 570, 572, 574, 576, 578, 580,
	-2, -2, -2, 0, -2, -2, -2, 985, 30, 32,
	34, 36, 38, 40, 42, 274, 275, 277, 279, 281,
	283, 286, 287, 289, 1110, 327, 329, 331, 333, 335,
	0, -2, 1122, 0, 0, 44, 45, 46, 47, 48,
	49, 50, 51, 67, 68, 69, 70, 71, 72, 73,
	74, 55, 57, 58, 62, 63, 65, 53, 0, 0,
	1086, 1088, 1090, 1092, -2, 0, 0, 7, 9, 11,
	13, 15, 17, 19, 21, 367, 371, 374, 376, 378,
	380, 383, 385, 387, 393, 395, 397, 850, 1746, 1760,
	1761, 1762, 1765, 1766, 1767, 1768, 1769, 1770, 2123, 2204,
	2205, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 0, 421, 419,
	1739, 422, 1951, 424, 426, 316, 317, 318, 319, 320,
	321, 0, 436, 430, 435, 437, 439, 440, 441, 442,
	416, 414, 0, 436, 1792, 434, 965, 966, 960, 961,
	1987, 992, 455, -2, -2, -2, 2091, -2, 487, -2,
	494, 2094, 1989, 499, 0, 501, -2, 504, 968, 970,
	972, 0, 0, 0, 0, 28, 29, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 900, 901, 0, 0,
	155, -2, -2, -2, -2, 0, 0, 1832, 1707, 1762,
	1710, 1705, 192, 194, 196, 197, 0, 0, 0, 0,
	0, 0, 221, 224, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 759, 751, 752, 937, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, -2, 0, 0, 252, 357,
	358, 0, 1111, 1111, 0, 0, 0, 0, 172, 163,
	0, 0, 728, 444, 446, 0, 0, 158, 0, 0,
	964, 0, 174, 0, 0, 460, 462, 464, 529, 531,
	533, 535, 537, 539, 542, 544, 546, 548, 550, 552,
	554, 557, 559, 561, 563, 565, 567, 569, 571, 573,
	575, 577, 579, 581, 586, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, -2, -2, -2, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 589,
	591, 592, 593, 0, 644, 661, 0, 890, 1112, 994,
	975, 989, 994, 977, 978, 979, 980, 981, 986, 988,
	982, 983, 984, 31, 33, 35, 37, 39, 41, 43,
	276, 278, 280, 282, 284, 288, 290, -2, 1084, 1085,
	328, 330, 332, 334, 336, 447, 0, 449, 0, 590,
	-2, 0, 1116, 1116, 1116, 0, 0, 1085, 1083, 0,
	452, 453, 508, 509, 1354, 0, 0, 0, 0, 0,
	1604, 1438, 0, 510, -2, 1469, 1471, 2070, 2091, 1603,
	1473, 1474, 1475, 1476, 1477, 0, 0, 1480, 1481, 1482,
	1483, 1484, 0, 1486, 0, 1491, 1492, 1493, 0, 2075,
	1684, 1758, -2, 1257, 1258, 1259, 1260, 1261, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 2081, 1754, 0, 1570, 1507,
	-2, 1779, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1841, -2, -2, -2, -2, -2,
	-2, -2, 1313, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2105, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 0, 2059, 2076, 2077, 2082, 2084,
	2078, 2067, 1532, -2, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	1314, -2, 2071, 2072, 2087, 2088, 2093, 2098, 2099, 2074,
	2083, -2, -2, 1102, 1961, 1105, 850, 1103, 1087, 1089,
	0, 1091, 0, 0, 0, 1096, 1119, 1117, 0, 1158,
	1100, 1101, 1176, 1176, 1200, 0, 1181, 0, 1200, 1111,
	1226, 0, 1187, 1982, 1508, 1509, 0, 1762, 1759, -2,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 423,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	457, 458, 0, 482, 0, 486, 2066, -2, 1797, 2002,
	-2, 490, 995, 999, 1000, 1001, 1002, 0, 0, 0,
	0, 0, 496, 0, 0, 483, 484, 502, 505, 0,
	582, 583, 584, 585, 52, 0, 2076, 1226, 54, 0,
	1729, 1784, 1785, 1786, 1787, 1788, 2105, 2122, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 56, 0,
	2076, 59, 0, 2076, 0, -2, 64, 0, 1735, 66,
	0, 1732, 75, 0, 2076, 0, 1704, -2, -2, 2076,
	898, 175, 176, 1775, 1776, 1780, 1781, 1782, 1783, 1213,
	159, 0, 0, 0, 720, 1701, 1706, 721, 1711, 0,
	198, 199, 200, 201, 202, 2076, 204, 205, 0, 207,
	208, 2076, 210, 211, 0, 213, 2076, 0, 230, 231,
	0, 233, 0, 0, 0, 237, -2, 253, 0, 250,
	0, 241, 242, 244, 245, 246, 247, 0, 294, 292,
	1740, 0, 729, 2076, 731, 1745, 0, 0, 919, -2,
	2076, 895, 924, 1743, 0, -2, 0, 1109, 2076, 1009,
	755, 756, 757, 758, 0, 313, 0, 1022, 0, 1024,
	0, 1045, 1232, 1176, 1176, 0, 254, 255, 256, 257,
	258, 2076, 0, 0, 0, 263, 0, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 150, 2076, 339, 355,
	150, 2076, 342, 150, 2076, 345, 0, 348, 935, 150,
	2076, 351, 352, 2076, 354, 177, 0, -2, 410, 1748,
	-2, 360, 0, 361, 0, -2, 0, 189, 0, 0,
	726, 727, 1213, 161, 0, 962, 963, 0, 0, 467,
	0, 0, 587, 588, 0, 0, 598, 599, 600, 189,
	1990, 1959, 1857, 605, 0, 608, 611, -2, 0, 0,
	0, 0, 615, 0, 620, 621, 622, 0, 725, 624,
	0, 0, 626, 0, 630, 0, 633, 0, 635, 0,
	637, -2, -2, -2, 648, -2, 0, 652, 0, 654,
	0, 0, 0, 0, 669, 670, 0, 675, 0, 678,
	679, 680, 681, 682, 0, 684, 685, 686, 687, 0,
	689, 690, -2, -2, 694, 696, 0, 703, 0, 707,
	0, 711, 0, 594, 595, 150, 1230, 974, -2, 976,
	0, -2, 0, 448, 0, 451, 1137, 1070, 1067, 0,
	1134, 1135, 1071, 0, 0, 0, 1078, 0, 1114, 1115,
	0, 0, 0, 1057, 1058, 0, 0, 0, 0, 1609,
	1610, 1611, 1612, 1613, 1614, 1617, 1618, 1615, 1616, 1619,
	1620, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 1623,
	1624, 0, 0, 1626, 0, 1628, 0, 0, 0, 0,
	0, 0, 1417, 1419, 1692, 0, 0, 1625, 1359, 1360,
	1361, 1396, 1397, 0, 0, 1470, 1689, 1688, 1472, 0,
	1640, 0, 1479, 1485, 1725, -2, 0, 1604, 1635, 0,
	0, 1494, 1495, 1496, 0, 0, 1640, 0, 0, 1683,
	1351, 0, 0, 1572, 0, 1293, 0, 1294, 1295, 0,
	1296, 1297, 1310, 1323, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	0, 1664, -2, 0, 0, 0, 0, 0, 1104, 0,
	0, 1162, 1693, 1697, 1698, 1162, 1162, 0, 0, 1641,
	1223, 1223, 0, 0, 1219, 1219, 1219, 1217, 1200, 0,
	1200, 1210, 0, 1200, 1200, 0, -2, 1181, 0, 0,
	1210, 0, 1194, 398, 400, 402, 404, 405, 406, 408,
	1227, 1228, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 1750, 0, 0, 0, 0, 428, 438, 1111,
	0, 1643, 1249, 1252, 1253, 1254, 1255, 1256, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, -2, 1311, 1313, 1334, 1300,
	1301, 1302, 1303, 1304, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1306, 0, 1281, 1281, 1281,
	1298, 1299, 1322, 1333, 1325, 1333, 1329, 1250, 1251, 1316,
	1317, 1318, 1319, 0, 432, 0, 0, 0, 0, -2,
	492, 497, 498, 0, 0, 997, 0, 1003, 519, 520,
	521, 1005, 1006, 0, 495, 522, 523, 524, 525, 526,
	527, 0, 1713, 1714, 1715, 1716, 1719, 1720, 0, 0,
	493, 512, 500, 0, 506, 76, 957, 115, 0, 957,
	957, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	100, 111, 88, 89, 0, 0, 0, 0, 60, 872,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 0, 99, 0, 94, 78, 0, 0, 0, 101,
	113, 0, 141, 143, 0, 0, 896, 0, 1108, 0,
	180, 1212, 0, 1213, 719, 0, 0, 1763, 1709, 0,
	0, 0, 0, 0, 229, 232, 234, 235, 236, 0,
	918, 0, 243, 240, 285, 821, 2076, 0, 0, 311,
	306, 0, 308, 0, 871, 2076, 869, 1744, 0, 893,
	0, 0, 0, 925, 1772, 930, 936, 1011, 0, 315,
	0, 1025, 1027, 0, 0, 1233, 0, 1235, 1236, 0,
	260, 261, 262, 0, 337, 0, 148, 149, 0, 340,
	0, 343, 0, 150, 2076, 1699, 349, 0, 0, 0,
	1111, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 189, 0, 1213, 189, 189, 1213, 469, 1213,
	471, 0, 0, 601, 189, 189, 189, 606, 607, 609,
	610, -2, -2, 704, 612, 613, 672, 0, 0, 0,
	671, 623, 0, 713, 1978, 723, 672, 1832, 672, 1832,
	672, 1832, 634, 636, 639, 664, 647, 651, 0, 0,
	0, 656, 0, 658, 0, 660, 672, 673, 676, 683,
	688, 0, 0, 0, 0, 0, 0, 0, 889, 0,
	987, 1137, 1070, 450, 1061, 1136, 1062, 1069, 1072, 0,
	0, 1074, 0, 1076, 0, 1132, 1133, 1140, 1141, 0,
	1151, 1152, 1144, 0, -2, 0, 0, 1147, 1148, 1080,
	0, 1097, 1098, 1099, 1123, 1124, 946, 0, 2204, 1355,
	1244, 1356, 1357, 1728, 0, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, -2, -2, -2, -2, -2,
	-2, -2, -2, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, -2, -2, -2, 1394, 1395, -2,
	1627, 1629, 0, 1692, 0, -2, 0, -2, -2, -2,
	-2, 1414, 0, 1416, 1421, 1423, 1425, 0, 0, 0,
	0, 1691, 1435, 1675, 1676, 0, 0, 1606, 1607, 1608,
	1420, 0, 1439, 1690, 1687, 0, 0, 1639, 1122, 1498,
	0, 0, 0, 0, 1505, 1490, 1637, 0, 1636, 0,
	0, 0, 1647, 0, 1682, 1678, 0, 1726, 1350, 1337,
	1338, 1339, 1340, 1341, 1342, 1352, 0, 1723, 1751, 1757,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 1534, 1535, 1536, 1537, 0, 1539, 1540,
	0, 1542, 1543, 0, 1545, 1546, 0, 1548, 1549, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1552,
	0, 1650, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1554, 0, 1556, 1641, 1661, 0, 0, 1440, 0,
	0, 0, 1604, 0, 1559, 1641, 1669, 0, 0, 0,
	0, 0, 1641, 0, 1674, 0, 1566, 0, 1568, 1106,
	0, 0, 1239, 0, 0, 0, 1696, 1239, 1239, 0,
	1157, 0, 0, 1220, 1221, 1222, 0, 0, 1223, 0,
	1214, 1218, 1215, 1216, 1210, 1173, 0, 0, 1730, 1210,
	1179, 1209, 0, 850, 1199, 1210, 1210, 0, -2, 1183,
	1200, 0, 0, 399, 401, 403, 407, 409, 0, 0,
	1122, -2, 189, 849, 0, 0, 0, 0, 0, 418,
	420, 0, 0, 412, 0, 415, 0, 1240, 1243, 0,
	0, -2, 0, 0, 1335, 0, 0, 0, 0, 485,
	0, 996, 1004, 0, 516, 0, 518, 0, 1717, 1721,
	1718, 1722, 0, 507, 0, 0, 0, 0, 956, 119,
	2076, 0, 152, 0, 0, 814, 1736, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 90, 0, 0, 0, 0,
	0, 0, 0, 873, 874, 876, 883, 885, 0, 879,
	1724, 0, 0, 880, 0, 882, 884, 886, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 91, 0, 0,
	0, 0, 1703, 914, 912, 906, 907, 908, 909, 910,
	911, 0, 0, -2, 189, 0, 160, 180, 1702, 1712,
	0, 203, 206, 209, 212, 0, 238, 0, 0, 761,
	734, 0, 0, 293, 189, 0, 0, 307, 0, 867,
	870, 0, 850, 2076, 905, 1742, 0, 0, 0, 0,
	923, 0, 2076, 1731, 1771, 1772, 1013, 1019, 0, 1239,
	0, 1043, 1028, 0, 0, 0, 1043, 1047, 1048, 1050,
	1051, 0, 0, 1234, 0, 264, 356, 150, 150, 150,
	346, 0, 0, 150, 178, 353, 359, 411, 1111, 1111,
	189, 187, 1936, 185, 182, 184, 0, 0, 0, 762,
	764, 765, 766, 767, 0, 1772, 0, 1887, 1772, 0,
	1031, 1033, 0, 156, 162, 189, 0, 305, 468, 473,
	596, 0, 602, 603, 604, 641, 666, 614, 616, 617,
	618, 0, 724, 722, 625, 672, 628, 672, 631, 672,
	650, 653, 655, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 708, 709, 710, 712, 1231, 1065,
	1066, 1068, 0, 1077, 0, 0, 1146, -2, -2, 1145,
	1149, 1150, -2, -2, -2, -2, 1073, 0, 1082, 1079,
	0, 1131, 944, 945, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1436, 0, -2, 1415, 1418, 1422, 1424,
	1426, 0, 0, 0, 0, 0, 0, 1630, 0, 1632,
	1437, 1685, 1688, 1602, 0, 0, 1121, 1122, 1122, 0,
	1504, 0, 1638, 0, 1645, 1646, 0, 1497, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 1305, 1279, 0, 1333, 1331, 1332, 1326,
	1333, 1330, 0, 1538, 1541, 1544, 1547, 0, 0, 0,
	0, 1527, 0, 0, 0, 1531, 1551, 0, 1553, 1555,
	0, 0, 1557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1443, 1444, 1445, 1558,
	1667, 1668, 0, 0, 0, 0, 0, 0, 1564, 0,
	1673, 1565, 1567, 1111, 1159, 1154, 1238, 0, 1694, 1213,
	1161, 1163, 1695, 1733, 1154, 1154, 0, 1642, 0, 0,
	1204, 0, 0, 0, 1206, 1177, 0, 0, 1171, 0,
	1167, 1168, 1169, 1170, 1178, 850, 1208, 1180, 1184, 1751,
	0, 1210, 0, 1195, 0, 1197, 1229, 0, 1189, 1192,
	0, 0, 190, 1764, 214, 218, 219, 215, 216, 217,
	427, 0, 0, 1644, 0, 1245, 0, 0, 0, 0,
	0, 431, 0, 481, -2, 514, 515, 517, 0, 513,
	116, 957, 0, 0, 948, 0, 121, 2076, 130, 0,
	790, 0, 1734, 0, 0, 0, 0, 0, 959, 0,
	0, 2076, 150, 2076, 150, 133, 136, 0, 140, 138,
	0, 0, 781, 77, 957, 80, 84, 92, 0, 0,
	0, 98, 0, 0, 0, 950, 0, 877, 878, 881,
	887, 61, 0, 952, 947, 142, 82, 86, 93, 0,
	954, 79, 0, 913, 891, 892, 0, 897, 153, 0,
	189, 1708, 0, 0, 0, 0, 0, 760, 832, 0,
	0, 0, 0, 299, 295, 0, 304, 310, 309, 730,
	0, 0, 0, -2, 920, 0, 922, 0, 0, 0,
	2076, 1015, 1019, 0, 1018, 1109, 1122, 314, 1020, 1043,
	0, 0, 0, 1030, 1026, 1023, 1239, 0, 0, 0,
	0, 0, 259, 338, 341, 344, 1700, 150, 350, 362,
	363, 164, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 1772, 1772, 0, 1738, 0, 0, 0,
	0, 157, 0, 470, 0, 0, 0, 627, 629, 632,
	657, 659, 672, 697, 698, 776, 0, 776, 0, 0,
	1075, 0, 1143, 1081, 1125, 1126, 0, 946, 0, 1358,
	1399, 0, 0, -2, 0, 0, 1403, 0, 0, 0,
	-2, 0, 0, 0, 1631, 1633, 0, 1687, 1499, 0,
	0, 0, 1503, 1487, 1488, 0, 1605, 1648, 1677, 1681,
	0, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 0, 1727,
	1752, 1756, 1578, 1579, 1583, 1741, 0, 0, 0, 1324,
	1328, 1510, 0, 0, 0, 0, 0, 0, 0, 1649,
	1660, 1662, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, -2, -2, -2, 1459, 1460, 1461,
	-2, -2, -2, 0, 0, 0, 1663, 1665, 1666, 1670,
	1671, 0, 1561, 1562, 1563, 1672, 0, 1156, 0, 1237,
	1160, 0, 1156, 1156, 1118, 1202, 0, 0, 1225, 0,
	1174, 0, 1175, 0, 1207, 0, 1182, 1185, 1186, 1196,
	0, 1188, 0, 1191, 0, 1499, -2, 429, 413, 0,
	0, 1247, 0, 1308, 1312, 1336, 433, 1211, 0, 0,
	0, 0, 151, 788, 813, 0, 0, 0, 939, 946,
	0, 0, 819, 123, 0, 0, 0, 131, 0, 0,
	128, 0, 135, 139, 0, 0, 0, 0, 0, 95,
	96, 97, 0, 102, 0, 103, 0, 0, 0, 0,
	0, 0, 916, 917, 179, 154, 228, 904, 239, 770,
	820, 0, 822, 0, 735, 0, 0, 821, 291, 0,
	298, 0, 871, 0, 0, 894, 921, 934, 0, 0,
	0, 1017, 1019, 0, 1010, 1011, 1139, 1021, 1041, -2,
	1040, 0, 1122, 1049, 1046, 1052, 1053, 0, 347, 186,
	0, 181, 183, 0, 167, 0, 0, 763, 768, 0,
	0, 0, 0, 0, 1032, 1034, 0, 173, 0, 597,
	619, 667, 699, 775, 0, 0, 701, 0, 0, 1142,
	1129, 1130, 1127, 946, 1401, 1405, 0, 0, 0, 1407,
	-2, 0, 1429, -2, -2, 1634, 1686, 1478, 1122, 1500,
	1502, 1489, 1680, 1353, 0, 1585, 1582, 0, 1569, 1280,
	1522, 1523, 0, 0, 1526, 1528, 1529, 1530, 1659, 0,
	0, 0, 0, 1560, 1107, 1574, 0, 0, 1164, 1574,
	1574, 1203, 0, 1205, 1172, 1165, 0, 1752, 1198, 1190,
	0, 0, 1241, 1246, 0, 1307, 117, 118, 120, 0,
	789, 0, 792, 0, 0, 0, 0, 799, 800, 0,
	0, 0, 0, 0, 836, 846, 0, 1131, 0, 0,
	0, 125, 145, 0, 0, 958, 0, 0, 150, 150,
	0, 0, 949, 0, 0, 0, 0, 105, 0, 0,
	951, 953, 0, 0, 955, 778, 0, 832, 824, 825,
	826, 0, 831, 833, 0, 0, 748, 0, 744, 0,
	0, 737, 761, 734, 0, 296, 868, 902, 850, 0,
	0, 0, 0, 0, 1007, 1019, 0, 1012, 1013, 1043,
	1138, 0, 0, 0, 1029, 1139, 0, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 189, 472, 474, 0,
	0, 480, 774, 0, 0, 0, 0, 1128, 1409, -2,
	-2, 1430, 0, 1753, 1755, 1122, 0, 1571, 0, 0,
	-2, 0, 0, 0, 1093, 0, 1155, 1153, 1094, 1095,
	1224, 0, 1193, 0, 1248, 122, 0, 793, 794, 1737,
	796, 0, 798, 801, 0, 804, 1774, 0, 808, 815,
	837, 0, 770, 0, 842, 843, 844, 940, 941, 848,
	0, 124, 126, 144, 943, 0, 127, 134, 0, 0,
	81, 0, 0, 1825, 108, 106, 104, 83, 0, 734,
	777, 0, 823, 0, 834, 835, 738, 0, 736, 0,
	0, 0, 0, 0, 297, 300, 0, 303, 0, 0,
	933, 0, 0, 0, 0, 1014, 1015, 312, 0, 0,
	0, 1043, 1054, 166, 0, 0, 848, 0, 0, 812,
	0, 171, 0, 476, 0, 478, 0, 700, 702, 0,
	0, 1501, 1589, 0, 1524, 1525, -2, 0, 1467, 1573,
	1575, 0, 1166, 1242, 791, 795, 0, 0, 0, 854,
	0, 0, 0, 840, 841, 778, 0, 770, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 746, 0, 749, 0, 745, 742, 743, 770,
	0, 301, 302, 0, 0, 934, 0, 0, 1016, 1017,
	0, 1036, 1037, 1039, 1044, 0, 0, 846, 848, 811,
	0, 475, 0, 0, 705, 706, 0, 0, 0, 0,
	1584, 1468, 0, 0, 0, 0, 803, 859, 0, 0,
	0, 838, 839, 836, 0, 817, 0, 850, 129, 0,
	942, 848, 0, 782, 0, 0, 785, 0, 0, 109,
	1825, 107, 0, 732, 0, 0, 828, 830, 0, 750,
	778, 748, 903, 848, 0, 846, 0, 1008, 0, 1038,
	189, 189, 770, 846, 189, 477, 479, 1581, 1601, 1590,
	-2, 2038, 1829, 0, 1601, 1601, 1576, 1577, 0, 0,
	805, 855, 856, 0, 851, 852, 853, 1773, 806, 807,
	816, 845, 0, 854, 146, 770, 779, 0, 0, 780,
	0, 0, 112, 0, 114, 0, 827, 0, 0, 0,
	0, 734, 738, 846, 0, 770, 0, 1239, 168, 169,
	778, 770, 170, 1586, 0, 0, 1592, 1593, 1594, 1595,
	1596, 1587, 1588, 797, 0, 857, 0, 858, 0, 0,
	0, 0, 859, 132, 783, 0, 786, 0, 110, 0,
	829, 739, 0, 741, 738, 747, 770, 0, 778, 0,
	1035, 809, 778, 0, 1598, 1599, 0, 0, 0, 860,
	0, 863, 864, 0, 861, 0, 836, 0, 0, 773,
	740, 733, 778, 848, 931, 846, 810, 1597, 1600, 1591,
	802, 862, 865, 866, 847, 818, 0, 0, 769, 771,
	772, 931, 846, 928, 0, 770, 778, 0, 926, 770,
	932, 778, 784, 0, 778, 931, 0, 931, 929, 0,
	927, 778, 787,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 464, 3, 470, 465, 3,
	475, 476, 468, 466, 480, 467, 477, 469, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 483, 3,
	456, 458, 457, 461, 479, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 473, 3, 474, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 481, 463, 482, 459,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 460, 57799, 462,
	57800, 472, 57801, 478, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1128
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1133
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1137
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1138
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1139
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1140
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1141
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1142
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1143
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1144
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1149
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1159
		{
			return helpWith(sqllex, "ALTER")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1162
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1163
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1164
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1165
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1166
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1167
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1168
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1278
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 61:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1282
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 64:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1351
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1355
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1365
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1371
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1380
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1395
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1401
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1409
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1423
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1433
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1444
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1463
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1470
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1487
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1498
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1506
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1517
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1527
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1537
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1546
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1557
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 106:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1563
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1589
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1615
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1631
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1714
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 132:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1763
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = nil
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = nil
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1866
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1896
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1966
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1972
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1987
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1992
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1996
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = nil
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2093
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2107
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2108
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2109
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2110
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2169
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2217
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2253
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2255
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			return helpWith(sqllex, "CREATE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.CreateExtension{}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.CreateExtension{}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2277
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2279
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2280
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2281
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{
			return unimplemented(sqllex, "create operator")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			return unimplemented(sqllex, "create publication")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "create rule")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "create server")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2292
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2295
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2296
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2299
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2300
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2310
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			return unimplemented(sqllex, "drop server")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2320
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2327
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2328
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2329
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2330
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2333
		{
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2353
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2380
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2403
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2414
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2442
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2477
		{

			sqlVAL.union.val = nil
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			return helpWith(sqllex, "DELETE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2505
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2529
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "DROP")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2535
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2536
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2537
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2568
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2655
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2678
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2687
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2695
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2711
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2719
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "DELETE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "INSERT")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "INSERT")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2804
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2829
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2837
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2870
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			return helpWith(sqllex, "GRANT")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "RESET")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "RESET")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "USE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3015
		{
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "USE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3039
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3083
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3232
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "set from current")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = tree.Low
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = tree.Normal
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = tree.High
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "SHOW")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.str = "client_encoding"
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.str = "timezone"
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3478
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3526
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3535
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3632
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = true
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = true
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = false
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3777
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = true
		}
	case 662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = false
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = true
		}
	case 672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = false
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3871
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3893
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3903
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3962
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3970
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4007
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4030
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4046
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4186
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4341
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4356
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{

			sqlVAL.union.val = nil
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4398
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4403
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4408
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 746:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4435
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Temporary:     sqlDollar[2].union.persistenceType(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4449
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Temporary:     sqlDollar[2].union.persistenceType(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4464
		{
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = false
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = true
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4528
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4544
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4549
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.str = ""
		}
	case 778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 787:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4738
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4752
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 809:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4849
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4887
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5128
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5137
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = true
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5249
		{

			sqlVAL.union.val = true
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5264
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5275
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5285
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = nil
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5339
		{
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5340
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5346
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5348
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5350
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5352
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5356
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5372
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5388
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5405
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5420
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5438
		{
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = false
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = true
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = false
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.str = ""
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = tree.Descending
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5544
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5550
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5558
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5564
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5572
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5578
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5596
		{
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5599
		{
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5600
		{
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5701
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5702
		{
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5703
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5723
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5771
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5836
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.str = ""
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.str = ""
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.str = ""
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5880
		{
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5928
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6003
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6012
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6390
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = nil
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6434
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = true
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = false
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = false
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6464
		{
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6520
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6641
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6697
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6734
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6755
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6786
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6825
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6835
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6881
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6911
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6944
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = nil
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = true
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = false
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.str = tree.AstFull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.str = tree.AstRight
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.str = tree.AstInner
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7063
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7064
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.str = tree.AstHash
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.str = ""
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7213
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7240
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7242
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = types.String
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = types.Name
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7303
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = types.INet
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = types.Oid
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7352
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7391
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = nil
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = types.Int2
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = types.Int2
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = types.Int4
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = types.Int
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = types.Int
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = types.Int
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = types.Float4
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = types.Float4
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = types.Float
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = types.Float
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = types.Bool
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = types.Bool
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = types.RegType
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7515
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = types.Float
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7534
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7540
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7562
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = types.String
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = true
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = false
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = types.Date
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7619
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7633
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7650
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7667
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = false
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = false
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = types.Interval
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7691
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = nil
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7869
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7882
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8192
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8214
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8413
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8463
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8493
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8504
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8505
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8520
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8531
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8702
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8722
		{
			return unimplemented(sqllex, "treat")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8753
		{
			return unimplemented(sqllex, "within group")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.str = ""
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8891
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8988
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.Any
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.Some
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = tree.All
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.Div
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.LT
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.GT
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.LE
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.GE
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = tree.NE
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.Like
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9568
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9755
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.str = ""
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
